; Listing generated by Microsoft (R) Optimizing Compiler Version 19.40.33811.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	??_C@_02LMMGGCAJ@?3?5@				; `string'
PUBLIC	??_C@_08LLGCOLLL@iostream@			; `string'
PUBLIC	??_C@_08EPJLHIJG@bad?5cast@			; `string'
PUBLIC	??_C@_0BA@ELKIONDK@bad?5locale?5name@		; `string'
PUBLIC	??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@	; `string'
PUBLIC	??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@	; `string'
PUBLIC	??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@	; `string'
PUBLIC	??_C@_0BC@LCLEKDHB@Client?5connected?$CB@	; `string'
PUBLIC	??_R0?AVfailure@ios_base@std@@@8		; std::ios_base::failure `RTTI Type Descriptor'
PUBLIC	??_R0?AVruntime_error@std@@@8			; std::runtime_error `RTTI Type Descriptor'
PUBLIC	??_R2system_error@std@@8			; std::system_error::`RTTI Base Class Array'
PUBLIC	??_R4facet@locale@std@@6B@			; std::locale::facet::`RTTI Complete Object Locator'
PUBLIC	??_R1A@?0A@EA@system_error@std@@8		; std::system_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3?$ctype@D@std@@8				; std::ctype<char>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R4runtime_error@std@@6B@			; std::runtime_error::`RTTI Complete Object Locator'
PUBLIC	??_R4_System_error@std@@6B@			; std::_System_error::`RTTI Complete Object Locator'
PUBLIC	??_R3_Facet_base@std@@8				; std::_Facet_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R1A@?0A@EA@bad_cast@std@@8			; std::bad_cast::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R0?AV?$ctype@D@std@@@8			; std::ctype<char> `RTTI Type Descriptor'
PUBLIC	??_R3_Crt_new_delete@std@@8			; std::_Crt_new_delete::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R1A@?0A@EA@runtime_error@std@@8		; std::runtime_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R2_System_error@std@@8			; std::_System_error::`RTTI Base Class Array'
PUBLIC	??_R0?AVsystem_error@std@@@8			; std::system_error `RTTI Type Descriptor'
PUBLIC	?_Static@?1???$_Immortalize_memcpy_image@V_Iostream_error_category2@std@@@std@@YAAEBV_Iostream_error_category2@1@XZ@4V21@B ; `std::_Immortalize_memcpy_image<std::_Iostream_error_category2>'::`2'::_Static
PUBLIC	??_R4system_error@std@@6B@			; std::system_error::`RTTI Complete Object Locator'
PUBLIC	??_R1A@?0A@EA@_Facet_base@std@@8		; std::_Facet_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV_Facet_base@std@@@8			; std::_Facet_base `RTTI Type Descriptor'
PUBLIC	??_7ctype_base@std@@6B@				; std::ctype_base::`vftable'
PUBLIC	??_R3_System_error@std@@8			; std::_System_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AU_Crt_new_delete@std@@@8			; std::_Crt_new_delete `RTTI Type Descriptor'
PUBLIC	??_R0?AV_Iostream_error_category2@std@@@8	; std::_Iostream_error_category2 `RTTI Type Descriptor'
PUBLIC	??_R17?0A@EA@_Crt_new_delete@std@@8		; std::_Crt_new_delete::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	_CTA2?AVbad_cast@std@@
PUBLIC	_CT??_R0?AVsystem_error@std@@@8??0system_error@std@@QEAA@AEBV01@@Z40
PUBLIC	??_R2bad_cast@std@@8				; std::bad_cast::`RTTI Base Class Array'
PUBLIC	??_R4failure@ios_base@std@@6B@			; std::ios_base::failure::`RTTI Complete Object Locator'
PUBLIC	??_7bad_cast@std@@6B@				; std::bad_cast::`vftable'
PUBLIC	??_R4_Iostream_error_category2@std@@6B@		; std::_Iostream_error_category2::`RTTI Complete Object Locator'
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Iostream_error_category2@std@@8	; std::_Iostream_error_category2::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@facet@locale@std@@8		; std::locale::facet::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVbad_cast@std@@@8			; std::bad_cast `RTTI Type Descriptor'
PUBLIC	_TI2?AVbad_cast@std@@
PUBLIC	??_7?$ctype@D@std@@6B@				; std::ctype<char>::`vftable'
PUBLIC	??_R2failure@ios_base@std@@8			; std::ios_base::failure::`RTTI Base Class Array'
PUBLIC	??_R0?AUctype_base@std@@@8			; std::ctype_base `RTTI Type Descriptor'
PUBLIC	??_R3failure@ios_base@std@@8			; std::ios_base::failure::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_7facet@locale@std@@6B@			; std::locale::facet::`vftable'
PUBLIC	??_R2?$ctype@D@std@@8				; std::ctype<char>::`RTTI Base Class Array'
PUBLIC	??_7_Iostream_error_category2@std@@6B@		; std::_Iostream_error_category2::`vftable'
PUBLIC	_TI5?AVfailure@ios_base@std@@
PUBLIC	??_7runtime_error@std@@6B@			; std::runtime_error::`vftable'
PUBLIC	??_7_System_error@std@@6B@			; std::_System_error::`vftable'
PUBLIC	??_R1A@?0A@EA@failure@ios_base@std@@8		; std::ios_base::failure::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVfacet@locale@std@@@8			; std::locale::facet `RTTI Type Descriptor'
PUBLIC	??_R3facet@locale@std@@8			; std::locale::facet::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R3ctype_base@std@@8				; std::ctype_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PEBVfacet@locale@2@EB ; std::_Facetptr<std::ctype<char> >::_Psave
PUBLIC	_CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R1A@?0A@EA@_System_error@std@@8		; std::_System_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3bad_cast@std@@8				; std::bad_cast::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R4ctype_base@std@@6B@			; std::ctype_base::`RTTI Complete Object Locator'
PUBLIC	??_R4bad_cast@std@@6B@				; std::bad_cast::`RTTI Complete Object Locator'
PUBLIC	??_R1A@?0A@EA@_Crt_new_delete@std@@8		; std::_Crt_new_delete::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?_Iostream_error@?4??message@_Iostream_error_category2@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z@4QBDB ; `std::_Iostream_error_category2::message'::`5'::_Iostream_error
PUBLIC	_CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R4_Facet_base@std@@6B@			; std::_Facet_base::`RTTI Complete Object Locator'
PUBLIC	??_R3_Iostream_error_category2@std@@8		; std::_Iostream_error_category2::`RTTI Class Hierarchy Descriptor'
PUBLIC	_CT??_R0?AV_System_error@std@@@8??0_System_error@std@@QEAA@AEBV01@@Z40
PUBLIC	??_R2runtime_error@std@@8			; std::runtime_error::`RTTI Base Class Array'
PUBLIC	_CTA5?AVfailure@ios_base@std@@
PUBLIC	??_7_Facet_base@std@@6B@			; std::_Facet_base::`vftable'
PUBLIC	??_R1A@?0A@EA@ctype_base@std@@8			; std::ctype_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV_System_error@std@@@8			; std::_System_error `RTTI Type Descriptor'
PUBLIC	??_R2_Iostream_error_category2@std@@8		; std::_Iostream_error_category2::`RTTI Base Class Array'
PUBLIC	??_R2_Crt_new_delete@std@@8			; std::_Crt_new_delete::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ctype@D@std@@8			; std::ctype<char>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	_CT??_R0?AVfailure@ios_base@std@@@8??0failure@ios_base@std@@QEAA@AEBV012@@Z40
PUBLIC	??_R3system_error@std@@8			; std::system_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Facet_base@std@@8				; std::_Facet_base::`RTTI Base Class Array'
PUBLIC	??_R2facet@locale@std@@8			; std::locale::facet::`RTTI Base Class Array'
PUBLIC	??_R4?$ctype@D@std@@6B@				; std::ctype<char>::`RTTI Complete Object Locator'
PUBLIC	??_7system_error@std@@6B@			; std::system_error::`vftable'
PUBLIC	??_R3runtime_error@std@@8			; std::runtime_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ctype_base@std@@8				; std::ctype_base::`RTTI Base Class Array'
PUBLIC	??_7failure@ios_base@std@@6B@			; std::ios_base::failure::`vftable'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__imp_accept:PROC
EXTRN	free:PROC
EXTRN	_Toupper:PROC
EXTRN	_purecall:PROC
EXTRN	_Tolower:PROC
EXTRN	_Getctype:PROC
EXTRN	?_Syserror_map@std@@YAPEBDH@Z:PROC		; std::_Syserror_map
EXTRN	?id@?$ctype@D@std@@2V0locale@2@A:QWORD		; std::ctype<char>::id
EXTRN	?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z:PROC ; std::_Facet_Register
EXTRN	?_Id_cnt@id@locale@std@@0HA:DWORD		; std::locale::id::_Id_cnt
EXTRN	?_Locinfo_ctor@_Locinfo@std@@SAXPEAV12@PEBD@Z:PROC ; std::_Locinfo::_Locinfo_ctor
EXTRN	?_Locinfo_dtor@_Locinfo@std@@SAXPEAV12@@Z:PROC	; std::_Locinfo::_Locinfo_dtor
EXTRN	?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ:PROC ; std::locale::_Getgloballocale
EXTRN	?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A:BYTE ; std::cout
EXTRN	?uncaught_exceptions@std@@YAHXZ:PROC		; std::uncaught_exceptions
EXTRN	?_Xruntime_error@std@@YAXPEBD@Z:PROC		; std::_Xruntime_error
EXTRN	??0_Lockit@std@@QEAA@H@Z:PROC			; std::_Lockit::_Lockit
EXTRN	??1_Lockit@std@@QEAA@XZ:PROC			; std::_Lockit::~_Lockit
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PEBVfacet@locale@2@EB
_BSS	SEGMENT
?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PEBVfacet@locale@2@EB DQ 01H DUP (?) ; std::_Facetptr<std::ctype<char> >::_Psave
_BSS	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD imagerel ??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_7failure@ios_base@std@@6B@
CONST	SEGMENT
??_7failure@ios_base@std@@6B@ DQ FLAT:??_R4failure@ios_base@std@@6B@ ; std::ios_base::failure::`vftable'
	DQ	FLAT:??_Efailure@ios_base@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_R2ctype_base@std@@8
rdata$r	SEGMENT
??_R2ctype_base@std@@8 DD imagerel ??_R1A@?0A@EA@ctype_base@std@@8 ; std::ctype_base::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@facet@locale@std@@8
	DD	imagerel ??_R1A@?0A@EA@_Facet_base@std@@8
	DD	imagerel ??_R17?0A@EA@_Crt_new_delete@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3runtime_error@std@@8
rdata$r	SEGMENT
??_R3runtime_error@std@@8 DD 00H			; std::runtime_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_7system_error@std@@6B@
CONST	SEGMENT
??_7system_error@std@@6B@ DQ FLAT:??_R4system_error@std@@6B@ ; std::system_error::`vftable'
	DQ	FLAT:??_Esystem_error@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_R4?$ctype@D@std@@6B@
rdata$r	SEGMENT
??_R4?$ctype@D@std@@6B@ DD 01H				; std::ctype<char>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV?$ctype@D@std@@@8
	DD	imagerel ??_R3?$ctype@D@std@@8
	DD	imagerel ??_R4?$ctype@D@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R2facet@locale@std@@8
rdata$r	SEGMENT
??_R2facet@locale@std@@8 DD imagerel ??_R1A@?0A@EA@facet@locale@std@@8 ; std::locale::facet::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@_Facet_base@std@@8
	DD	imagerel ??_R17?0A@EA@_Crt_new_delete@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R2_Facet_base@std@@8
rdata$r	SEGMENT
??_R2_Facet_base@std@@8 DD imagerel ??_R1A@?0A@EA@_Facet_base@std@@8 ; std::_Facet_base::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3system_error@std@@8
rdata$r	SEGMENT
??_R3system_error@std@@8 DD 00H				; std::system_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	imagerel ??_R2system_error@std@@8
rdata$r	ENDS
;	COMDAT _CT??_R0?AVfailure@ios_base@std@@@8??0failure@ios_base@std@@QEAA@AEBV012@@Z40
xdata$x	SEGMENT
_CT??_R0?AVfailure@ios_base@std@@@8??0failure@ios_base@std@@QEAA@AEBV012@@Z40 DD 00H
	DD	imagerel ??_R0?AVfailure@ios_base@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	imagerel ??0failure@ios_base@std@@QEAA@AEBV012@@Z
xdata$x	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ctype@D@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ctype@D@std@@8 DD imagerel ??_R0?AV?$ctype@D@std@@@8 ; std::ctype<char>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$ctype@D@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Crt_new_delete@std@@8
rdata$r	SEGMENT
??_R2_Crt_new_delete@std@@8 DD imagerel ??_R1A@?0A@EA@_Crt_new_delete@std@@8 ; std::_Crt_new_delete::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R2_Iostream_error_category2@std@@8
rdata$r	SEGMENT
??_R2_Iostream_error_category2@std@@8 DD imagerel ??_R1A@?0A@EA@_Iostream_error_category2@std@@8 ; std::_Iostream_error_category2::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@error_category@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R0?AV_System_error@std@@@8
data$r	SEGMENT
??_R0?AV_System_error@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::_System_error `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV_System_error@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ctype_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ctype_base@std@@8 DD imagerel ??_R0?AUctype_base@std@@@8 ; std::ctype_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ctype_base@std@@8
rdata$r	ENDS
;	COMDAT ??_7_Facet_base@std@@6B@
CONST	SEGMENT
??_7_Facet_base@std@@6B@ DQ FLAT:??_R4_Facet_base@std@@6B@ ; std::_Facet_base::`vftable'
	DQ	FLAT:??_E_Facet_base@std@@UEAAPEAXI@Z
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
CONST	ENDS
;	COMDAT _CTA5?AVfailure@ios_base@std@@
xdata$x	SEGMENT
_CTA5?AVfailure@ios_base@std@@ DD 05H
	DD	imagerel _CT??_R0?AVfailure@ios_base@std@@@8??0failure@ios_base@std@@QEAA@AEBV012@@Z40
	DD	imagerel _CT??_R0?AVsystem_error@std@@@8??0system_error@std@@QEAA@AEBV01@@Z40
	DD	imagerel _CT??_R0?AV_System_error@std@@@8??0_System_error@std@@QEAA@AEBV01@@Z40
	DD	imagerel _CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT ??_R2runtime_error@std@@8
rdata$r	SEGMENT
??_R2runtime_error@std@@8 DD imagerel ??_R1A@?0A@EA@runtime_error@std@@8 ; std::runtime_error::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT _CT??_R0?AV_System_error@std@@@8??0_System_error@std@@QEAA@AEBV01@@Z40
xdata$x	SEGMENT
_CT??_R0?AV_System_error@std@@@8??0_System_error@std@@QEAA@AEBV01@@Z40 DD 00H
	DD	imagerel ??_R0?AV_System_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	imagerel ??0_System_error@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R3_Iostream_error_category2@std@@8
rdata$r	SEGMENT
??_R3_Iostream_error_category2@std@@8 DD 00H		; std::_Iostream_error_category2::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2_Iostream_error_category2@std@@8
rdata$r	ENDS
;	COMDAT ??_R4_Facet_base@std@@6B@
rdata$r	SEGMENT
??_R4_Facet_base@std@@6B@ DD 01H			; std::_Facet_base::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV_Facet_base@std@@@8
	DD	imagerel ??_R3_Facet_base@std@@8
	DD	imagerel ??_R4_Facet_base@std@@6B@
rdata$r	ENDS
;	COMDAT _CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVbad_cast@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_cast@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ?_Iostream_error@?4??message@_Iostream_error_category2@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z@4QBDB
CONST	SEGMENT
?_Iostream_error@?4??message@_Iostream_error_category2@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z@4QBDB DB 069H ; `std::_Iostream_error_category2::message'::`5'::_Iostream_error
	DB	06fH
	DB	073H
	DB	074H
	DB	072H
	DB	065H
	DB	061H
	DB	06dH
	DB	020H
	DB	073H
	DB	074H
	DB	072H
	DB	065H
	DB	061H
	DB	06dH
	DB	020H
	DB	065H
	DB	072H
	DB	072H
	DB	06fH
	DB	072H
	DB	00H
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@_Crt_new_delete@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Crt_new_delete@std@@8 DD imagerel ??_R0?AU_Crt_new_delete@std@@@8 ; std::_Crt_new_delete::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3_Crt_new_delete@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_cast@std@@6B@
rdata$r	SEGMENT
??_R4bad_cast@std@@6B@ DD 01H				; std::bad_cast::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_cast@std@@@8
	DD	imagerel ??_R3bad_cast@std@@8
	DD	imagerel ??_R4bad_cast@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R4ctype_base@std@@6B@
rdata$r	SEGMENT
??_R4ctype_base@std@@6B@ DD 01H				; std::ctype_base::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AUctype_base@std@@@8
	DD	imagerel ??_R3ctype_base@std@@8
	DD	imagerel ??_R4ctype_base@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_cast@std@@8
rdata$r	SEGMENT
??_R3bad_cast@std@@8 DD 00H				; std::bad_cast::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2bad_cast@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error@std@@8 DD imagerel ??_R0?AV_System_error@std@@@8 ; std::_System_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3_System_error@std@@8
rdata$r	ENDS
;	COMDAT _CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVruntime_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0runtime_error@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R3ctype_base@std@@8
rdata$r	SEGMENT
??_R3ctype_base@std@@8 DD 00H				; std::ctype_base::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	04H
	DD	imagerel ??_R2ctype_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R3facet@locale@std@@8
rdata$r	SEGMENT
??_R3facet@locale@std@@8 DD 00H				; std::locale::facet::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	imagerel ??_R2facet@locale@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVfacet@locale@std@@@8
data$rs	SEGMENT
??_R0?AVfacet@locale@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::locale::facet `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVfacet@locale@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@failure@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@failure@ios_base@std@@8 DD imagerel ??_R0?AVfailure@ios_base@std@@@8 ; std::ios_base::failure::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3failure@ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_7_System_error@std@@6B@
CONST	SEGMENT
??_7_System_error@std@@6B@ DQ FLAT:??_R4_System_error@std@@6B@ ; std::_System_error::`vftable'
	DQ	FLAT:??_E_System_error@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7runtime_error@std@@6B@
CONST	SEGMENT
??_7runtime_error@std@@6B@ DQ FLAT:??_R4runtime_error@std@@6B@ ; std::runtime_error::`vftable'
	DQ	FLAT:??_Eruntime_error@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT _TI5?AVfailure@ios_base@std@@
xdata$x	SEGMENT
_TI5?AVfailure@ios_base@std@@ DD 00H
	DD	imagerel ??1failure@ios_base@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA5?AVfailure@ios_base@std@@
xdata$x	ENDS
;	COMDAT ??_7_Iostream_error_category2@std@@6B@
CONST	SEGMENT
??_7_Iostream_error_category2@std@@6B@ DQ FLAT:??_R4_Iostream_error_category2@std@@6B@ ; std::_Iostream_error_category2::`vftable'
	DQ	FLAT:??_E_Iostream_error_category2@std@@UEAAPEAXI@Z
	DQ	FLAT:?name@_Iostream_error_category2@std@@UEBAPEBDXZ
	DQ	FLAT:?message@_Iostream_error_category2@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DQ	FLAT:?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z
	DQ	FLAT:?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z
	DQ	FLAT:?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_R2?$ctype@D@std@@8
rdata$r	SEGMENT
??_R2?$ctype@D@std@@8 DD imagerel ??_R1A@?0A@EA@?$ctype@D@std@@8 ; std::ctype<char>::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@ctype_base@std@@8
	DD	imagerel ??_R1A@?0A@EA@facet@locale@std@@8
	DD	imagerel ??_R1A@?0A@EA@_Facet_base@std@@8
	DD	imagerel ??_R17?0A@EA@_Crt_new_delete@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_7facet@locale@std@@6B@
CONST	SEGMENT
??_7facet@locale@std@@6B@ DQ FLAT:??_R4facet@locale@std@@6B@ ; std::locale::facet::`vftable'
	DQ	FLAT:??_Efacet@locale@std@@MEAAPEAXI@Z
	DQ	FLAT:?_Incref@facet@locale@std@@UEAAXXZ
	DQ	FLAT:?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ
CONST	ENDS
;	COMDAT ??_R3failure@ios_base@std@@8
rdata$r	SEGMENT
??_R3failure@ios_base@std@@8 DD 00H			; std::ios_base::failure::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	imagerel ??_R2failure@ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUctype_base@std@@@8
data$rs	SEGMENT
??_R0?AUctype_base@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::ctype_base `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AUctype_base@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R2failure@ios_base@std@@8
rdata$r	SEGMENT
??_R2failure@ios_base@std@@8 DD imagerel ??_R1A@?0A@EA@failure@ios_base@std@@8 ; std::ios_base::failure::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@system_error@std@@8
	DD	imagerel ??_R1A@?0A@EA@_System_error@std@@8
	DD	imagerel ??_R1A@?0A@EA@runtime_error@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_7?$ctype@D@std@@6B@
CONST	SEGMENT
??_7?$ctype@D@std@@6B@ DQ FLAT:??_R4?$ctype@D@std@@6B@	; std::ctype<char>::`vftable'
	DQ	FLAT:??_E?$ctype@D@std@@MEAAPEAXI@Z
	DQ	FLAT:?_Incref@facet@locale@std@@UEAAXXZ
	DQ	FLAT:?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ
	DQ	FLAT:?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z
	DQ	FLAT:?do_tolower@?$ctype@D@std@@MEBADD@Z
	DQ	FLAT:?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z
	DQ	FLAT:?do_toupper@?$ctype@D@std@@MEBADD@Z
	DQ	FLAT:?do_widen@?$ctype@D@std@@MEBAPEBDPEBD0PEAD@Z
	DQ	FLAT:?do_widen@?$ctype@D@std@@MEBADD@Z
	DQ	FLAT:?do_narrow@?$ctype@D@std@@MEBAPEBDPEBD0DPEAD@Z
	DQ	FLAT:?do_narrow@?$ctype@D@std@@MEBADDD@Z
CONST	ENDS
;	COMDAT _TI2?AVbad_cast@std@@
xdata$x	SEGMENT
_TI2?AVbad_cast@std@@ DD 00H
	DD	imagerel ??1bad_cast@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA2?AVbad_cast@std@@
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@std@@@8
data$r	SEGMENT
??_R0?AVbad_cast@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::bad_cast `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_cast@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@facet@locale@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@facet@locale@std@@8 DD imagerel ??_R0?AVfacet@locale@std@@@8 ; std::locale::facet::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3facet@locale@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Iostream_error_category2@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Iostream_error_category2@std@@8 DD imagerel ??_R0?AV_Iostream_error_category2@std@@@8 ; std::_Iostream_error_category2::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3_Iostream_error_category2@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD imagerel ??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R4_Iostream_error_category2@std@@6B@
rdata$r	SEGMENT
??_R4_Iostream_error_category2@std@@6B@ DD 01H		; std::_Iostream_error_category2::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV_Iostream_error_category2@std@@@8
	DD	imagerel ??_R3_Iostream_error_category2@std@@8
	DD	imagerel ??_R4_Iostream_error_category2@std@@6B@
rdata$r	ENDS
;	COMDAT ??_7bad_cast@std@@6B@
CONST	SEGMENT
??_7bad_cast@std@@6B@ DQ FLAT:??_R4bad_cast@std@@6B@	; std::bad_cast::`vftable'
	DQ	FLAT:??_Ebad_cast@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_R4failure@ios_base@std@@6B@
rdata$r	SEGMENT
??_R4failure@ios_base@std@@6B@ DD 01H			; std::ios_base::failure::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVfailure@ios_base@std@@@8
	DD	imagerel ??_R3failure@ios_base@std@@8
	DD	imagerel ??_R4failure@ios_base@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R2bad_cast@std@@8
rdata$r	SEGMENT
??_R2bad_cast@std@@8 DD imagerel ??_R1A@?0A@EA@bad_cast@std@@8 ; std::bad_cast::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT _CT??_R0?AVsystem_error@std@@@8??0system_error@std@@QEAA@AEBV01@@Z40
xdata$x	SEGMENT
_CT??_R0?AVsystem_error@std@@@8??0system_error@std@@QEAA@AEBV01@@Z40 DD 00H
	DD	imagerel ??_R0?AVsystem_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	imagerel ??0system_error@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT _CTA2?AVbad_cast@std@@
xdata$x	SEGMENT
_CTA2?AVbad_cast@std@@ DD 02H
	DD	imagerel _CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT ??_R17?0A@EA@_Crt_new_delete@std@@8
rdata$r	SEGMENT
??_R17?0A@EA@_Crt_new_delete@std@@8 DD imagerel ??_R0?AU_Crt_new_delete@std@@@8 ; std::_Crt_new_delete::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3_Crt_new_delete@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Iostream_error_category2@std@@@8
data$rs	SEGMENT
??_R0?AV_Iostream_error_category2@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::_Iostream_error_category2 `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV_Iostream_error_category2@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R0?AU_Crt_new_delete@std@@@8
data$rs	SEGMENT
??_R0?AU_Crt_new_delete@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::_Crt_new_delete `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AU_Crt_new_delete@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R3_System_error@std@@8
rdata$r	SEGMENT
??_R3_System_error@std@@8 DD 00H			; std::_System_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2_System_error@std@@8
rdata$r	ENDS
;	COMDAT ??_7ctype_base@std@@6B@
CONST	SEGMENT
??_7ctype_base@std@@6B@ DQ FLAT:??_R4ctype_base@std@@6B@ ; std::ctype_base::`vftable'
	DQ	FLAT:??_Ectype_base@std@@UEAAPEAXI@Z
	DQ	FLAT:?_Incref@facet@locale@std@@UEAAXXZ
	DQ	FLAT:?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ
CONST	ENDS
;	COMDAT ??_R0?AV_Facet_base@std@@@8
data$rs	SEGMENT
??_R0?AV_Facet_base@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::_Facet_base `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV_Facet_base@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@_Facet_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Facet_base@std@@8 DD imagerel ??_R0?AV_Facet_base@std@@@8 ; std::_Facet_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3_Facet_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R4system_error@std@@6B@
rdata$r	SEGMENT
??_R4system_error@std@@6B@ DD 01H			; std::system_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVsystem_error@std@@@8
	DD	imagerel ??_R3system_error@std@@8
	DD	imagerel ??_R4system_error@std@@6B@
rdata$r	ENDS
;	COMDAT ?_Static@?1???$_Immortalize_memcpy_image@V_Iostream_error_category2@std@@@std@@YAAEBV_Iostream_error_category2@1@XZ@4V21@B
_DATA	SEGMENT
?_Static@?1???$_Immortalize_memcpy_image@V_Iostream_error_category2@std@@@std@@YAAEBV_Iostream_error_category2@1@XZ@4V21@B DQ FLAT:??_7_Iostream_error_category2@std@@6B@ ; `std::_Immortalize_memcpy_image<std::_Iostream_error_category2>'::`2'::_Static
	DQ	0000000000000005H
_DATA	ENDS
;	COMDAT ??_R0?AVsystem_error@std@@@8
data$r	SEGMENT
??_R0?AVsystem_error@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::system_error `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVsystem_error@std@@', 00H
data$r	ENDS
;	COMDAT ??_R2_System_error@std@@8
rdata$r	SEGMENT
??_R2_System_error@std@@8 DD imagerel ??_R1A@?0A@EA@_System_error@std@@8 ; std::_System_error::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@runtime_error@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@runtime_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@runtime_error@std@@8 DD imagerel ??_R0?AVruntime_error@std@@@8 ; std::runtime_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Crt_new_delete@std@@8
rdata$r	SEGMENT
??_R3_Crt_new_delete@std@@8 DD 00H			; std::_Crt_new_delete::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2_Crt_new_delete@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ctype@D@std@@@8
data$rs	SEGMENT
??_R0?AV?$ctype@D@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::ctype<char> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$ctype@D@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
data$rs	SEGMENT
??_R0?AVerror_category@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVerror_category@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_cast@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_cast@std@@8 DD imagerel ??_R0?AVbad_cast@std@@@8 ; std::bad_cast::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_cast@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Facet_base@std@@8
rdata$r	SEGMENT
??_R3_Facet_base@std@@8 DD 00H				; std::_Facet_base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2_Facet_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R4_System_error@std@@6B@
rdata$r	SEGMENT
??_R4_System_error@std@@6B@ DD 01H			; std::_System_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV_System_error@std@@@8
	DD	imagerel ??_R3_System_error@std@@8
	DD	imagerel ??_R4_System_error@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R4runtime_error@std@@6B@
rdata$r	SEGMENT
??_R4runtime_error@std@@6B@ DD 01H			; std::runtime_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVruntime_error@std@@@8
	DD	imagerel ??_R3runtime_error@std@@8
	DD	imagerel ??_R4runtime_error@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R3?$ctype@D@std@@8
rdata$r	SEGMENT
??_R3?$ctype@D@std@@8 DD 00H				; std::ctype<char>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	05H
	DD	imagerel ??_R2?$ctype@D@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@system_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@system_error@std@@8 DD imagerel ??_R0?AVsystem_error@std@@@8 ; std::system_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3system_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R4facet@locale@std@@6B@
rdata$r	SEGMENT
??_R4facet@locale@std@@6B@ DD 01H			; std::locale::facet::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVfacet@locale@std@@@8
	DD	imagerel ??_R3facet@locale@std@@8
	DD	imagerel ??_R4facet@locale@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R2system_error@std@@8
rdata$r	SEGMENT
??_R2system_error@std@@8 DD imagerel ??_R1A@?0A@EA@system_error@std@@8 ; std::system_error::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@_System_error@std@@8
	DD	imagerel ??_R1A@?0A@EA@runtime_error@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R0?AVruntime_error@std@@@8
data$r	SEGMENT
??_R0?AVruntime_error@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::runtime_error `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVruntime_error@std@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AVfailure@ios_base@std@@@8
data$r	SEGMENT
??_R0?AVfailure@ios_base@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::ios_base::failure `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVfailure@ios_base@std@@', 00H
data$r	ENDS
;	COMDAT ??_C@_0BC@LCLEKDHB@Client?5connected?$CB@
CONST	SEGMENT
??_C@_0BC@LCLEKDHB@Client?5connected?$CB@ DB 'Client connected!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@
CONST	SEGMENT
??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@ DB 'ios_base::eofbit set', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@
CONST	SEGMENT
??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@ DB 'ios_base::failbit set', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@
CONST	SEGMENT
??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@ DB 'ios_base::badbit set', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@ELKIONDK@bad?5locale?5name@
CONST	SEGMENT
??_C@_0BA@ELKIONDK@bad?5locale?5name@ DB 'bad locale name', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08EPJLHIJG@bad?5cast@
CONST	SEGMENT
??_C@_08EPJLHIJG@bad?5cast@ DB 'bad cast', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLGCOLLL@iostream@
CONST	SEGMENT
??_C@_08LLGCOLLL@iostream@ DB 'iostream', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02LMMGGCAJ@?3?5@
CONST	SEGMENT
??_C@_02LMMGGCAJ@?3?5@ DB ': ', 00H			; `string'
PUBLIC	??$forward@AEAPEAV_Facet_base@std@@@std@@YAAEAPEAV_Facet_base@0@AEAPEAV10@@Z ; std::forward<std::_Facet_base * &>
PUBLIC	??$?0AEAPEAV_Facet_base@std@@@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV_Facet_base@1@@Z ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1><std::_Facet_base * &>
PUBLIC	??$?0U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@1@@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > >::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > ><std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > > >::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > > >
PUBLIC	??$exchange@PEAV_Facet_base@std@@$$T@std@@YAPEAV_Facet_base@0@AEAPEAV10@$$QEA$$T@Z ; std::exchange<std::_Facet_base *,std::nullptr_t>
PUBLIC	??$construct_at@PEAU?$_List_node@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@PEAX@std@@AEAPEAU12@$0A@@std@@YAPEAPEAU?$_List_node@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@PEAX@0@QEAPEAU10@AEAPEAU10@@Z ; std::construct_at<std::_List_node<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,void *> *,std::_List_node<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,void *> * &,0>
PUBLIC	??$?0AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@1@@Z ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > > >,1>::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > > >,1><std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &>
PUBLIC	??$forward@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@0@AEBV10@@Z ; std::forward<std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &>
PUBLIC	??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> ><std::default_delete<std::_Facet_base>,0>
PUBLIC	??$?0U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@?$allocator@U?$_List_node@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@PEAX@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@1@@Z ; std::allocator<std::_List_node<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,void *> >::allocator<std::_List_node<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,void *> ><std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??$?0M@?$_Compressed_pair@U?$equal_to@J@std@@M$00@std@@QEAA@U_Zero_then_variadic_args_t@1@$$QEAM@Z ; std::_Compressed_pair<std::equal_to<long>,float,1>::_Compressed_pair<std::equal_to<long>,float,1><float>
PUBLIC	?to_int_type@?$_Narrow_char_traits@DH@std@@SAHD@Z ; std::_Narrow_char_traits<char,int>::to_int_type
PUBLIC	?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z ; std::basic_ios<char,std::char_traits<char> >::clear
PUBLIC	?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char> >::tie
PUBLIC	?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ ; std::basic_ostream<char,std::char_traits<char> >::_Osfx
PUBLIC	??R?$default_delete@V_Facet_base@std@@@std@@QEBAXPEAV_Facet_base@1@@Z ; std::default_delete<std::_Facet_base>::operator()
PUBLIC	?_Get_first@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAAAEAU?$default_delete@V_Facet_base@std@@@2@XZ ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Get_first
PUBLIC	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
PUBLIC	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
PUBLIC	?pubsync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHXZ ; std::basic_streambuf<char,std::char_traits<char> >::pubsync
PUBLIC	?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ ; std::basic_streambuf<char,std::char_traits<char> >::_Pninc
PUBLIC	?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBA_JXZ ; std::basic_streambuf<char,std::char_traits<char> >::_Pnavail
PUBLIC	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NHH@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
PUBLIC	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ	; std::_Narrow_char_traits<char,int>::eof
PUBLIC	??0?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@QEAA@XZ ; std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
PUBLIC	?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z ; std::basic_ios<char,std::char_traits<char> >::setstate
PUBLIC	?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ ; std::basic_ios<char,std::char_traits<char> >::rdbuf
PUBLIC	?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ ; std::basic_ios<char,std::char_traits<char> >::fill
PUBLIC	?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z ; std::basic_ios<char,std::char_traits<char> >::widen
PUBLIC	?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put
PUBLIC	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush
PUBLIC	??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >
PUBLIC	?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAPEAV_Facet_base@2@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::release
PUBLIC	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
PUBLIC	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
PUBLIC	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
PUBLIC	?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z ; std::basic_streambuf<char,std::char_traits<char> >::sputc
PUBLIC	?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z ; std::basic_streambuf<char,std::char_traits<char> >::sputn
PUBLIC	?__autoclassinit2@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAX_K@Z ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::__autoclassinit2
PUBLIC	??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@PEAX@0@0@Z ; std::_Construct_in_place<std::_List_node<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,void *> *,std::_List_node<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,void *> * &>
PUBLIC	??$?0AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@1@@Z ; std::_Compressed_pair<std::allocator<std::_List_node<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,void *> >,std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,1>::_Compressed_pair<std::allocator<std::_List_node<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,void *> >,std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,1><std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &>
PUBLIC	??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append'::`2'::<lambda_1>,char const *,unsigned __int64>
PUBLIC	??$?0U_Zero_then_variadic_args_t@std@@M@?$_Compressed_pair@U?$hash@J@std@@V?$_Compressed_pair@U?$equal_to@J@std@@M$00@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@$$QEAU21@$$QEAM@Z ; std::_Compressed_pair<std::hash<long>,std::_Compressed_pair<std::equal_to<long>,float,1>,1>::_Compressed_pair<std::hash<long>,std::_Compressed_pair<std::equal_to<long>,float,1>,1><std::_Zero_then_variadic_args_t,float>
PUBLIC	??$?0AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@1@@Z ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > > >::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > > ><std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,0>
PUBLIC	??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
PUBLIC	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
PUBLIC	??$_Adl_verify_range@PEADPEBD@std@@YAXAEBQEADAEBQEBD@Z ; std::_Adl_verify_range<char *,char const *>
PUBLIC	??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z ; std::use_facet<std::ctype<char> >
PUBLIC	??$_Adl_verify_range@PEBDPEBD@std@@YAXAEBQEBD0@Z ; std::_Adl_verify_range<char const *,char const *>
PUBLIC	??$_Immortalize_memcpy_image@V_Iostream_error_category2@std@@@std@@YAAEBV_Iostream_error_category2@0@XZ ; std::_Immortalize_memcpy_image<std::_Iostream_error_category2>
PUBLIC	??$_Bit_cast@_KT_Addr_storage@error_category@std@@$0A@@std@@YA_KAEBT_Addr_storage@error_category@0@@Z ; std::_Bit_cast<unsigned __int64,std::error_category::_Addr_storage,0>
PUBLIC	?_Get_max_bucket_size@?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@std@@QEAAAEAMXZ ; std::_Uhash_compare<long,std::hash<long>,std::equal_to<long> >::_Get_max_bucket_size
PUBLIC	?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@AEAAXXZ ; std::list<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Alloc_sentinel_and_proxy
PUBLIC	?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z	; std::_Char_traits<char,int>::move
PUBLIC	??0?$_Umap_traits@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@V?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@$0A@@std@@QEAA@AEBV?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@1@@Z ; std::_Umap_traits<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Uhash_compare<long,std::hash<long>,std::equal_to<long> >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,0>::_Umap_traits<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Uhash_compare<long,std::hash<long>,std::equal_to<long> >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,0>
PUBLIC	??0?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@1@@Z ; std::list<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::list<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
PUBLIC	?_Max_bucket_size@?$_Hash@V?$_Umap_traits@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@V?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@$0A@@std@@@std@@IEAAAEAMXZ ; std::_Hash<std::_Umap_traits<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Uhash_compare<long,std::hash<long>,std::equal_to<long> >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,0> >::_Max_bucket_size
PUBLIC	??R<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@QEBD_K@Z@QEBA@QEAD0101@Z ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append'::`2'::<lambda_1>::operator()
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?_Tidy@?$_Yarn@D@std@@AEAAXXZ			; std::_Yarn<char>::_Tidy
PUBLIC	?_Tidy@?$_Yarn@_W@std@@AEAAXXZ			; std::_Yarn<wchar_t>::_Tidy
PUBLIC	??0?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@std@@QEAA@XZ ; std::_Uhash_compare<long,std::hash<long>,std::equal_to<long> >::_Uhash_compare<long,std::hash<long>,std::equal_to<long> >
PUBLIC	??0?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@QEAA@XZ ; std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	?_Tidy@?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@AEAAXXZ ; std::list<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Tidy
PUBLIC	??0?$_Hash@V?$_Umap_traits@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@V?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@1@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@1@@Z ; std::_Hash<std::_Umap_traits<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Uhash_compare<long,std::hash<long>,std::equal_to<long> >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,0> >::_Hash<std::_Umap_traits<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Uhash_compare<long,std::hash<long>,std::equal_to<long> >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,0> >
PUBLIC	?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > > >::_Tidy
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	??0?$_Yarn@D@std@@QEAA@XZ			; std::_Yarn<char>::_Yarn<char>
PUBLIC	??1?$_Yarn@D@std@@QEAA@XZ			; std::_Yarn<char>::~_Yarn<char>
PUBLIC	?c_str@?$_Yarn@D@std@@QEBAPEBDXZ		; std::_Yarn<char>::c_str
PUBLIC	??0?$_Yarn@_W@std@@QEAA@XZ			; std::_Yarn<wchar_t>::_Yarn<wchar_t>
PUBLIC	??1?$_Yarn@_W@std@@QEAA@XZ			; std::_Yarn<wchar_t>::~_Yarn<wchar_t>
PUBLIC	??1?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ ; std::list<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~list<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
PUBLIC	??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > > >
PUBLIC	??0?$unordered_map@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@U?$hash@J@2@U?$equal_to@J@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ ; std::unordered_map<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::hash<long>,std::equal_to<long>,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::unordered_map<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::hash<long>,std::equal_to<long>,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
PUBLIC	??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z ; std::basic_ostream<char,std::char_traits<char> >::operator<<
PUBLIC	?__autoclassinit2@ServerInterface@@QEAAX_K@Z	; ServerInterface::__autoclassinit2
PUBLIC	main
PUBLIC	??0mutex@std@@QEAA@XZ				; std::mutex::mutex
PUBLIC	??1?$_Hash@V?$_Umap_traits@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@V?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@$0A@@std@@@std@@QEAA@XZ ; std::_Hash<std::_Umap_traits<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Uhash_compare<long,std::hash<long>,std::equal_to<long> >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,0> >::~_Hash<std::_Umap_traits<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Uhash_compare<long,std::hash<long>,std::equal_to<long> >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,0> >
PUBLIC	??1?$unordered_map@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@U?$hash@J@2@U?$equal_to@J@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ ; std::unordered_map<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::hash<long>,std::equal_to<long>,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~unordered_map<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::hash<long>,std::equal_to<long>,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
PUBLIC	?GetServerDetails@ServerInterface@@QEBA?BUServer@@XZ ; ServerInterface::GetServerDetails
PUBLIC	?StartServer@ServerInterface@@QEAAHUServer@@@Z	; ServerInterface::StartServer
PUBLIC	??1ServerInterface@@QEAA@XZ			; ServerInterface::~ServerInterface
PUBLIC	??0ServerInterface@@QEAA@W4SocketTypes@@H@Z	; ServerInterface::ServerInterface
PUBLIC	??0_Mutex_base@std@@QEAA@H@Z			; std::_Mutex_base::_Mutex_base
PUBLIC	??0failure@ios_base@std@@QEAA@AEBV012@@Z	; std::ios_base::failure::failure
PUBLIC	??1failure@ios_base@std@@UEAA@XZ		; std::ios_base::failure::~failure
PUBLIC	??_Gfailure@ios_base@std@@UEAAPEAXI@Z		; std::ios_base::failure::`scalar deleting destructor'
PUBLIC	?getloc@ios_base@std@@QEBA?AVlocale@2@XZ	; std::ios_base::getloc
PUBLIC	?width@ios_base@std@@QEAA_J_J@Z			; std::ios_base::width
PUBLIC	?width@ios_base@std@@QEBA_JXZ			; std::ios_base::width
PUBLIC	?flags@ios_base@std@@QEBAHXZ			; std::ios_base::flags
PUBLIC	?good@ios_base@std@@QEBA_NXZ			; std::ios_base::good
PUBLIC	?rdstate@ios_base@std@@QEBAHXZ			; std::ios_base::rdstate
PUBLIC	?clear@ios_base@std@@QEAAXH_N@Z			; std::ios_base::clear
PUBLIC	??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z ; std::ios_base::failure::failure
PUBLIC	??_G?$ctype@D@std@@MEAAPEAXI@Z			; std::ctype<char>::`scalar deleting destructor'
PUBLIC	?do_narrow@?$ctype@D@std@@MEBAPEBDPEBD0DPEAD@Z	; std::ctype<char>::do_narrow
PUBLIC	?do_narrow@?$ctype@D@std@@MEBADDD@Z		; std::ctype<char>::do_narrow
PUBLIC	?do_widen@?$ctype@D@std@@MEBAPEBDPEBD0PEAD@Z	; std::ctype<char>::do_widen
PUBLIC	?do_widen@?$ctype@D@std@@MEBADD@Z		; std::ctype<char>::do_widen
PUBLIC	?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z	; std::ctype<char>::do_toupper
PUBLIC	?do_toupper@?$ctype@D@std@@MEBADD@Z		; std::ctype<char>::do_toupper
PUBLIC	?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z	; std::ctype<char>::do_tolower
PUBLIC	?do_tolower@?$ctype@D@std@@MEBADD@Z		; std::ctype<char>::do_tolower
PUBLIC	?_Tidy@?$ctype@D@std@@IEAAXXZ			; std::ctype<char>::_Tidy
PUBLIC	?_Init@?$ctype@D@std@@IEAAXAEBV_Locinfo@2@@Z	; std::ctype<char>::_Init
PUBLIC	??1?$ctype@D@std@@MEAA@XZ			; std::ctype<char>::~ctype<char>
PUBLIC	?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z ; std::ctype<char>::_Getcat
PUBLIC	??0?$ctype@D@std@@QEAA@AEBV_Locinfo@1@_K@Z	; std::ctype<char>::ctype<char>
PUBLIC	?widen@?$ctype@D@std@@QEBADD@Z			; std::ctype<char>::widen
PUBLIC	??_Gctype_base@std@@UEAAPEAXI@Z			; std::ctype_base::`scalar deleting destructor'
PUBLIC	??1ctype_base@std@@UEAA@XZ			; std::ctype_base::~ctype_base
PUBLIC	??0ctype_base@std@@QEAA@_K@Z			; std::ctype_base::ctype_base
PUBLIC	??0_Facet_base@std@@QEAA@XZ			; std::_Facet_base::_Facet_base
PUBLIC	??_Gfacet@locale@std@@MEAAPEAXI@Z		; std::locale::facet::`scalar deleting destructor'
PUBLIC	?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z	; std::locale::_Getfacet
PUBLIC	?_C_str@locale@std@@QEBAPEBDXZ			; std::locale::_C_str
PUBLIC	??1locale@std@@QEAA@XZ				; std::locale::~locale
PUBLIC	??0locale@std@@QEAA@AEBV01@@Z			; std::locale::locale
PUBLIC	??1facet@locale@std@@MEAA@XZ			; std::locale::facet::~facet
PUBLIC	??0facet@locale@std@@IEAA@_K@Z			; std::locale::facet::facet
PUBLIC	?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ ; std::locale::facet::_Decref
PUBLIC	?_Incref@facet@locale@std@@UEAAXXZ		; std::locale::facet::_Incref
PUBLIC	??Bid@locale@std@@QEAA_KXZ			; std::locale::id::operator unsigned __int64
PUBLIC	?_Getctype@_Locinfo@std@@QEBA?AU_Ctypevec@@XZ	; std::_Locinfo::_Getctype
PUBLIC	??1_Locinfo@std@@QEAA@XZ			; std::_Locinfo::~_Locinfo
PUBLIC	??0_Locinfo@std@@QEAA@PEBD@Z			; std::_Locinfo::_Locinfo
PUBLIC	??_G_Facet_base@std@@UEAAPEAXI@Z		; std::_Facet_base::`scalar deleting destructor'
PUBLIC	??1_Facet_base@std@@UEAA@XZ			; std::_Facet_base::~_Facet_base
PUBLIC	??0bad_cast@std@@QEAA@AEBV01@@Z			; std::bad_cast::bad_cast
PUBLIC	?_Throw_bad_cast@std@@YAXXZ			; std::_Throw_bad_cast
PUBLIC	??1bad_cast@std@@UEAA@XZ			; std::bad_cast::~bad_cast
PUBLIC	??_Gbad_cast@std@@UEAAPEAXI@Z			; std::bad_cast::`scalar deleting destructor'
PUBLIC	??0bad_cast@std@@QEAA@XZ			; std::bad_cast::bad_cast
PUBLIC	?iostream_category@std@@YAAEBVerror_category@1@XZ ; std::iostream_category
PUBLIC	??1_Iostream_error_category2@std@@UEAA@XZ	; std::_Iostream_error_category2::~_Iostream_error_category2
PUBLIC	??_G_Iostream_error_category2@std@@UEAAPEAXI@Z	; std::_Iostream_error_category2::`scalar deleting destructor'
PUBLIC	?message@_Iostream_error_category2@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Iostream_error_category2::message
PUBLIC	?name@_Iostream_error_category2@std@@UEBAPEBDXZ	; std::_Iostream_error_category2::name
PUBLIC	??0_System_error@std@@QEAA@AEBV01@@Z		; std::_System_error::_System_error
PUBLIC	??0system_error@std@@QEAA@AEBV01@@Z		; std::system_error::system_error
PUBLIC	??1system_error@std@@UEAA@XZ			; std::system_error::~system_error
PUBLIC	??_Gsystem_error@std@@UEAAPEAXI@Z		; std::system_error::`scalar deleting destructor'
PUBLIC	??0system_error@std@@QEAA@Verror_code@1@PEBD@Z	; std::system_error::system_error
PUBLIC	??1_System_error@std@@UEAA@XZ			; std::_System_error::~_System_error
PUBLIC	??_G_System_error@std@@UEAAPEAXI@Z		; std::_System_error::`scalar deleting destructor'
PUBLIC	??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_System_error::_System_error
PUBLIC	?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z ; std::_System_error::_Makestr
PUBLIC	?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z ; std::make_error_code
PUBLIC	?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	??8std@@YA_NAEBVerror_condition@0@0@Z		; std::operator==
PUBLIC	?category@error_condition@std@@QEBAAEBVerror_category@2@XZ ; std::error_condition::category
PUBLIC	?value@error_condition@std@@QEBAHXZ		; std::error_condition::value
PUBLIC	??0error_condition@std@@QEAA@HAEBVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::error_code::message
PUBLIC	?category@error_code@std@@QEBAAEBVerror_category@2@XZ ; std::error_code::category
PUBLIC	?value@error_code@std@@QEBAHXZ			; std::error_code::value
PUBLIC	??0error_code@std@@QEAA@HAEBVerror_category@1@@Z ; std::error_code::error_code
PUBLIC	??1error_category@std@@UEAA@XZ			; std::error_category::~error_category
PUBLIC	??8error_category@std@@QEBA_NAEBV01@@Z		; std::error_category::operator==
PUBLIC	??0runtime_error@std@@QEAA@AEBV01@@Z		; std::runtime_error::runtime_error
PUBLIC	??1runtime_error@std@@UEAA@XZ			; std::runtime_error::~runtime_error
PUBLIC	??_Gruntime_error@std@@UEAAPEAXI@Z		; std::runtime_error::`scalar deleting destructor'
PUBLIC	??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::runtime_error::runtime_error
PUBLIC	??0exception@std@@QEAA@QEBD@Z			; std::exception::exception
EXTRN	??_Ebad_cast@std@@UEAAPEAXI@Z:PROC		; std::bad_cast::`vector deleting destructor'
EXTRN	??_Efacet@locale@std@@MEAAPEAXI@Z:PROC		; std::locale::facet::`vector deleting destructor'
EXTRN	??_E_System_error@std@@UEAAPEAXI@Z:PROC		; std::_System_error::`vector deleting destructor'
EXTRN	??_Efailure@ios_base@std@@UEAAPEAXI@Z:PROC	; std::ios_base::failure::`vector deleting destructor'
EXTRN	??_E?$ctype@D@std@@MEAAPEAXI@Z:PROC		; std::ctype<char>::`vector deleting destructor'
EXTRN	??_Esystem_error@std@@UEAAPEAXI@Z:PROC		; std::system_error::`vector deleting destructor'
EXTRN	??_Eruntime_error@std@@UEAAPEAXI@Z:PROC		; std::runtime_error::`vector deleting destructor'
EXTRN	??_E_Iostream_error_category2@std@@UEAAPEAXI@Z:PROC ; std::_Iostream_error_category2::`vector deleting destructor'
EXTRN	??_Ectype_base@std@@UEAAPEAXI@Z:PROC		; std::ctype_base::`vector deleting destructor'
EXTRN	??_E_Facet_base@std@@UEAAPEAXI@Z:PROC		; std::_Facet_base::`vector deleting destructor'
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z DD imagerel $LN18
	DD	imagerel $LN18+146
	DD	imagerel $unwind$?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ DD imagerel $LN35
	DD	imagerel $LN35+162
	DD	imagerel $unwind$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA DD imagerel ?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA
	DD	imagerel ?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA+30
	DD	imagerel $unwind$?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN7
	DD	imagerel $LN7+44
	DD	imagerel $unwind$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN7
	DD	imagerel $LN7+36
	DD	imagerel $unwind$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z DD imagerel $LN21
	DD	imagerel $LN21+149
	DD	imagerel $unwind$?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z DD imagerel $LN72
	DD	imagerel $LN72+397
	DD	imagerel $unwind$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z DD imagerel $LN94
	DD	imagerel $LN94+417
	DD	imagerel $unwind$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$4@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA DD imagerel ?catch$4@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA
	DD	imagerel ?catch$4@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA+92
	DD	imagerel $unwind$?catch$4@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ DD imagerel $LN93
	DD	imagerel $LN93+343
	DD	imagerel $unwind$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$9@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA DD imagerel ?catch$9@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA
	DD	imagerel ?catch$9@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA+83
	DD	imagerel $unwind$?catch$9@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN18
	DD	imagerel $LN18+122
	DD	imagerel $unwind$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN14
	DD	imagerel $LN14+60
	DD	imagerel $unwind$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z DD imagerel $LN160
	DD	imagerel $LN160+56
	DD	imagerel $unwind$??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z DD imagerel $LN160+56
	DD	imagerel $LN160+374
	DD	imagerel $chain$2$??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z DD imagerel $LN160+374
	DD	imagerel $LN160+386
	DD	imagerel $chain$4$??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z DD imagerel $LN160+386
	DD	imagerel $LN160+392
	DD	imagerel $chain$5$??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z DD imagerel $LN4
	DD	imagerel $LN4+54
	DD	imagerel $unwind$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD imagerel $LN151
	DD	imagerel $LN151+724
	DD	imagerel $unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$4@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD imagerel ?catch$4@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	imagerel ?catch$4@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+93
	DD	imagerel $unwind$?catch$4@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z DD imagerel $LN52
	DD	imagerel $LN52+313
	DD	imagerel $unwind$??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@AEAAXXZ DD imagerel $LN31
	DD	imagerel $LN31+35
	DD	imagerel $unwind$?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD imagerel $LN34
	DD	imagerel $LN34+23
	DD	imagerel $unwind$?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@1@@Z DD imagerel $LN41
	DD	imagerel $LN41+47
	DD	imagerel $unwind$??0?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@QEBD_K@Z@QEBA@QEAD0101@Z DD imagerel $LN31
	DD	imagerel $LN31+72
	DD	imagerel $unwind$??R<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@QEBD_K@Z@QEBA@QEAD0101@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD imagerel $LN46
	DD	imagerel $LN46+35
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD imagerel $LN46+35
	DD	imagerel $LN46+98
	DD	imagerel $chain$0$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD imagerel $LN46+98
	DD	imagerel $LN46+134
	DD	imagerel $chain$1$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$_Yarn@D@std@@AEAAXXZ DD imagerel $LN9
	DD	imagerel $LN9+35
	DD	imagerel $unwind$?_Tidy@?$_Yarn@D@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$_Yarn@_W@std@@AEAAXXZ DD imagerel $LN9
	DD	imagerel $LN9+35
	DD	imagerel $unwind$?_Tidy@?$_Yarn@_W@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@AEAAXXZ DD imagerel $LN136
	DD	imagerel $LN136+36
	DD	imagerel $unwind$?_Tidy@?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?_Tidy@?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@AEAAXXZ DD imagerel $LN136+36
	DD	imagerel $LN136+100
	DD	imagerel $chain$1$?_Tidy@?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?_Tidy@?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@AEAAXXZ DD imagerel $LN136+100
	DD	imagerel $LN136+124
	DD	imagerel $chain$2$?_Tidy@?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Hash@V?$_Umap_traits@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@V?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@1@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@1@@Z DD imagerel $LN67
	DD	imagerel $LN67+119
	DD	imagerel $unwind$??0?$_Hash@V?$_Umap_traits@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@V?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@1@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ DD imagerel $LN34
	DD	imagerel $LN34+91
	DD	imagerel $unwind$?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD_K@Z DD imagerel $LN18
	DD	imagerel $LN18+39
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Yarn@D@std@@QEAA@XZ DD imagerel $LN12
	DD	imagerel $LN12+35
	DD	imagerel $unwind$??1?$_Yarn@D@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Yarn@_W@std@@QEAA@XZ DD imagerel $LN12
	DD	imagerel $LN12+35
	DD	imagerel $unwind$??1?$_Yarn@_W@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ DD imagerel $LN140
	DD	imagerel $LN140+36
	DD	imagerel $unwind$??1?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??1?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ DD imagerel $LN140+36
	DD	imagerel $LN140+100
	DD	imagerel $chain$1$??1?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??1?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ DD imagerel $LN140+100
	DD	imagerel $LN140+124
	DD	imagerel $chain$2$??1?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN38
	DD	imagerel $LN38+91
	DD	imagerel $unwind$??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$unordered_map@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@U?$hash@J@2@U?$equal_to@J@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ DD imagerel $LN80
	DD	imagerel $LN80+117
	DD	imagerel $unwind$??0?$unordered_map@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@U?$hash@J@2@U?$equal_to@J@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$main DD	imagerel $LN70
	DD	imagerel $LN70+262
	DD	imagerel $unwind$main
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Hash@V?$_Umap_traits@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@V?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@$0A@@std@@@std@@QEAA@XZ DD imagerel $LN42
	DD	imagerel $LN42+101
	DD	imagerel $unwind$??1?$_Hash@V?$_Umap_traits@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@V?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@$0A@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$unordered_map@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@U?$hash@J@2@U?$equal_to@J@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ DD imagerel $LN48
	DD	imagerel $LN48+101
	DD	imagerel $unwind$??1?$unordered_map@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@U?$hash@J@2@U?$equal_to@J@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?StartServer@ServerInterface@@QEAAHUServer@@@Z DD imagerel $LN4
	DD	imagerel $LN4+99
	DD	imagerel $unwind$?StartServer@ServerInterface@@QEAAHUServer@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1ServerInterface@@QEAA@XZ DD imagerel $LN51
	DD	imagerel $LN51+107
	DD	imagerel $unwind$??1ServerInterface@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ServerInterface@@QEAA@W4SocketTypes@@H@Z DD imagerel $LN104
	DD	imagerel $LN104+452
	DD	imagerel $unwind$??0ServerInterface@@QEAA@W4SocketTypes@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0failure@ios_base@std@@QEAA@AEBV012@@Z DD imagerel $LN24
	DD	imagerel $LN24+87
	DD	imagerel $unwind$??0failure@ios_base@std@@QEAA@AEBV012@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gfailure@ios_base@std@@UEAAPEAXI@Z DD imagerel $LN32
	DD	imagerel $LN32+66
	DD	imagerel $unwind$??_Gfailure@ios_base@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getloc@ios_base@std@@QEBA?AVlocale@2@XZ DD imagerel $LN9
	DD	imagerel $LN9+36
	DD	imagerel $unwind$?getloc@ios_base@std@@QEBA?AVlocale@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@ios_base@std@@QEAAXH_N@Z DD imagerel $LN15
	DD	imagerel $LN15+130
	DD	imagerel $unwind$?clear@ios_base@std@@QEAAXH_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z DD imagerel $LN129
	DD	imagerel $LN129+405
	DD	imagerel $unwind$??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$ctype@D@std@@MEAAPEAXI@Z DD imagerel $LN23
	DD	imagerel $LN23+106
	DD	imagerel $unwind$??_G?$ctype@D@std@@MEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_narrow@?$ctype@D@std@@MEBAPEBDPEBD0DPEAD@Z DD imagerel $LN4
	DD	imagerel $LN4+31
	DD	imagerel $unwind$?do_narrow@?$ctype@D@std@@MEBAPEBDPEBD0DPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_widen@?$ctype@D@std@@MEBAPEBDPEBD0PEAD@Z DD imagerel $LN4
	DD	imagerel $LN4+29
	DD	imagerel $unwind$?do_widen@?$ctype@D@std@@MEBAPEBDPEBD0PEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z DD imagerel $LN14
	DD	imagerel $LN14+21
	DD	imagerel $unwind$?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z DD imagerel $LN14+21
	DD	imagerel $LN14+58
	DD	imagerel $chain$0$?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z DD imagerel $LN14+58
	DD	imagerel $LN14+72
	DD	imagerel $chain$1$?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z DD imagerel $LN14
	DD	imagerel $LN14+21
	DD	imagerel $unwind$?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z DD imagerel $LN14+21
	DD	imagerel $LN14+58
	DD	imagerel $chain$0$?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z DD imagerel $LN14+58
	DD	imagerel $LN14+72
	DD	imagerel $chain$1$?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$ctype@D@std@@IEAAXXZ DD imagerel $LN12
	DD	imagerel $LN12+64
	DD	imagerel $unwind$?_Tidy@?$ctype@D@std@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Init@?$ctype@D@std@@IEAAXAEBV_Locinfo@2@@Z DD imagerel $LN6
	DD	imagerel $LN6+40
	DD	imagerel $unwind$?_Init@?$ctype@D@std@@IEAAXAEBV_Locinfo@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ctype@D@std@@MEAA@XZ DD imagerel $LN15
	DD	imagerel $LN15+73
	DD	imagerel $unwind$??1?$ctype@D@std@@MEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD imagerel $LN118
	DD	imagerel $LN118+395
	DD	imagerel $unwind$?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA DD imagerel ?dtor$0@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DD	imagerel ?dtor$0@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA+32
	DD	imagerel $unwind$?dtor$0@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ctype@D@std@@QEAA@AEBV_Locinfo@1@_K@Z DD imagerel $LN22
	DD	imagerel $LN22+57
	DD	imagerel $unwind$??0?$ctype@D@std@@QEAA@AEBV_Locinfo@1@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gctype_base@std@@UEAAPEAXI@Z DD imagerel $LN9
	DD	imagerel $LN9+43
	DD	imagerel $unwind$??_Gctype_base@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gfacet@locale@std@@MEAAPEAXI@Z DD imagerel $LN9
	DD	imagerel $LN9+43
	DD	imagerel $unwind$??_Gfacet@locale@std@@MEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z DD imagerel $LN13
	DD	imagerel $LN13+97
	DD	imagerel $unwind$?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1locale@std@@QEAA@XZ DD imagerel $LN9
	DD	imagerel $LN9+47
	DD	imagerel $unwind$??1locale@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0locale@std@@QEAA@AEBV01@@Z DD imagerel $LN6
	DD	imagerel $LN6+32
	DD	imagerel $unwind$??0locale@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Bid@locale@std@@QEAA_KXZ DD imagerel $LN10
	DD	imagerel $LN10+122
	DD	imagerel $unwind$??Bid@locale@std@@QEAA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getctype@_Locinfo@std@@QEBA?AU_Ctypevec@@XZ DD imagerel $LN4
	DD	imagerel $LN4+42
	DD	imagerel $unwind$?_Getctype@_Locinfo@std@@QEBA?AU_Ctypevec@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Locinfo@std@@QEAA@XZ DD imagerel $LN48
	DD	imagerel $LN48+146
	DD	imagerel $unwind$??1_Locinfo@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Locinfo@std@@QEAA@PEBD@Z DD imagerel $LN32
	DD	imagerel $LN32+119
	DD	imagerel $unwind$??0_Locinfo@std@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G_Facet_base@std@@UEAAPEAXI@Z DD imagerel $LN9
	DD	imagerel $LN9+43
	DD	imagerel $unwind$??_G_Facet_base@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_cast@std@@QEAA@AEBV01@@Z DD imagerel $LN9
	DD	imagerel $LN9+60
	DD	imagerel $unwind$??0bad_cast@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Throw_bad_cast@std@@YAXXZ DD imagerel $LN4
	DD	imagerel $LN4+32
	DD	imagerel $unwind$?_Throw_bad_cast@std@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_cast@std@@UEAAPEAXI@Z DD imagerel $LN17
	DD	imagerel $LN17+66
	DD	imagerel $unwind$??_Gbad_cast@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G_Iostream_error_category2@std@@UEAAPEAXI@Z DD imagerel $LN9
	DD	imagerel $LN9+33
	DD	imagerel $unwind$??_G_Iostream_error_category2@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?message@_Iostream_error_category2@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD imagerel $LN46
	DD	imagerel $LN46+114
	DD	imagerel $unwind$?message@_Iostream_error_category2@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_System_error@std@@QEAA@AEBV01@@Z DD imagerel $LN14
	DD	imagerel $LN14+77
	DD	imagerel $unwind$??0_System_error@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0system_error@std@@QEAA@AEBV01@@Z DD imagerel $LN19
	DD	imagerel $LN19+87
	DD	imagerel $unwind$??0system_error@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gsystem_error@std@@UEAAPEAXI@Z DD imagerel $LN27
	DD	imagerel $LN27+66
	DD	imagerel $unwind$??_Gsystem_error@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z DD imagerel $LN125
	DD	imagerel $LN125+413
	DD	imagerel $unwind$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G_System_error@std@@UEAAPEAXI@Z DD imagerel $LN22
	DD	imagerel $LN22+66
	DD	imagerel $unwind$??_G_System_error@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD imagerel $LN67
	DD	imagerel $LN67+251
	DD	imagerel $unwind$??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z DD imagerel $LN186
	DD	imagerel $LN186+408
	DD	imagerel $unwind$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z DD imagerel $LN16
	DD	imagerel $LN16+63
	DD	imagerel $unwind$?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD imagerel $LN7
	DD	imagerel $LN7+31
	DD	imagerel $unwind$?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0runtime_error@std@@QEAA@AEBV01@@Z DD imagerel $LN9
	DD	imagerel $LN9+60
	DD	imagerel $unwind$??0runtime_error@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gruntime_error@std@@UEAAPEAXI@Z DD imagerel $LN17
	DD	imagerel $LN17+66
	DD	imagerel $unwind$??_Gruntime_error@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD imagerel $LN19
	DD	imagerel $LN19+109
	DD	imagerel $unwind$??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@QEBD@Z DD imagerel $LN6
	DD	imagerel $LN6+89
	DD	imagerel $unwind$??0exception@std@@QEAA@QEBD@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@QEBD@Z DD 021519H
	DD	030027206H
	DD	imagerel __GSHandlerCheck
	DD	030H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 021519H
	DD	030027206H
	DD	imagerel __GSHandlerCheck
	DD	030H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gruntime_error@std@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0runtime_error@std@@QEAA@AEBV01@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z DB 08H
	DB	'!', 02H
	DB	02H
	DB	'0'
	DB	04H
	DB	'>'
	DB	02H
	DB	0e1H, 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z DB 04H
	DB	0cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0b0H
	DB	032H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	070H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z DB 028H
	DD	imagerel $stateUnwindMap$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z
	DD	imagerel $ip2state$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z DD 061b19H
	DD	015340cH
	DD	07008d20cH
	DD	050066007H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z
	DD	062H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 041c19H
	DD	015340dH
	DD	07006f20dH
	DD	imagerel __GSHandlerCheck
	DD	070H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G_System_error@std@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z DB 08H
	DB	0c4H
	DB	00H
	DB	' '
	DB	02H
	DB	0e1H, 02H
	DB	00H
	DB	0daH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z DB 02H
	DB	0aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z DB 028H
	DD	imagerel $stateUnwindMap$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z
	DD	imagerel $ip2state$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z DD 051f19H
	DD	019340dH
	DD	014010dH
	DD	07006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??0system_error@std@@QEAA@Verror_code@1@PEBD@Z
	DD	092H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gsystem_error@std@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0system_error@std@@QEAA@AEBV01@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_System_error@std@@QEAA@AEBV01@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?message@_Iostream_error_category2@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD 040a01H
	DD	08340aH
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G_Iostream_error_category2@std@@UEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_cast@std@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Throw_bad_cast@std@@YAXXZ DD 010401H
	DD	08204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_cast@std@@QEAA@AEBV01@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G_Facet_base@std@@UEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0_Locinfo@std@@QEAA@PEBD@Z DB 02H
	DB	0acH
	DB	0eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0_Locinfo@std@@QEAA@PEBD@Z DB 0eH
	DB	0cH
	DD	imagerel ??1_Lockit@std@@QEAA@XZ
	DB	060H
	DB	036H
	DD	imagerel ?dtor$1@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$5@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$6@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0_Locinfo@std@@QEAA@PEBD@Z DB 028H
	DD	imagerel $stateUnwindMap$??0_Locinfo@std@@QEAA@PEBD@Z
	DD	imagerel $ip2state$??0_Locinfo@std@@QEAA@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Locinfo@std@@QEAA@PEBD@Z DD 040f11H
	DD	07340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0_Locinfo@std@@QEAA@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1_Locinfo@std@@QEAA@XZ DB 02H
	DB	01aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1_Locinfo@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1_Locinfo@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Locinfo@std@@QEAA@XZ DD 040a19H
	DD	06340aH
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1_Locinfo@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getctype@_Locinfo@std@@QEBA?AU_Ctypevec@@XZ DD 020601H
	DD	030027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Bid@locale@std@@QEAA_KXZ DD 021519H
	DD	030025206H
	DD	imagerel __GSHandlerCheck
	DD	028H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0locale@std@@QEAA@AEBV01@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1locale@std@@QEAA@XZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gfacet@locale@std@@MEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gctype_base@std@@UEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ctype@D@std@@QEAA@AEBV_Locinfo@1@_K@Z DD 020601H
	DD	030027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DB 08H
	DB	't'
	DB	00H
	DB	0f2H
	DB	010H
	DB	'f'
	DB	012H
	DB	'}', 02H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DB 012H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DB	02aH
	DD	imagerel ??1_Lockit@std@@QEAA@XZ
	DB	040H
	DB	036H
	DD	imagerel ?dtor$3@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$5@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$6@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$7@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$8@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA
	DB	0adH
	DB	02H
	DD	imagerel __std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DB 028H
	DD	imagerel $stateUnwindMap$?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
	DD	imagerel $ip2state$?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z DD 091a11H
	DD	01c641aH
	DD	01b341aH
	DD	016011aH
	DD	0700ce00eH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ctype@D@std@@MEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Init@?$ctype@D@std@@IEAAXAEBV_Locinfo@2@@Z DD 020601H
	DD	030027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$ctype@D@std@@IEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z DD 021H
	DD	imagerel $LN14
	DD	imagerel $LN14+21
	DD	imagerel $unwind$?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z DD 020521H
	DD	087405H
	DD	imagerel $LN14
	DD	imagerel $LN14+21
	DD	imagerel $unwind$?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z DD 040a01H
	DD	09340aH
	DD	06006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z DD 021H
	DD	imagerel $LN14
	DD	imagerel $LN14+21
	DD	imagerel $unwind$?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z DD 020521H
	DD	087405H
	DD	imagerel $LN14
	DD	imagerel $LN14+21
	DD	imagerel $unwind$?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z DD 040a01H
	DD	09340aH
	DD	06006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_widen@?$ctype@D@std@@MEBAPEBDPEBD0PEAD@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_narrow@?$ctype@D@std@@MEBAPEBDPEBD0DPEAD@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$ctype@D@std@@MEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z DB 08H
	DB	0beH
	DB	00H
	DB	' '
	DB	02H
	DB	0cdH, 02H
	DB	00H
	DB	0daH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z DB 02H
	DB	0aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z
	DD	imagerel $ip2state$??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z DD 052319H
	DD	0a6811H
	DD	0160109H
	DD	03002H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z
	DD	092H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@ios_base@std@@QEAAXH_N@Z DD 032a01H
	DD	0c342aH
	DD	0c204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getloc@ios_base@std@@QEBA?AVlocale@2@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gfailure@ios_base@std@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0failure@ios_base@std@@QEAA@AEBV012@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0ServerInterface@@QEAA@W4SocketTypes@@H@Z DB 08H
	DB	'`'
	DB	00H
	DB	'|'
	DB	04H
	DB	'%', 02H
	DB	06H
	DB	0ddH, 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0ServerInterface@@QEAA@W4SocketTypes@@H@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$2@?0???0ServerInterface@@QEAA@W4SocketTypes@@H@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???0ServerInterface@@QEAA@W4SocketTypes@@H@Z@4HA
	DB	05cH
	DD	imagerel ??1?$unordered_map@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@U?$hash@J@2@U?$equal_to@J@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ
	DB	081H
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0ServerInterface@@QEAA@W4SocketTypes@@H@Z DB 028H
	DD	imagerel $stateUnwindMap$??0ServerInterface@@QEAA@W4SocketTypes@@H@Z
	DD	imagerel $ip2state$??0ServerInterface@@QEAA@W4SocketTypes@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ServerInterface@@QEAA@W4SocketTypes@@H@Z DD 061411H
	DD	0153414H
	DD	0700df214H
	DD	0500b600cH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0ServerInterface@@QEAA@W4SocketTypes@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1ServerInterface@@QEAA@XZ DB 02H
	DB	012H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1ServerInterface@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1ServerInterface@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1ServerInterface@@QEAA@XZ DD 020619H
	DD	030023206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1ServerInterface@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?StartServer@ServerInterface@@QEAAHUServer@@@Z DD 040a01H
	DD	08340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$unordered_map@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@U?$hash@J@2@U?$equal_to@J@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Hash@V?$_Umap_traits@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@V?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@$0A@@std@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$main DB 08H
	DB	'd'
	DB	00H
	DB	'>'
	DB	02H
	DB	'Z'
	DB	04H
	DB	0e8H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$main DB 04H
	DB	0aH
	DD	imagerel ??1ServerInterface@@QEAA@XZ
	DB	040H
	DB	03eH
	DD	imagerel __std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$main DB 028H
	DD	imagerel $stateUnwindMap$main
	DD	imagerel $ip2state$main
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$main DD	031b19H
	DD	01e0109H
	DD	03002H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$main
	DD	0e2H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$unordered_map@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@U?$hash@J@2@U?$equal_to@J@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ DB 04H
	DB	'F'
	DB	00H
	DB	'|'
	DB	04H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$unordered_map@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@U?$hash@J@2@U?$equal_to@J@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ DB 04H
	DB	0eH
	DD	imagerel ?dtor$1@?0???0?$unordered_map@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@U?$hash@J@2@U?$equal_to@J@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???0?$unordered_map@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@U?$hash@J@2@U?$equal_to@J@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$unordered_map@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@U?$hash@J@2@U?$equal_to@J@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ DB 028H
	DD	imagerel $stateUnwindMap$??0?$unordered_map@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@U?$hash@J@2@U?$equal_to@J@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ
	DD	imagerel $ip2state$??0?$unordered_map@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@U?$hash@J@2@U?$equal_to@J@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$unordered_map@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@U?$hash@J@2@U?$equal_to@J@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ DD 040f11H
	DD	07340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$unordered_map@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@U?$hash@J@2@U?$equal_to@J@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??1?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ DD 021H
	DD	imagerel $LN140
	DD	imagerel $LN140+36
	DD	imagerel $unwind$??1?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??1?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ DD 040a21H
	DD	08740aH
	DD	073405H
	DD	imagerel $LN140
	DD	imagerel $LN140+36
	DD	imagerel $unwind$??1?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ DD 040b01H
	DD	09640bH
	DD	0e007320bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Yarn@_W@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Yarn@D@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD_K@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Hash@V?$_Umap_traits@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@V?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@1@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@1@@Z DB 04H
	DB	'J'
	DB	00H
	DB	'|'
	DB	04H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Hash@V?$_Umap_traits@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@V?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@1@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@1@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$_Hash@V?$_Umap_traits@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@V?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@1@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0?$_Hash@V?$_Umap_traits@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@V?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@1@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_Hash@V?$_Umap_traits@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@V?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@1@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0?$_Hash@V?$_Umap_traits@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@V?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@1@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@1@@Z
	DD	imagerel $ip2state$??0?$_Hash@V?$_Umap_traits@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@V?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@1@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Hash@V?$_Umap_traits@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@V?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@1@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@1@@Z DD 040f11H
	DD	07340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_Hash@V?$_Umap_traits@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@V?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@1@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?_Tidy@?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@AEAAXXZ DD 021H
	DD	imagerel $LN136
	DD	imagerel $LN136+36
	DD	imagerel $unwind$?_Tidy@?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?_Tidy@?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@AEAAXXZ DD 040a21H
	DD	08740aH
	DD	073405H
	DD	imagerel $LN136
	DD	imagerel $LN136+36
	DD	imagerel $unwind$?_Tidy@?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@AEAAXXZ DD 040b01H
	DD	09640bH
	DD	0e007320bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$_Yarn@_W@std@@AEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$_Yarn@D@std@@AEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD 021H
	DD	imagerel $LN46
	DD	imagerel $LN46+35
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD 020521H
	DD	093405H
	DD	imagerel $LN46
	DD	imagerel $LN46+35
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD 040a01H
	DD	0a640aH
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@QEBD_K@Z@QEBA@QEAD0101@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@1@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@AEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z DB 08H
	DB	0bdH, 02H
	DB	02H
	DB	'~'
	DB	04H
	DB	'0'
	DB	00H
	DB	'Z'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z DB 04H
	DB	0aH
	DD	imagerel ??1_Lockit@std@@QEAA@XZ
	DB	048H
	DB	032H
	DD	imagerel ??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ
	DB	050H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z
	DD	imagerel $ip2state$??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z DD 082119H
	DD	0e5412H
	DD	0d3412H
	DD	0e00e7212H
	DD	0600b700cH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z
	DD	032H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$4@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD 020a01H
	DD	05006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 0cH
	DB	0d8H
	DB	00H
	DB	'V'
	DB	02H
	DB	'E', 02H
	DB	06H
	DB	01dH, 03H
	DB	04H
	DB	0eaH
	DB	0aH
	DB	0b2H
	DB	04H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 02H
	DB	011H
	DB	080H
	DD	imagerel ?catch$4@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DB	0c5H, 07H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 02H
	DB	04H
	DB	04H
	DB	06H
	DD	imagerel $handlerMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 0aH
	DB	0aH
	DD	imagerel ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DB	040H
	DB	03aH
	DD	imagerel ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DB	040H
	DB	030H
	DB	038H
	DB	07eH
	DD	imagerel __std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 038H
	DD	imagerel $stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	imagerel $tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	imagerel $ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 081619H
	DD	0173416H
	DD	0f012d216H
	DD	0c00ee010H
	DD	0600b700cH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z DD 021H
	DD	imagerel $LN160
	DD	imagerel $LN160+56
	DD	imagerel $unwind$??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z DD 060021H
	DD	04e400H
	DD	057400H
	DD	0e5400H
	DD	imagerel $LN160
	DD	imagerel $LN160+56
	DD	imagerel $unwind$??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z DD 061321H
	DD	04e413H
	DD	05740eH
	DD	0e5405H
	DD	imagerel $LN160
	DD	imagerel $LN160+56
	DD	imagerel $unwind$??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z DD 060d01H
	DD	0f009520dH
	DD	0c005d007H
	DD	030026003H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 02H
	DB	'd'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel __std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 068H
	DD	imagerel $stateUnwindMap$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 020619H
	DD	030023206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DB 04H
	DB	'X'
	DB	00H
	DB	'J'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DB 02H
	DB	0cH
	DD	imagerel ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
	DD	imagerel $ip2state$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 040f11H
	DD	07340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$9@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA DD 020a01H
	DD	05006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ DB 0aH
	DB	08cH
	DB	00H
	DB	'2'
	DB	04H
	DB	0f6H
	DB	08H
	DB	01eH
	DB	00H
	DB	0aeH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ DB 02H
	DB	011H
	DB	080H
	DD	imagerel ?catch$9@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA
	DB	0f0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ DB 02H
	DB	02H
	DB	02H
	DB	04H
	DD	imagerel $handlerMap$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ DB 08H
	DB	0aH
	DD	imagerel ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DB	0c0H
	DB	030H
	DB	038H
	DB	04eH
	DD	imagerel __std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ DB 038H
	DD	imagerel $stateUnwindMap$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
	DD	imagerel $tryMap$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
	DD	imagerel $ip2state$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ DD 062119H
	DD	0146412H
	DD	0133412H
	DD	0700bf212H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
	DD	073H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$4@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA DD 020a01H
	DD	05006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z DB 0aH
	DB	'h'
	DB	00H
	DB	'P'
	DB	02H
	DB	0caH
	DB	06H
	DB	0faH
	DB	0aH
	DB	098H
	DB	04H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z DB 02H
	DB	011H
	DB	080H
	DD	imagerel ?catch$4@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA
	DB	'u', 03H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z DB 02H
	DB	04H
	DB	04H
	DB	06H
	DD	imagerel $handlerMap$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z DB 0aH
	DB	0aH
	DD	imagerel ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DB	040H
	DB	03aH
	DD	imagerel ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DB	040H
	DB	030H
	DB	038H
	DB	07eH
	DD	imagerel __std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z DB 038H
	DD	imagerel $stateUnwindMap$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
	DD	imagerel $tryMap$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
	DD	imagerel $ip2state$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z DD 040c19H
	DD	07008d20cH
	DD	030066007H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z DB 0aH
	DB	')', 03H
	DB	04H
	DB	08aH
	DB	06H
	DB	'0'
	DB	02H
	DB	'4'
	DB	00H
	DB	08cH
	DB	04H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z DB 06H
	DB	0aH
	DD	imagerel ??1locale@std@@QEAA@XZ
	DB	040H
	DB	032H
	DD	imagerel ??1_Lockit@std@@QEAA@XZ
	DB	068H
	DB	032H
	DD	imagerel ??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ
	DB	070H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z DB 028H
	DD	imagerel $stateUnwindMap$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
	DD	imagerel $ip2state$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z DD 0a2719H
	DD	0116418H
	DD	0105418H
	DD	0e3418H
	DD	0f0149218H
	DD	07010e012H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
	DD	042H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z DD 033f01H
	DD	0c343fH
	DD	0c204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 02H
	DB	'6'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 010419H
	DD	04204H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA DB 00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA DB 02H
	DB	08H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA DB 069H
	DD	imagerel $stateUnwindMap$?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA
	DD	imagerel $ip2state$?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA
	DB	'p'
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ DB 04H
	DB	'L'
	DB	02H
	DB	0f6H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ DB 02H
	DB	011H
	DB	080H
	DD	imagerel ?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA
	DB	092H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ DB 02H
	DB	00H
	DB	00H
	DB	02H
	DD	imagerel $handlerMap$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ DB 04H
	DB	08H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ DB 078H
	DD	imagerel $stateUnwindMap$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
	DD	imagerel $tryMap$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
	DD	imagerel $ip2state$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ DD 020619H
	DD	03002b206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z DD 033c01H
	DD	0c343cH
	DD	0c204H
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@QEBD@Z
_TEXT	SEGMENT
_InitData$ = 32
__$ArrayPad$ = 48
this$ = 80
_Message$ = 88
??0exception@std@@QEAA@QEBD@Z PROC			; std::exception::exception, COMDAT

; 60   :     {

$LN6:
	push	rbx
	sub	rsp, 64					; 00000040H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	r8, rdx

; 61   :         __std_exception_data _InitData = { _Message, true };

	mov	BYTE PTR _InitData$[rsp+8], 1
	lea	rdx, QWORD PTR [rcx+8]
	mov	QWORD PTR _InitData$[rsp], r8
	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	rbx, rcx
	mov	QWORD PTR [rcx], rax
	xorps	xmm0, xmm0

; 62   :         __std_exception_copy(&_InitData, &_Data);

	lea	rcx, QWORD PTR _InitData$[rsp]
	movups	XMMWORD PTR [rdx], xmm0
	call	__std_exception_copy

; 63   :     }

	mov	rax, rbx
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 64					; 00000040H
	pop	rbx
	ret	0
??0exception@std@@QEAA@QEBD@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\stdexcept
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\stdexcept
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\vcruntime_exception.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\stdexcept
;	COMDAT ??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_InitData$1 = 32
__$ArrayPad$ = 48
this$ = 80
_Message$ = 88
??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::runtime_error::runtime_error, COMDAT

; 104  :     explicit runtime_error(const string& _Message) : _Mybase(_Message.c_str()) {}

$LN19:
	push	rbx
	sub	rsp, 64					; 00000040H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring

; 2244 :         return _Myres > _Small_string_capacity;

	cmp	QWORD PTR [rdx+24], 15
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\stdexcept

; 104  :     explicit runtime_error(const string& _Message) : _Mybase(_Message.c_str()) {}

	mov	r8, rdx
	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring

; 2236 :         if (_Large_mode_engaged()) {

	jbe	SHORT $LN7@runtime_er

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	r8, QWORD PTR [rdx]
$LN7@runtime_er:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\vcruntime_exception.h

; 59   :         : _Data()

	lea	rdx, QWORD PTR [rcx+8]

; 60   :     {
; 61   :         __std_exception_data _InitData = { _Message, true };

	mov	QWORD PTR _InitData$1[rsp], r8
	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	BYTE PTR _InitData$1[rsp+8], 1
	mov	QWORD PTR [rcx], rax
	xorps	xmm0, xmm0

; 62   :         __std_exception_copy(&_InitData, &_Data);

	lea	rcx, QWORD PTR _InitData$1[rsp]
	movups	XMMWORD PTR [rdx], xmm0
	call	__std_exception_copy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\stdexcept

; 104  :     explicit runtime_error(const string& _Message) : _Mybase(_Message.c_str()) {}

	lea	rax, OFFSET FLAT:??_7runtime_error@std@@6B@
	mov	QWORD PTR [rbx], rax
	mov	rax, rbx
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 64					; 00000040H
	pop	rbx
	ret	0
??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::runtime_error::runtime_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\vcruntime_exception.h
;	COMDAT ??_Gruntime_error@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gruntime_error@std@@UEAAPEAXI@Z PROC			; std::runtime_error::`scalar deleting destructor', COMDAT
$LN17:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 90   :     {

	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	rdi, rcx
	mov	QWORD PTR [rcx], rax
	mov	ebx, edx

; 91   :         __std_exception_destroy(&_Data);

	add	rcx, 8
	call	__std_exception_destroy
	test	bl, 1
	je	SHORT $LN13@scalar
	mov	edx, 24
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
$LN13@scalar:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_Gruntime_error@std@@UEAAPEAXI@Z ENDP			; std::runtime_error::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\vcruntime_exception.h
;	COMDAT ??1runtime_error@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1runtime_error@std@@UEAA@XZ PROC			; std::runtime_error::~runtime_error, COMDAT

; 90   :     {

	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rcx], rax

; 91   :         __std_exception_destroy(&_Data);

	add	rcx, 8
	jmp	__std_exception_destroy
??1runtime_error@std@@UEAA@XZ ENDP			; std::runtime_error::~runtime_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\vcruntime_exception.h
;	COMDAT ??0runtime_error@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0runtime_error@std@@QEAA@AEBV01@@Z PROC		; std::runtime_error::runtime_error, COMDAT
$LN9:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rax, rdx

; 73   :     {

	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	xorps	xmm0, xmm0

; 72   :         : _Data()

	lea	rdx, QWORD PTR [rbx+8]

; 73   :     {

	mov	QWORD PTR [rbx], rcx

; 74   :         __std_exception_copy(&_Other._Data, &_Data);

	lea	rcx, QWORD PTR [rax+8]
	movups	XMMWORD PTR [rdx], xmm0
	call	__std_exception_copy
	lea	rax, OFFSET FLAT:??_7runtime_error@std@@6B@
	mov	QWORD PTR [rbx], rax
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0runtime_error@std@@QEAA@AEBV01@@Z ENDP		; std::runtime_error::runtime_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\system_error
;	COMDAT ??8error_category@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??8error_category@std@@QEBA_NAEBV01@@Z PROC		; std::error_category::operator==, COMDAT

; 100  : #ifdef _M_CEE_PURE
; 101  :         return _Addr == _Right._Addr;
; 102  : #else // ^^^ defined(_M_CEE_PURE) / !defined(_M_CEE_PURE) vvv
; 103  :         return _Bit_cast<uintptr_t>(_Addr) == _Bit_cast<uintptr_t>(_Right._Addr);

	mov	rax, QWORD PTR [rdx+8]
	cmp	QWORD PTR [rcx+8], rax
	sete	al

; 104  : #endif // ^^^ !defined(_M_CEE_PURE) ^^^
; 105  :     }

	ret	0
??8error_category@std@@QEBA_NAEBV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\system_error
;	COMDAT ??1error_category@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1error_category@std@@UEAA@XZ PROC			; std::error_category::~error_category, COMDAT

; 87   :     _CONSTEXPR20 virtual ~error_category() noexcept = default;

	ret	0
??1error_category@std@@UEAA@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\system_error
;	COMDAT ??0error_code@std@@QEAA@HAEBVerror_category@1@@Z
_TEXT	SEGMENT
this$ = 8
_Val$ = 16
_Cat$ = 24
??0error_code@std@@QEAA@HAEBVerror_category@1@@Z PROC	; std::error_code::error_code, COMDAT

; 171  :     error_code(int _Val, const error_category& _Cat) noexcept : _Myval(_Val), _Mycat(&_Cat) {}

	mov	DWORD PTR [rcx], edx
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], r8
	ret	0
??0error_code@std@@QEAA@HAEBVerror_category@1@@Z ENDP	; std::error_code::error_code
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\system_error
;	COMDAT ?value@error_code@std@@QEBAHXZ
_TEXT	SEGMENT
this$ = 8
?value@error_code@std@@QEBAHXZ PROC			; std::error_code::value, COMDAT

; 197  :         return _Myval;

	mov	eax, DWORD PTR [rcx]

; 198  :     }

	ret	0
?value@error_code@std@@QEBAHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\system_error
;	COMDAT ?category@error_code@std@@QEBAAEBVerror_category@2@XZ
_TEXT	SEGMENT
this$ = 8
?category@error_code@std@@QEBAAEBVerror_category@2@XZ PROC ; std::error_code::category, COMDAT

; 201  :         return *_Mycat;

	mov	rax, QWORD PTR [rcx+8]

; 202  :     }

	ret	0
?category@error_code@std@@QEBAAEBVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\system_error
;	COMDAT ?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
this$ = 64
__$ReturnUdt$ = 72
?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::error_code::message, COMDAT

; 206  :     _NODISCARD string message() const {

$LN7:
	push	rbx
	sub	rsp, 48					; 00000030H

; 207  :         return category().message(value());

	mov	r8d, DWORD PTR [rcx]
	mov	rbx, rdx
	mov	rcx, QWORD PTR [rcx+8]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	mov	rax, rbx

; 208  :     }

	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::error_code::message
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\system_error
;	COMDAT ??0error_condition@std@@QEAA@HAEBVerror_category@1@@Z
_TEXT	SEGMENT
this$ = 8
_Val$ = 16
_Cat$ = 24
??0error_condition@std@@QEAA@HAEBVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT

; 262  :     error_condition(int _Val, const error_category& _Cat) noexcept : _Myval(_Val), _Mycat(&_Cat) {}

	mov	DWORD PTR [rcx], edx
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], r8
	ret	0
??0error_condition@std@@QEAA@HAEBVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\system_error
;	COMDAT ?value@error_condition@std@@QEBAHXZ
_TEXT	SEGMENT
this$ = 8
?value@error_condition@std@@QEBAHXZ PROC		; std::error_condition::value, COMDAT

; 288  :         return _Myval;

	mov	eax, DWORD PTR [rcx]

; 289  :     }

	ret	0
?value@error_condition@std@@QEBAHXZ ENDP		; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\system_error
;	COMDAT ?category@error_condition@std@@QEBAAEBVerror_category@2@XZ
_TEXT	SEGMENT
this$ = 8
?category@error_condition@std@@QEBAAEBVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT

; 292  :         return *_Mycat;

	mov	rax, QWORD PTR [rcx+8]

; 293  :     }

	ret	0
?category@error_condition@std@@QEBAAEBVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\system_error
;	COMDAT ??8std@@YA_NAEBVerror_condition@0@0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
??8std@@YA_NAEBVerror_condition@0@0@Z PROC		; std::operator==, COMDAT

; 103  :         return _Bit_cast<uintptr_t>(_Addr) == _Bit_cast<uintptr_t>(_Right._Addr);

	mov	rax, QWORD PTR [rdx+8]
	mov	r9, QWORD PTR [rcx+8]
	mov	r8, QWORD PTR [rax+8]
	cmp	QWORD PTR [r9+8], r8

; 305  :         return _Left.category() == _Right.category() && _Left.value() == _Right.value();

	jne	SHORT $LN3@operator
	mov	eax, DWORD PTR [rdx]
	cmp	DWORD PTR [rcx], eax
	jne	SHORT $LN3@operator
	mov	al, 1

; 306  :     }

	ret	0
$LN3@operator:

; 305  :         return _Left.category() == _Right.category() && _Left.value() == _Right.value();

	xor	al, al

; 306  :     }

	ret	0
??8std@@YA_NAEBVerror_condition@0@0@Z ENDP		; std::operator==
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\system_error
;	COMDAT ?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
_Errval$ = 24
?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT

; 262  :     error_condition(int _Val, const error_category& _Cat) noexcept : _Myval(_Val), _Mycat(&_Cat) {}

	mov	DWORD PTR [rdx], r8d

; 408  :     // make error_condition for error code
; 409  :     return error_condition(_Errval, *this);

	mov	rax, rdx

; 262  :     error_condition(int _Val, const error_category& _Cat) noexcept : _Myval(_Val), _Mycat(&_Cat) {}

	mov	QWORD PTR [rdx+8], rcx

; 410  : }

	ret	0
?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\system_error
;	COMDAT ?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Errval$ = 72
_Cond$ = 80
?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT

; 412  : _NODISCARD inline bool error_category::equivalent(int _Errval, const error_condition& _Cond) const noexcept {

$LN16:
	push	rbx
	sub	rsp, 48					; 00000030H

; 413  :     return default_error_condition(_Errval) == _Cond;

	mov	rax, QWORD PTR [rcx]
	mov	rbx, r8
	mov	r8d, edx
	lea	rdx, QWORD PTR $T1[rsp]
	call	QWORD PTR [rax+24]

; 103  :         return _Bit_cast<uintptr_t>(_Addr) == _Bit_cast<uintptr_t>(_Right._Addr);

	mov	rcx, QWORD PTR [rbx+8]
	mov	r9, QWORD PTR [rax+8]
	mov	rdx, QWORD PTR [rcx+8]
	cmp	QWORD PTR [r9+8], rdx

; 305  :         return _Left.category() == _Right.category() && _Left.value() == _Right.value();

	jne	SHORT $LN6@equivalent
	mov	ecx, DWORD PTR [rbx]
	cmp	DWORD PTR [rax], ecx
	jne	SHORT $LN6@equivalent

; 413  :     return default_error_condition(_Errval) == _Cond;

	mov	al, 1

; 414  : }

	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
$LN6@equivalent:

; 413  :     return default_error_condition(_Errval) == _Cond;

	xor	al, al

; 414  : }

	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\system_error
;	COMDAT ?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z
_TEXT	SEGMENT
this$ = 8
_Code$ = 16
_Errval$ = 24
?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT

; 103  :         return _Bit_cast<uintptr_t>(_Addr) == _Bit_cast<uintptr_t>(_Right._Addr);

	mov	rax, QWORD PTR [rdx+8]
	mov	r9, QWORD PTR [rax+8]
	cmp	QWORD PTR [rcx+8], r9

; 417  :     return *this == _Code.category() && _Code.value() == _Errval;

	jne	SHORT $LN3@equivalent
	cmp	DWORD PTR [rdx], r8d
	jne	SHORT $LN3@equivalent
	mov	al, 1

; 418  : }

	ret	0
$LN3@equivalent:

; 417  :     return *this == _Code.category() && _Code.value() == _Errval;

	xor	al, al

; 418  : }

	ret	0
?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\system_error
;	COMDAT ?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
_Ec$ = 16
?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z PROC ; std::make_error_code, COMDAT

; 171  :     error_code(int _Val, const error_category& _Cat) noexcept : _Myval(_Val), _Mycat(&_Cat) {}

	lea	rax, OFFSET FLAT:?_Static@?1???$_Immortalize_memcpy_image@V_Iostream_error_category2@std@@@std@@YAAEBV_Iostream_error_category2@1@XZ@4V21@B ; `std::_Immortalize_memcpy_image<std::_Iostream_error_category2>'::`2'::_Static
	mov	DWORD PTR [rcx], edx
	mov	QWORD PTR [rcx+8], rax

; 430  :     return error_code(static_cast<int>(_Ec), _STD iostream_category());

	mov	rax, rcx

; 431  : }

	ret	0
?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z ENDP ; std::make_error_code
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\system_error
;	COMDAT ?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z
_TEXT	SEGMENT
$T1 = 48
$T2 = 56
_Message$GSCopy$ = 88
__$ReturnUdt$GSCopy$ = 88
__$ArrayPad$ = 96
__$ReturnUdt$ = 144
_Errcode$ = 152
_Message$ = 160
?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z PROC ; std::_System_error::_Makestr, COMDAT

; 463  :     static string _Makestr(error_code _Errcode, string _Message) { // compose error message

$LN186:
	mov	QWORD PTR [rsp+32], rbx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 112				; 00000070H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbx, r8
	mov	rsi, rdx
	mov	rdi, rcx
	mov	QWORD PTR __$ReturnUdt$GSCopy$[rsp], rcx
	mov	QWORD PTR _Message$GSCopy$[rsp], rbx
	xor	ebp, ebp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring

; 4279 :         return _Mypair._Myval2._Mysize == 0;

	mov	rcx, QWORD PTR [r8+16]
	test	rcx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\system_error

; 464  :         if (!_Message.empty()) {

	je	SHORT $LN16@Makestr
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring

; 3310 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

	mov	rdx, QWORD PTR [r8+24]
	mov	rax, rdx
	sub	rax, rcx
	cmp	rax, 2
	jb	SHORT $LN17@Makestr

; 3311 :             _ASAN_STRING_MODIFY(*this, _Old_size, _Old_size + _Count);
; 3312 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

	lea	rax, QWORD PTR [rcx+2]
	mov	QWORD PTR [r8+16], rax

; 2226 :         value_type* _Result = _Bx._Buf;

	mov	rax, rbx

; 2244 :         return _Myres > _Small_string_capacity;

	cmp	rdx, 15

; 2227 :         if (_Large_mode_engaged()) {

	jbe	SHORT $LN181@Makestr

; 2228 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rax, QWORD PTR [r8]
$LN181@Makestr:

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	mov	WORD PTR [rax+rcx], 8250		; 0000203aH

; 3315 :             _Traits::assign(_Old_ptr[_Old_size + _Count], _Elem());

	mov	BYTE PTR [rax+rcx+2], 0

; 3316 :             return *this;

	jmp	SHORT $LN16@Makestr
$LN17@Makestr:

; 3317 :         }
; 3318 : 
; 3319 :         return _Reallocate_grow_by(

	mov	QWORD PTR [rsp+32], 2
	lea	r9, OFFSET FLAT:??_C@_02LMMGGCAJ@?3?5@
	movzx	r8d, BYTE PTR $T1[rsp]
	mov	edx, 2
	mov	rcx, rbx
	call	??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append'::`2'::<lambda_1>,char const *,unsigned __int64>
$LN16@Makestr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\system_error

; 207  :         return category().message(value());

	mov	rcx, QWORD PTR [rsi+8]
	mov	rax, QWORD PTR [rcx]
	mov	r8d, DWORD PTR [rsi]
	lea	rdx, QWORD PTR $T2[rsp]
	call	QWORD PTR [rax+16]
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rdx, QWORD PTR $T2[rsp]

; 2244 :         return _Myres > _Small_string_capacity;

	cmp	QWORD PTR $T2[rsp+24], 15

; 2236 :         if (_Large_mode_engaged()) {

	cmova	rdx, QWORD PTR $T2[rsp]

; 3280 :         return append(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

	mov	r8, QWORD PTR $T2[rsp+16]
	mov	rcx, rbx
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	npad	1

; 2244 :         return _Myres > _Small_string_capacity;

	mov	rdx, QWORD PTR $T2[rsp+24]
	cmp	rdx, 15

; 4868 :         if (_My_data._Large_mode_engaged()) {

	jbe	SHORT $LN72@Makestr

; 2643 :         _Al.deallocate(_Old_ptr, _Capacity + 1); // +1 for null terminator

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory

; 950  :         _STD _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T2[rsp]
	mov	rax, rcx

; 253  :         if (_Bytes >= _Big_allocation_threshold) {

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN86@Makestr

; 171  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 172  : 
; 173  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 174  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 188  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	$LN184@Makestr
$LN86@Makestr:

; 258  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN72@Makestr:
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR [rdi], xmm0

; 2308 :     size_type _Mysize = 0; // current length of string (size)

	mov	QWORD PTR [rdi+16], rbp

; 2309 :     size_type _Myres  = 0; // current storage reserved for string (capacity)

	mov	QWORD PTR [rdi+24], rbp

; 3083 :                 _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm0, XMMWORD PTR [rbx]
	movups	XMMWORD PTR [rdi], xmm0
	movups	xmm1, XMMWORD PTR [rbx+16]
	movups	XMMWORD PTR [rdi+16], xmm1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\system_error

; 469  :         return _Message;

	mov	QWORD PTR [rbx+16], rbp
	mov	QWORD PTR [rbx+24], 15
	mov	BYTE PTR [rbx], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring

; 2244 :         return _Myres > _Small_string_capacity;

	mov	rdx, QWORD PTR [rbx+24]
	cmp	rdx, 15

; 4868 :         if (_My_data._Large_mode_engaged()) {

	jbe	SHORT $LN144@Makestr

; 2643 :         _Al.deallocate(_Old_ptr, _Capacity + 1); // +1 for null terminator

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory

; 950  :         _STD _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR [rbx]

; 253  :         if (_Bytes >= _Big_allocation_threshold) {

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN158@Makestr

; 171  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 172  : 
; 173  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 174  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]

; 175  : 
; 176  :     // If the following asserts, it likely means that we are performing
; 177  :     // an aligned delete on memory coming from an unaligned allocation.
; 178  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 179  : 
; 180  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 181  :     // in range [_Min_back_shift, _Non_user_size]
; 182  : #ifdef _DEBUG
; 183  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 184  : #else // ^^^ defined(_DEBUG) / !defined(_DEBUG) vvv
; 185  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 186  : #endif // ^^^ !defined(_DEBUG) ^^^
; 187  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 188  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN155@Makestr

; 189  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN158@Makestr:

; 258  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN144@Makestr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring

; 4875 :         _My_data._Mysize = 0;

	mov	QWORD PTR [rbx+16], rbp

; 4876 :         _My_data._Myres  = _Small_string_capacity;

	mov	QWORD PTR [rbx+24], 15

; 4877 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4878 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR [rbx], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\system_error

; 469  :         return _Message;

	mov	rax, rdi

; 470  :     }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+168]
	add	rsp, 112				; 00000070H
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
$LN184@Makestr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory

; 188  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	_invalid_parameter_noinfo_noreturn
	npad	1
$LN155@Makestr:
	call	_invalid_parameter_noinfo_noreturn
	int	3
$LN182@Makestr:
?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z ENDP ; std::_System_error::_Makestr
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 56
_Message$GSCopy$ = 88
__$ReturnUdt$GSCopy$ = 88
__$ArrayPad$ = 96
__$ReturnUdt$ = 144
_Errcode$ = 152
_Message$ = 160
?dtor$0@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA PROC ; `std::_System_error::_Makestr'::`1'::dtor$0
	mov	rcx, QWORD PTR _Message$GSCopy$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA ENDP ; `std::_System_error::_Makestr'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 56
_Message$GSCopy$ = 88
__$ReturnUdt$GSCopy$ = 88
__$ArrayPad$ = 96
__$ReturnUdt$ = 144
_Errcode$ = 152
_Message$ = 160
?dtor$1@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA PROC ; `std::_System_error::_Makestr'::`1'::dtor$1
	lea	rcx, QWORD PTR $T2[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA ENDP ; `std::_System_error::_Makestr'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\vcruntime_exception.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\stdexcept
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\system_error
;	COMDAT ??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 64
_InitData$3 = 96
this$GSCopy$ = 96
$T4 = 96
__$ArrayPad$ = 112
this$ = 144
_Errcode$ = 152
_Message$ = 160
??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::_System_error::_System_error, COMDAT

; 475  :     _System_error(error_code _Errcode, const string& _Message)

$LN67:
	mov	QWORD PTR [rsp+32], rbx
	push	rdi
	sub	rsp, 128				; 00000080H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rdi, rdx
	mov	QWORD PTR this$GSCopy$[rsp], rcx
	mov	rbx, rcx

; 476  :         : runtime_error(_Makestr(_Errcode, _Message)), _Mycode(_Errcode) {}

	mov	rdx, r8
	lea	rcx, QWORD PTR $T2[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	movups	xmm0, XMMWORD PTR [rdi]
	mov	r8, rax
	lea	rdx, QWORD PTR $T4[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	movaps	XMMWORD PTR $T4[rsp], xmm0
	call	?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z ; std::_System_error::_Makestr
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring

; 2244 :         return _Myres > _Small_string_capacity;

	cmp	QWORD PTR [rax+24], 15

; 2236 :         if (_Large_mode_engaged()) {

	jbe	SHORT $LN12@System_err

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rax, QWORD PTR [rax]
$LN12@System_err:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\vcruntime_exception.h

; 60   :     {

	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@

; 61   :         __std_exception_data _InitData = { _Message, true };

	mov	QWORD PTR _InitData$3[rsp], rax
	mov	QWORD PTR [rbx], rcx
	lea	rdx, QWORD PTR [rbx+8]
	xorps	xmm0, xmm0
	mov	BYTE PTR _InitData$3[rsp+8], 1

; 62   :         __std_exception_copy(&_InitData, &_Data);

	lea	rcx, QWORD PTR _InitData$3[rsp]
	movups	XMMWORD PTR [rdx], xmm0
	call	__std_exception_copy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring

; 2244 :         return _Myres > _Small_string_capacity;

	mov	rdx, QWORD PTR $T1[rsp+24]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\stdexcept

; 104  :     explicit runtime_error(const string& _Message) : _Mybase(_Message.c_str()) {}

	lea	rax, OFFSET FLAT:??_7runtime_error@std@@6B@
	mov	QWORD PTR [rbx], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring

; 2244 :         return _Myres > _Small_string_capacity;

	cmp	rdx, 15

; 4868 :         if (_My_data._Large_mode_engaged()) {

	jbe	SHORT $LN38@System_err
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory

; 950  :         _STD _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T1[rsp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring

; 2643 :         _Al.deallocate(_Old_ptr, _Capacity + 1); // +1 for null terminator

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory

; 950  :         _STD _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rax, rcx

; 253  :         if (_Bytes >= _Big_allocation_threshold) {

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN52@System_err

; 174  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H
	sub	rax, rcx

; 188  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	SHORT $LN65@System_err
$LN52@System_err:

; 258  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN38@System_err:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\system_error

; 476  :         : runtime_error(_Makestr(_Errcode, _Message)), _Mycode(_Errcode) {}

	movups	xmm0, XMMWORD PTR [rdi]
	lea	rax, OFFSET FLAT:??_7_System_error@std@@6B@
	mov	QWORD PTR [rbx], rax
	mov	rax, rbx
	movups	XMMWORD PTR [rbx+24], xmm0
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+168]
	add	rsp, 128				; 00000080H
	pop	rdi
	ret	0
$LN65@System_err:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory

; 188  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	_invalid_parameter_noinfo_noreturn
	int	3
$LN63@System_err:
??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::_System_error::_System_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\vcruntime_exception.h
;	COMDAT ??_G_System_error@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G_System_error@std@@UEAAPEAXI@Z PROC			; std::_System_error::`scalar deleting destructor', COMDAT
$LN22:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 90   :     {

	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	rdi, rcx
	mov	QWORD PTR [rcx], rax
	mov	ebx, edx

; 91   :         __std_exception_destroy(&_Data);

	add	rcx, 8
	call	__std_exception_destroy
	test	bl, 1
	je	SHORT $LN18@scalar
	mov	edx, 40					; 00000028H
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
$LN18@scalar:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_G_System_error@std@@UEAAPEAXI@Z ENDP			; std::_System_error::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\vcruntime_exception.h
;	COMDAT ??1_System_error@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1_System_error@std@@UEAA@XZ PROC			; std::_System_error::~_System_error, COMDAT

; 90   :     {

	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rcx], rax

; 91   :         __std_exception_destroy(&_Data);

	add	rcx, 8
	jmp	__std_exception_destroy
??1_System_error@std@@UEAA@XZ ENDP			; std::_System_error::~_System_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\vcruntime_exception.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\stdexcept
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\system_error
;	COMDAT ??0system_error@std@@QEAA@Verror_code@1@PEBD@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 64
$T3 = 96
_InitData$4 = 128
$T5 = 128
this$GSCopy$ = 128
__$ArrayPad$ = 144
this$ = 176
_Errcode$ = 184
_Message$ = 192
??0system_error@std@@QEAA@Verror_code@1@PEBD@Z PROC	; std::system_error::system_error, COMDAT

; 490  :     system_error(error_code _Errcode, const char* _Message) : _Mybase(_Errcode, _Message) {}

$LN125:
	mov	QWORD PTR [rsp+32], rbx
	push	rdi
	sub	rsp, 160				; 000000a0H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rax, r8
	mov	rdi, rdx
	mov	rbx, rcx
	mov	QWORD PTR this$GSCopy$[rsp], rcx
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T1[rsp], xmm0
	xorps	xmm1, xmm1

; 2308 :     size_type _Mysize = 0; // current length of string (size)

	movdqu	XMMWORD PTR $T1[rsp+16], xmm1

; 398  :             return __builtin_strlen(_First);

	mov	r8, -1
	npad	8
$LL119@system_err:
	inc	r8
	cmp	BYTE PTR [rax+r8], 0
	jne	SHORT $LL119@system_err

; 2560 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	mov	rdx, rax
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\system_error

; 476  :         : runtime_error(_Makestr(_Errcode, _Message)), _Mycode(_Errcode) {}

	lea	rdx, QWORD PTR $T1[rsp]
	lea	rcx, QWORD PTR $T3[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	movups	xmm0, XMMWORD PTR [rdi]
	movaps	XMMWORD PTR $T5[rsp], xmm0
	mov	r8, rax
	lea	rdx, QWORD PTR $T5[rsp]
	lea	rcx, QWORD PTR $T2[rsp]
	call	?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z ; std::_System_error::_Makestr
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring

; 2244 :         return _Myres > _Small_string_capacity;

	cmp	QWORD PTR [rax+24], 15

; 2236 :         if (_Large_mode_engaged()) {

	jbe	SHORT $LN34@system_err

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rax, QWORD PTR [rax]
$LN34@system_err:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\vcruntime_exception.h

; 60   :     {

	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rbx], rcx

; 59   :         : _Data()

	lea	rdx, QWORD PTR [rbx+8]
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [rdx], xmm0

; 61   :         __std_exception_data _InitData = { _Message, true };

	mov	QWORD PTR _InitData$4[rsp], rax
	mov	BYTE PTR _InitData$4[rsp+8], 1

; 62   :         __std_exception_copy(&_InitData, &_Data);

	lea	rcx, QWORD PTR _InitData$4[rsp]
	call	__std_exception_copy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\stdexcept

; 104  :     explicit runtime_error(const string& _Message) : _Mybase(_Message.c_str()) {}

	lea	rax, OFFSET FLAT:??_7runtime_error@std@@6B@
	mov	QWORD PTR [rbx], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring

; 2244 :         return _Myres > _Small_string_capacity;

	mov	rdx, QWORD PTR $T2[rsp+24]
	cmp	rdx, 15

; 4868 :         if (_My_data._Large_mode_engaged()) {

	jbe	SHORT $LN60@system_err

; 2643 :         _Al.deallocate(_Old_ptr, _Capacity + 1); // +1 for null terminator

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory

; 950  :         _STD _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T2[rsp]
	mov	rax, rcx

; 253  :         if (_Bytes >= _Big_allocation_threshold) {

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN74@system_err

; 171  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 172  : 
; 173  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 174  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 188  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	$LN122@system_err
$LN74@system_err:

; 258  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN60@system_err:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\system_error

; 476  :         : runtime_error(_Makestr(_Errcode, _Message)), _Mycode(_Errcode) {}

	lea	rax, OFFSET FLAT:??_7_System_error@std@@6B@
	mov	QWORD PTR [rbx], rax
	movups	xmm0, XMMWORD PTR [rdi]
	movups	XMMWORD PTR [rbx+24], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring

; 2244 :         return _Myres > _Small_string_capacity;

	mov	rdx, QWORD PTR $T1[rsp+24]
	cmp	rdx, 15

; 4868 :         if (_My_data._Large_mode_engaged()) {

	jbe	SHORT $LN99@system_err

; 2643 :         _Al.deallocate(_Old_ptr, _Capacity + 1); // +1 for null terminator

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory

; 950  :         _STD _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T1[rsp]
	mov	rax, rcx

; 253  :         if (_Bytes >= _Big_allocation_threshold) {

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN113@system_err

; 171  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 172  : 
; 173  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 174  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 188  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	SHORT $LN123@system_err
$LN113@system_err:

; 258  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN99@system_err:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\system_error

; 490  :     system_error(error_code _Errcode, const char* _Message) : _Mybase(_Errcode, _Message) {}

	lea	rax, OFFSET FLAT:??_7system_error@std@@6B@
	mov	QWORD PTR [rbx], rax
	mov	rax, rbx
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+200]
	add	rsp, 160				; 000000a0H
	pop	rdi
	ret	0
$LN123@system_err:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory

; 188  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	_invalid_parameter_noinfo_noreturn
	npad	1
$LN122@system_err:
	call	_invalid_parameter_noinfo_noreturn
	npad	1
$LN120@system_err:
??0system_error@std@@QEAA@Verror_code@1@PEBD@Z ENDP	; std::system_error::system_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 64
$T3 = 96
_InitData$4 = 128
$T5 = 128
this$GSCopy$ = 128
__$ArrayPad$ = 144
this$ = 176
_Errcode$ = 184
_Message$ = 192
?dtor$0@?0???0system_error@std@@QEAA@Verror_code@1@PEBD@Z@4HA PROC ; `std::system_error::system_error'::`1'::dtor$0
	lea	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0???0system_error@std@@QEAA@Verror_code@1@PEBD@Z@4HA ENDP ; `std::system_error::system_error'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\vcruntime_exception.h
;	COMDAT ??_Gsystem_error@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gsystem_error@std@@UEAAPEAXI@Z PROC			; std::system_error::`scalar deleting destructor', COMDAT
$LN27:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 90   :     {

	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	rdi, rcx
	mov	QWORD PTR [rcx], rax
	mov	ebx, edx

; 91   :         __std_exception_destroy(&_Data);

	add	rcx, 8
	call	__std_exception_destroy
	test	bl, 1
	je	SHORT $LN23@scalar
	mov	edx, 40					; 00000028H
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
$LN23@scalar:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_Gsystem_error@std@@UEAAPEAXI@Z ENDP			; std::system_error::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\vcruntime_exception.h
;	COMDAT ??1system_error@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1system_error@std@@UEAA@XZ PROC			; std::system_error::~system_error, COMDAT

; 90   :     {

	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rcx], rax

; 91   :         __std_exception_destroy(&_Data);

	add	rcx, 8
	jmp	__std_exception_destroy
??1system_error@std@@UEAA@XZ ENDP			; std::system_error::~system_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\vcruntime_exception.h
;	COMDAT ??0system_error@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0system_error@std@@QEAA@AEBV01@@Z PROC		; std::system_error::system_error, COMDAT
$LN19:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx

; 73   :     {

	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rcx], rax
	lea	rdx, QWORD PTR [rcx+8]
	mov	rdi, rcx
	xorps	xmm0, xmm0

; 72   :         : _Data()

	movups	XMMWORD PTR [rdx], xmm0

; 74   :         __std_exception_copy(&_Other._Data, &_Data);

	lea	rcx, QWORD PTR [rbx+8]
	call	__std_exception_copy
	lea	rax, OFFSET FLAT:??_7_System_error@std@@6B@
	mov	QWORD PTR [rdi], rax
	lea	rax, OFFSET FLAT:??_7system_error@std@@6B@
	movups	xmm0, XMMWORD PTR [rbx+24]
	mov	rbx, QWORD PTR [rsp+48]
	mov	QWORD PTR [rdi], rax
	mov	rax, rdi
	movups	XMMWORD PTR [rdi+24], xmm0
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0system_error@std@@QEAA@AEBV01@@Z ENDP		; std::system_error::system_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\vcruntime_exception.h
;	COMDAT ??0_System_error@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0_System_error@std@@QEAA@AEBV01@@Z PROC		; std::_System_error::_System_error, COMDAT
$LN14:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx

; 73   :     {

	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rcx], rax
	lea	rdx, QWORD PTR [rcx+8]
	mov	rdi, rcx
	xorps	xmm0, xmm0

; 72   :         : _Data()

	movups	XMMWORD PTR [rdx], xmm0

; 74   :         __std_exception_copy(&_Other._Data, &_Data);

	lea	rcx, QWORD PTR [rbx+8]
	call	__std_exception_copy
	lea	rax, OFFSET FLAT:??_7_System_error@std@@6B@
	mov	QWORD PTR [rdi], rax
	mov	rax, rdi
	movups	xmm0, XMMWORD PTR [rbx+24]
	mov	rbx, QWORD PTR [rsp+48]
	movups	XMMWORD PTR [rdi+24], xmm0
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0_System_error@std@@QEAA@AEBV01@@Z ENDP		; std::_System_error::_System_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\system_error
;	COMDAT ?name@_Iostream_error_category2@std@@UEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?name@_Iostream_error_category2@std@@UEBAPEBDXZ PROC	; std::_Iostream_error_category2::name, COMDAT

; 552  :         return "iostream";

	lea	rax, OFFSET FLAT:??_C@_08LLGCOLLL@iostream@

; 553  :     }

	ret	0
?name@_Iostream_error_category2@std@@UEBAPEBDXZ ENDP	; std::_Iostream_error_category2::name
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\system_error
;	COMDAT ?message@_Iostream_error_category2@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
this$ = 64
__$ReturnUdt$ = 72
_Errcode$ = 80
?message@_Iostream_error_category2@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Iostream_error_category2::message, COMDAT

; 555  :     _NODISCARD string message(int _Errcode) const override {

$LN46:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 48					; 00000030H
	xor	edi, edi
	mov	rbx, rdx

; 556  :         if (_Errcode == static_cast<int>(io_errc::stream)) {

	cmp	r8d, 1
	jne	SHORT $LN2@message
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring

; 2547 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Count);

	mov	r8d, 21

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR [rdx], xmm0

; 2308 :     size_type _Mysize = 0; // current length of string (size)

	mov	QWORD PTR [rdx+16], rdi

; 2309 :     size_type _Myres  = 0; // current storage reserved for string (capacity)

	mov	QWORD PTR [rdx+24], rdi

; 2547 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Count);

	lea	rdx, OFFSET FLAT:?_Iostream_error@?4??message@_Iostream_error_category2@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z@4QBDB ; `std::_Iostream_error_category2::message'::`5'::_Iostream_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\system_error

; 559  :             return string{_Iostream_error, _Iostream_error_length};

	jmp	SHORT $LN43@message
$LN2@message:

; 560  :         } else {
; 561  :             return _Syserror_map(_Errcode);

	mov	ecx, r8d
	call	?_Syserror_map@std@@YAPEBDH@Z		; std::_Syserror_map
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring

; 398  :             return __builtin_strlen(_First);

	mov	r8, -1

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR [rbx], xmm0

; 2308 :     size_type _Mysize = 0; // current length of string (size)

	mov	QWORD PTR [rbx+16], rdi

; 2309 :     size_type _Myres  = 0; // current storage reserved for string (capacity)

	mov	QWORD PTR [rbx+24], rdi
	npad	1
$LL40@message:

; 398  :             return __builtin_strlen(_First);

	inc	r8
	cmp	BYTE PTR [rax+r8], dil
	jne	SHORT $LL40@message

; 2560 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	mov	rdx, rax
$LN43@message:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\system_error

; 563  :     }

	mov	rcx, rbx
	call	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?message@_Iostream_error_category2@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Iostream_error_category2::message
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_G_Iostream_error_category2@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G_Iostream_error_category2@std@@UEAAPEAXI@Z PROC	; std::_Iostream_error_category2::`scalar deleting destructor', COMDAT
$LN9:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	test	dl, 1
	je	SHORT $LN5@scalar
	mov	edx, 16
	call	??3@YAXPEAX_K@Z				; operator delete
$LN5@scalar:
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_G_Iostream_error_category2@std@@UEAAPEAXI@Z ENDP	; std::_Iostream_error_category2::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1_Iostream_error_category2@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1_Iostream_error_category2@std@@UEAA@XZ PROC		; std::_Iostream_error_category2::~_Iostream_error_category2, COMDAT
	ret	0
??1_Iostream_error_category2@std@@UEAA@XZ ENDP		; std::_Iostream_error_category2::~_Iostream_error_category2
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\system_error
;	COMDAT ?iostream_category@std@@YAAEBVerror_category@1@XZ
_TEXT	SEGMENT
?iostream_category@std@@YAAEBVerror_category@1@XZ PROC	; std::iostream_category, COMDAT

; 697  :     return _Immortalize_memcpy_image<_Iostream_error_category2>();

	lea	rax, OFFSET FLAT:?_Static@?1???$_Immortalize_memcpy_image@V_Iostream_error_category2@std@@@std@@YAAEBV_Iostream_error_category2@1@XZ@4V21@B ; `std::_Immortalize_memcpy_image<std::_Iostream_error_category2>'::`2'::_Static

; 698  : }

	ret	0
?iostream_category@std@@YAAEBVerror_category@1@XZ ENDP	; std::iostream_category
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\vcruntime_typeinfo.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\vcruntime_exception.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\vcruntime_typeinfo.h
;	COMDAT ??0bad_cast@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0bad_cast@std@@QEAA@XZ PROC				; std::bad_cast::bad_cast, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\vcruntime_exception.h

; 68   :         _Data._What = _Message;

	lea	rax, OFFSET FLAT:??_C@_08EPJLHIJG@bad?5cast@
	mov	QWORD PTR [rcx+16], 0
	mov	QWORD PTR [rcx+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\vcruntime_typeinfo.h

; 153  :     {

	lea	rax, OFFSET FLAT:??_7bad_cast@std@@6B@
	mov	QWORD PTR [rcx], rax

; 154  :     }

	mov	rax, rcx
	ret	0
??0bad_cast@std@@QEAA@XZ ENDP				; std::bad_cast::bad_cast
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\vcruntime_exception.h
;	COMDAT ??_Gbad_cast@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_cast@std@@UEAAPEAXI@Z PROC			; std::bad_cast::`scalar deleting destructor', COMDAT
$LN17:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 90   :     {

	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	rdi, rcx
	mov	QWORD PTR [rcx], rax
	mov	ebx, edx

; 91   :         __std_exception_destroy(&_Data);

	add	rcx, 8
	call	__std_exception_destroy
	test	bl, 1
	je	SHORT $LN13@scalar
	mov	edx, 24
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
$LN13@scalar:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_Gbad_cast@std@@UEAAPEAXI@Z ENDP			; std::bad_cast::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\vcruntime_exception.h
;	COMDAT ??1bad_cast@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1bad_cast@std@@UEAA@XZ PROC				; std::bad_cast::~bad_cast, COMDAT

; 90   :     {

	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rcx], rax

; 91   :         __std_exception_destroy(&_Data);

	add	rcx, 8
	jmp	__std_exception_destroy
??1bad_cast@std@@UEAA@XZ ENDP				; std::bad_cast::~bad_cast
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\typeinfo
;	COMDAT ?_Throw_bad_cast@std@@YAXXZ
_TEXT	SEGMENT
$T1 = 32
?_Throw_bad_cast@std@@YAXXZ PROC			; std::_Throw_bad_cast, COMDAT

; 77   : [[noreturn]] inline void _Throw_bad_cast() {

$LN4:
	sub	rsp, 72					; 00000048H

; 78   :     _THROW(bad_cast{});

	lea	rcx, QWORD PTR $T1[rsp]
	call	??0bad_cast@std@@QEAA@XZ		; std::bad_cast::bad_cast
	lea	rdx, OFFSET FLAT:_TI2?AVbad_cast@std@@
	lea	rcx, QWORD PTR $T1[rsp]
	call	_CxxThrowException
	int	3
$LN3@Throw_bad_:
?_Throw_bad_cast@std@@YAXXZ ENDP			; std::_Throw_bad_cast
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\vcruntime_exception.h
;	COMDAT ??0bad_cast@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_cast@std@@QEAA@AEBV01@@Z PROC			; std::bad_cast::bad_cast, COMDAT
$LN9:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rax, rdx

; 73   :     {

	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	xorps	xmm0, xmm0

; 72   :         : _Data()

	lea	rdx, QWORD PTR [rbx+8]

; 73   :     {

	mov	QWORD PTR [rbx], rcx

; 74   :         __std_exception_copy(&_Other._Data, &_Data);

	lea	rcx, QWORD PTR [rax+8]
	movups	XMMWORD PTR [rdx], xmm0
	call	__std_exception_copy
	lea	rax, OFFSET FLAT:??_7bad_cast@std@@6B@
	mov	QWORD PTR [rbx], rax
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0bad_cast@std@@QEAA@AEBV01@@Z ENDP			; std::bad_cast::bad_cast
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xfacet
;	COMDAT ??1_Facet_base@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1_Facet_base@std@@UEAA@XZ PROC			; std::_Facet_base::~_Facet_base, COMDAT

; 25   :     virtual __CLR_OR_THIS_CALL ~_Facet_base() noexcept {} // ensure that derived classes can be destroyed properly

	lea	rax, OFFSET FLAT:??_7_Facet_base@std@@6B@
	mov	QWORD PTR [rcx], rax
	ret	0
??1_Facet_base@std@@UEAA@XZ ENDP			; std::_Facet_base::~_Facet_base
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_G_Facet_base@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G_Facet_base@std@@UEAAPEAXI@Z PROC			; std::_Facet_base::`scalar deleting destructor', COMDAT
$LN9:
	push	rbx
	sub	rsp, 32					; 00000020H
	lea	rax, OFFSET FLAT:??_7_Facet_base@std@@6B@
	mov	rbx, rcx
	mov	QWORD PTR [rcx], rax
	test	dl, 1
	je	SHORT $LN5@scalar
	mov	edx, 8
	call	??3@YAXPEAX_K@Z				; operator delete
$LN5@scalar:
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_G_Facet_base@std@@UEAAPEAXI@Z ENDP			; std::_Facet_base::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocinfo
;	COMDAT ??0_Locinfo@std@@QEAA@PEBD@Z
_TEXT	SEGMENT
this$ = 48
_Pch$ = 56
??0_Locinfo@std@@QEAA@PEBD@Z PROC			; std::_Locinfo::_Locinfo, COMDAT

; 234  :     {

$LN32:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rdx
	mov	rbx, rcx

; 141  : 
; 142  :     __CLR_OR_THIS_CALL _Yarn(const _Yarn& _Right) noexcept : _Myptr(nullptr), _Nul(0) {
; 143  :         *this = _Right;
; 144  :     }
; 145  : 
; 146  :     __CLR_OR_THIS_CALL _Yarn(const _Elem* _Right) noexcept : _Myptr(nullptr), _Nul(0) {
; 147  :         *this = _Right;
; 148  :     }
; 149  : 
; 150  :     _Yarn& __CLR_OR_THIS_CALL operator=(const _Yarn& _Right) noexcept {
; 151  :         return *this = _Right._Myptr;
; 152  :     }
; 153  : 
; 154  :     _Yarn& __CLR_OR_THIS_CALL operator=(const _Elem* _Right) noexcept {
; 155  :         if (_Myptr != _Right) { // new value, discard old and copy new
; 156  :             _Tidy();
; 157  : 
; 158  :             if (_Right) { // new is not empty, copy it
; 159  :                 const _Elem* _Ptr = _Right;
; 160  :                 while (*_Ptr != _Elem{}) {
; 161  :                     ++_Ptr;
; 162  :                 }
; 163  : 
; 164  :                 const auto _Count = (++_Ptr - _Right) * sizeof(_Elem);
; 165  : 
; 166  : #ifdef _DEBUG
; 167  :                 _Myptr = static_cast<_Elem*>(_malloc_dbg(_Count, _CRT_BLOCK, __FILE__, __LINE__));
; 168  : #else
; 169  :                 _Myptr = static_cast<_Elem*>(_CSTD malloc(_Count));
; 170  : #endif
; 171  : 
; 172  :                 if (_Myptr) {
; 173  :                     _CSTD memcpy(_Myptr, _Right, _Count);
; 174  :                 }
; 175  :             }
; 176  :         }
; 177  : 
; 178  :         return *this;
; 179  :     }
; 180  : 
; 181  :     __CLR_OR_THIS_CALL ~_Yarn() noexcept {
; 182  :         _Tidy();
; 183  :     }
; 184  : 
; 185  :     _NODISCARD bool __CLR_OR_THIS_CALL empty() const noexcept {
; 186  :         return _Myptr == nullptr;
; 187  :     }
; 188  : 
; 189  :     _Ret_z_ const _Elem* __CLR_OR_THIS_CALL c_str() const noexcept {
; 190  :         return _Myptr ? _Myptr : &_Nul;
; 191  :     }
; 192  : 
; 193  :     _NODISCARD bool __CLR_OR_THIS_CALL _Empty() const noexcept {
; 194  :         return _Myptr == nullptr;
; 195  :     }
; 196  : 
; 197  :     _Ret_z_ const _Elem* __CLR_OR_THIS_CALL _C_str() const noexcept {
; 198  :         return _Myptr ? _Myptr : &_Nul;
; 199  :     }
; 200  : 
; 201  : private:
; 202  :     void __CLR_OR_THIS_CALL _Tidy() noexcept {
; 203  :         if (_Myptr) {
; 204  : #ifdef _DEBUG
; 205  :             _free_dbg(_Myptr, _CRT_BLOCK);
; 206  : #else
; 207  :             _CSTD free(_Myptr);
; 208  : #endif
; 209  :         }
; 210  : 
; 211  :         _Myptr = nullptr;
; 212  :     }
; 213  : 
; 214  :     _Elem* _Myptr; // pointer to allocated string
; 215  :     _Elem _Nul; // nul terminator for unallocated string
; 216  : };
; 217  : 
; 218  : extern "C++" class _CRTIMP2_PURE_IMPORT _Locinfo { // summary of all stuff specific to a locale used by standard facets
; 219  : public:
; 220  :     using _Collvec  = ::_Collvec;
; 221  :     using _Ctypevec = ::_Ctypevec;
; 222  :     using _Cvtvec   = ::_Cvtvec;
; 223  :     using _Timevec  = _STD _Timevec;
; 224  : 
; 225  :     static void __CLRCALL_PURE_OR_CDECL _Locinfo_ctor(_Locinfo*, const char*);
; 226  :     static void __CLRCALL_PURE_OR_CDECL _Locinfo_ctor(_Locinfo*, int, const char*);
; 227  :     static void __CLRCALL_PURE_OR_CDECL _Locinfo_dtor(_Locinfo*);
; 228  :     static _Locinfo& __CLRCALL_PURE_OR_CDECL _Locinfo_Addcats(_Locinfo*, int, const char*);
; 229  : 
; 230  :     __CLR_OR_THIS_CALL _Locinfo(const char* _Pch = "C")
; 231  : #ifndef _M_CEE_PURE
; 232  :         : _Lock(_LOCK_LOCALE)

	xor	edx, edx
	call	??0_Lockit@std@@QEAA@H@Z		; std::_Lockit::_Lockit
	npad	1

; 140  :     __CLR_OR_THIS_CALL _Yarn() noexcept : _Myptr(nullptr), _Nul(0) {}

	xor	eax, eax
	mov	QWORD PTR [rbx+8], rax
	mov	BYTE PTR [rbx+16], al
	mov	QWORD PTR [rbx+24], rax
	mov	BYTE PTR [rbx+32], al
	mov	QWORD PTR [rbx+40], rax
	mov	WORD PTR [rbx+48], ax
	mov	QWORD PTR [rbx+56], rax
	mov	WORD PTR [rbx+64], ax
	mov	QWORD PTR [rbx+72], rax
	mov	BYTE PTR [rbx+80], al
	mov	QWORD PTR [rbx+88], rax
	mov	BYTE PTR [rbx+96], al

; 235  :         if (_Pch) {

	test	rdi, rdi
	je	SHORT $LN2@Locinfo

; 236  :             _Locinfo_ctor(this, _Pch);

	mov	rdx, rdi
	mov	rcx, rbx
	call	?_Locinfo_ctor@_Locinfo@std@@SAXPEAV12@PEBD@Z ; std::_Locinfo::_Locinfo_ctor
	npad	1

; 241  :     }

	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN2@Locinfo:

; 237  :             return;
; 238  :         }
; 239  : 
; 240  :         _Xruntime_error("bad locale name");

	lea	rcx, OFFSET FLAT:??_C@_0BA@ELKIONDK@bad?5locale?5name@
	call	?_Xruntime_error@std@@YAXPEBD@Z		; std::_Xruntime_error
	int	3
$LN29@Locinfo:
??0_Locinfo@std@@QEAA@PEBD@Z ENDP			; std::_Locinfo::_Locinfo
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Pch$ = 56
?dtor$0@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$0
	mov	rcx, QWORD PTR this$[rdx]
	jmp	??1_Lockit@std@@QEAA@XZ			; std::_Lockit::~_Lockit
?dtor$0@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Pch$ = 56
?dtor$1@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$1
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 8
	jmp	??1?$_Yarn@D@std@@QEAA@XZ		; std::_Yarn<char>::~_Yarn<char>
?dtor$1@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Pch$ = 56
?dtor$2@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$2
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 24
	jmp	??1?$_Yarn@D@std@@QEAA@XZ		; std::_Yarn<char>::~_Yarn<char>
?dtor$2@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Pch$ = 56
?dtor$3@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$3
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 40					; 00000028H
	jmp	??1?$_Yarn@_W@std@@QEAA@XZ		; std::_Yarn<wchar_t>::~_Yarn<wchar_t>
?dtor$3@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Pch$ = 56
?dtor$4@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$4
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 56					; 00000038H
	jmp	??1?$_Yarn@_W@std@@QEAA@XZ		; std::_Yarn<wchar_t>::~_Yarn<wchar_t>
?dtor$4@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Pch$ = 56
?dtor$5@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$5
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 72					; 00000048H
	jmp	??1?$_Yarn@D@std@@QEAA@XZ		; std::_Yarn<char>::~_Yarn<char>
?dtor$5@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Pch$ = 56
?dtor$6@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA PROC	; `std::_Locinfo::_Locinfo'::`1'::dtor$6
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 88					; 00000058H
	jmp	??1?$_Yarn@D@std@@QEAA@XZ		; std::_Yarn<char>::~_Yarn<char>
?dtor$6@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA ENDP	; `std::_Locinfo::_Locinfo'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocinfo
;	COMDAT ??1_Locinfo@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1_Locinfo@std@@QEAA@XZ PROC				; std::_Locinfo::~_Locinfo, COMDAT

; 256  :     __CLR_OR_THIS_CALL ~_Locinfo() noexcept {

$LN48:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 257  :         _Locinfo_dtor(this);

	call	?_Locinfo_dtor@_Locinfo@std@@SAXPEAV12@@Z ; std::_Locinfo::_Locinfo_dtor

; 203  :         if (_Myptr) {

	mov	rcx, QWORD PTR [rbx+88]
	test	rcx, rcx
	je	SHORT $LN8@Locinfo

; 204  : #ifdef _DEBUG
; 205  :             _free_dbg(_Myptr, _CRT_BLOCK);
; 206  : #else
; 207  :             _CSTD free(_Myptr);

	call	free
$LN8@Locinfo:

; 208  : #endif
; 209  :         }
; 210  : 
; 211  :         _Myptr = nullptr;

	xor	edi, edi
	mov	QWORD PTR [rbx+88], rdi

; 203  :         if (_Myptr) {

	mov	rcx, QWORD PTR [rbx+72]
	test	rcx, rcx
	je	SHORT $LN15@Locinfo

; 204  : #ifdef _DEBUG
; 205  :             _free_dbg(_Myptr, _CRT_BLOCK);
; 206  : #else
; 207  :             _CSTD free(_Myptr);

	call	free
$LN15@Locinfo:

; 208  : #endif
; 209  :         }
; 210  : 
; 211  :         _Myptr = nullptr;

	mov	QWORD PTR [rbx+72], rdi

; 203  :         if (_Myptr) {

	mov	rcx, QWORD PTR [rbx+56]
	test	rcx, rcx
	je	SHORT $LN22@Locinfo

; 204  : #ifdef _DEBUG
; 205  :             _free_dbg(_Myptr, _CRT_BLOCK);
; 206  : #else
; 207  :             _CSTD free(_Myptr);

	call	free
$LN22@Locinfo:

; 208  : #endif
; 209  :         }
; 210  : 
; 211  :         _Myptr = nullptr;

	mov	QWORD PTR [rbx+56], rdi

; 203  :         if (_Myptr) {

	mov	rcx, QWORD PTR [rbx+40]
	test	rcx, rcx
	je	SHORT $LN29@Locinfo

; 204  : #ifdef _DEBUG
; 205  :             _free_dbg(_Myptr, _CRT_BLOCK);
; 206  : #else
; 207  :             _CSTD free(_Myptr);

	call	free
$LN29@Locinfo:

; 208  : #endif
; 209  :         }
; 210  : 
; 211  :         _Myptr = nullptr;

	mov	QWORD PTR [rbx+40], rdi

; 203  :         if (_Myptr) {

	mov	rcx, QWORD PTR [rbx+24]
	test	rcx, rcx
	je	SHORT $LN36@Locinfo

; 204  : #ifdef _DEBUG
; 205  :             _free_dbg(_Myptr, _CRT_BLOCK);
; 206  : #else
; 207  :             _CSTD free(_Myptr);

	call	free
$LN36@Locinfo:

; 208  : #endif
; 209  :         }
; 210  : 
; 211  :         _Myptr = nullptr;

	mov	QWORD PTR [rbx+24], rdi

; 203  :         if (_Myptr) {

	mov	rcx, QWORD PTR [rbx+8]
	test	rcx, rcx
	je	SHORT $LN43@Locinfo

; 204  : #ifdef _DEBUG
; 205  :             _free_dbg(_Myptr, _CRT_BLOCK);
; 206  : #else
; 207  :             _CSTD free(_Myptr);

	call	free
$LN43@Locinfo:

; 208  : #endif
; 209  :         }
; 210  : 
; 211  :         _Myptr = nullptr;

	mov	QWORD PTR [rbx+8], rdi

; 258  :     }

	mov	rcx, rbx
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	jmp	??1_Lockit@std@@QEAA@XZ			; std::_Lockit::~_Lockit
??1_Locinfo@std@@QEAA@XZ ENDP				; std::_Locinfo::~_Locinfo
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocinfo
;	COMDAT ?_Getctype@_Locinfo@std@@QEBA?AU_Ctypevec@@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 80
__$ReturnUdt$ = 88
?_Getctype@_Locinfo@std@@QEBA?AU_Ctypevec@@XZ PROC	; std::_Locinfo::_Getctype, COMDAT

; 276  :     _Ctypevec __CLR_OR_THIS_CALL _Getctype() const {

$LN4:
	push	rbx
	sub	rsp, 64					; 00000040H

; 277  :         return ::_Getctype();

	lea	rcx, QWORD PTR $T1[rsp]
	mov	rbx, rdx
	call	_Getctype
	movups	xmm0, XMMWORD PTR [rax]
	movups	xmm1, XMMWORD PTR [rax+16]
	mov	rax, rbx
	movups	XMMWORD PTR [rbx], xmm0
	movups	XMMWORD PTR [rbx+16], xmm1

; 278  :     }

	add	rsp, 64					; 00000040H
	pop	rbx
	ret	0
?_Getctype@_Locinfo@std@@QEBA?AU_Ctypevec@@XZ ENDP	; std::_Locinfo::_Getctype
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale
;	COMDAT ??Bid@locale@std@@QEAA_KXZ
_TEXT	SEGMENT
_Lock$1 = 32
__$ArrayPad$ = 40
this$ = 64
??Bid@locale@std@@QEAA_KXZ PROC				; std::locale::id::operator unsigned __int64, COMDAT

; 82   :         __CLR_OR_THIS_CALL operator size_t() { // get stamp, with lazy allocation

$LN10:
	push	rbx
	sub	rsp, 48					; 00000030H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 83   :             if (_Id == 0) { // still zero, allocate stamp

	cmp	QWORD PTR [rcx], 0
	mov	rbx, rcx
	jne	SHORT $LN5@operator

; 84   :                 _BEGIN_LOCK(_LOCK_LOCALE)

	xor	edx, edx
	lea	rcx, QWORD PTR _Lock$1[rsp]
	call	??0_Lockit@std@@QEAA@H@Z		; std::_Lockit::_Lockit

; 85   :                 if (_Id == 0) {

	cmp	QWORD PTR [rbx], 0
	jne	SHORT $LN3@operator

; 86   :                     _Id = static_cast<size_t>(++_Id_cnt);

	mov	ecx, DWORD PTR ?_Id_cnt@id@locale@std@@0HA ; std::locale::id::_Id_cnt
	inc	ecx
	mov	DWORD PTR ?_Id_cnt@id@locale@std@@0HA, ecx ; std::locale::id::_Id_cnt
	movsxd	rcx, ecx
	mov	QWORD PTR [rbx], rcx
$LN3@operator:

; 87   :                 }
; 88   :                 _END_LOCK()

	lea	rcx, QWORD PTR _Lock$1[rsp]
	call	??1_Lockit@std@@QEAA@XZ			; std::_Lockit::~_Lockit

; 89   :             }
; 90   :             return _Id;

	mov	rax, QWORD PTR [rbx]

; 91   :         }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
$LN5@operator:

; 89   :             }
; 90   :             return _Id;

	mov	rax, QWORD PTR [rcx]

; 91   :         }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
??Bid@locale@std@@QEAA_KXZ ENDP				; std::locale::id::operator unsigned __int64
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale
;	COMDAT ?_Incref@facet@locale@std@@UEAAXXZ
_TEXT	SEGMENT
this$ = 8
?_Incref@facet@locale@std@@UEAAXXZ PROC			; std::locale::facet::_Incref, COMDAT

; 113  :             _MT_INCR(_Myrefs);

	lock inc DWORD PTR [rcx+8]

; 114  :         }

	ret	0
?_Incref@facet@locale@std@@UEAAXXZ ENDP			; std::locale::facet::_Incref
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale
;	COMDAT ?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ
_TEXT	SEGMENT
this$ = 8
?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ PROC ; std::locale::facet::_Decref, COMDAT

; 117  :             if (_MT_DECR(_Myrefs) == 0) {

	lock add DWORD PTR [rcx+8], -1
	mov	eax, 0
	cmove	rax, rcx

; 118  :                 return this;
; 119  :             }
; 120  : 
; 121  :             return nullptr;
; 122  :         }

	ret	0
?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ ENDP ; std::locale::facet::_Decref
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale
;	COMDAT ??0facet@locale@std@@IEAA@_K@Z
_TEXT	SEGMENT
this$ = 8
_Initrefs$ = 16
??0facet@locale@std@@IEAA@_K@Z PROC			; std::locale::facet::facet, COMDAT

; 130  :         {}

	lea	rax, OFFSET FLAT:??_7facet@locale@std@@6B@

; 129  :             : _Myrefs(static_cast<_Atomic_counter_t>(_Initrefs)) // non-atomic initialization

	mov	DWORD PTR [rcx+8], edx
	mov	QWORD PTR [rcx], rax

; 130  :         {}

	mov	rax, rcx
	ret	0
??0facet@locale@std@@IEAA@_K@Z ENDP			; std::locale::facet::facet
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale
;	COMDAT ??1facet@locale@std@@MEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1facet@locale@std@@MEAA@XZ PROC			; std::locale::facet::~facet, COMDAT

; 132  :         __CLR_OR_THIS_CALL ~facet() noexcept override {}

	lea	rax, OFFSET FLAT:??_7_Facet_base@std@@6B@
	mov	QWORD PTR [rcx], rax
	ret	0
??1facet@locale@std@@MEAA@XZ ENDP			; std::locale::facet::~facet
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale
;	COMDAT ??0locale@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??0locale@std@@QEAA@AEBV01@@Z PROC			; std::locale::locale, COMDAT

; 254  :     locale(const locale& _Right) noexcept : _Ptr(_Right._Ptr) {

$LN6:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rcx, QWORD PTR [rdx+8]
	mov	QWORD PTR [rbx+8], rcx

; 255  :         _Ptr->_Incref();

	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+8]

; 256  :     }

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0locale@std@@QEAA@AEBV01@@Z ENDP			; std::locale::locale
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale
;	COMDAT ??1locale@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1locale@std@@QEAA@XZ PROC				; std::locale::~locale, COMDAT

; 339  :     ~locale() noexcept {

$LN9:
	sub	rsp, 40					; 00000028H

; 340  :         if (_Ptr) {

	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN4@locale

; 341  :             delete _Ptr->_Decref();

	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	test	rax, rax
	je	SHORT $LN4@locale
	mov	r8, QWORD PTR [rax]
	mov	edx, 1
	mov	rcx, rax

; 342  :         }
; 343  :     }

	add	rsp, 40					; 00000028H

; 341  :             delete _Ptr->_Decref();

	rex_jmp	QWORD PTR [r8]
$LN4@locale:

; 342  :         }
; 343  :     }

	add	rsp, 40					; 00000028H
	ret	0
??1locale@std@@QEAA@XZ ENDP				; std::locale::~locale
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocinfo
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale
;	COMDAT ?_C_str@locale@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?_C_str@locale@std@@QEBAPEBDXZ PROC			; std::locale::_C_str, COMDAT

; 359  :         return _Ptr ? _Ptr->_Name.c_str() : "";

	mov	rdx, QWORD PTR [rcx+8]
	test	rdx, rdx
	je	SHORT $LN3@C_str
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocinfo

; 190  :         return _Myptr ? _Myptr : &_Nul;

	mov	rax, QWORD PTR [rdx+40]
	test	rax, rax
	jne	SHORT $LN4@C_str
	lea	rax, QWORD PTR [rdx+48]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale

; 360  :     }

	ret	0
$LN3@C_str:

; 359  :         return _Ptr ? _Ptr->_Name.c_str() : "";

	lea	rax, OFFSET FLAT:??_C@_00CNPNBAHC@@
$LN4@C_str:

; 360  :     }

	ret	0
?_C_str@locale@std@@QEBAPEBDXZ ENDP			; std::locale::_C_str
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale
;	COMDAT ?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z
_TEXT	SEGMENT
this$ = 48
_Id$ = 56
?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z PROC	; std::locale::_Getfacet, COMDAT

; 362  :     const facet* _Getfacet(size_t _Id) const { // look up a facet in locale object

$LN13:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx

; 363  :         const facet* _Facptr = _Id < _Ptr->_Facetcount ? _Ptr->_Facetvec[_Id] : nullptr; // null if id off end

	mov	rdx, QWORD PTR [rcx+8]
	lea	rdi, QWORD PTR [rbx*8]
	cmp	rbx, QWORD PTR [rdx+24]
	jae	SHORT $LN6@Getfacet
	mov	rax, QWORD PTR [rdx+16]
	mov	rax, QWORD PTR [rdi+rax]

; 364  :         if (_Facptr || !_Ptr->_Xparent) {

	test	rax, rax
	jne	SHORT $LN3@Getfacet
	jmp	SHORT $LN8@Getfacet
$LN6@Getfacet:

; 363  :         const facet* _Facptr = _Id < _Ptr->_Facetcount ? _Ptr->_Facetvec[_Id] : nullptr; // null if id off end

	xor	eax, eax
$LN8@Getfacet:

; 364  :         if (_Facptr || !_Ptr->_Xparent) {

	cmp	BYTE PTR [rdx+36], 0
	je	SHORT $LN3@Getfacet

; 365  :             return _Facptr; // found facet or not transparent
; 366  :         }
; 367  : 
; 368  :         // look in current locale
; 369  :         locale::_Locimp* _Ptr0 = _Getgloballocale();

	call	?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ ; std::locale::_Getgloballocale

; 370  :         if (_Id < _Ptr0->_Facetcount) {

	cmp	rbx, QWORD PTR [rax+24]
	jae	SHORT $LN4@Getfacet

; 371  :             return _Ptr0->_Facetvec[_Id]; // get from current locale

	mov	rax, QWORD PTR [rax+16]
	mov	rax, QWORD PTR [rdi+rax]

; 375  :     }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN4@Getfacet:

; 372  :         }
; 373  : 
; 374  :         return nullptr; // no entry in current locale

	xor	eax, eax
$LN3@Getfacet:

; 375  :     }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z ENDP	; std::locale::_Getfacet
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_Gfacet@locale@std@@MEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gfacet@locale@std@@MEAAPEAXI@Z PROC			; std::locale::facet::`scalar deleting destructor', COMDAT
$LN9:
	push	rbx
	sub	rsp, 32					; 00000020H
	lea	rax, OFFSET FLAT:??_7_Facet_base@std@@6B@
	mov	rbx, rcx
	mov	QWORD PTR [rcx], rax
	test	dl, 1
	je	SHORT $LN5@scalar
	mov	edx, 16
	call	??3@YAXPEAX_K@Z				; operator delete
$LN5@scalar:
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_Gfacet@locale@std@@MEAAPEAXI@Z ENDP			; std::locale::facet::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0_Facet_base@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0_Facet_base@std@@QEAA@XZ PROC			; std::_Facet_base::_Facet_base, COMDAT
	lea	rax, OFFSET FLAT:??_7_Facet_base@std@@6B@
	mov	QWORD PTR [rcx], rax
	mov	rax, rcx
	ret	0
??0_Facet_base@std@@QEAA@XZ ENDP			; std::_Facet_base::_Facet_base
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale
;	COMDAT ??0ctype_base@std@@QEAA@_K@Z
_TEXT	SEGMENT
this$ = 8
_Refs$ = 16
??0ctype_base@std@@QEAA@_K@Z PROC			; std::ctype_base::ctype_base, COMDAT

; 2374 :         : locale::facet(_Refs) {}

	lea	rax, OFFSET FLAT:??_7ctype_base@std@@6B@

; 129  :             : _Myrefs(static_cast<_Atomic_counter_t>(_Initrefs)) // non-atomic initialization

	mov	DWORD PTR [rcx+8], edx

; 2374 :         : locale::facet(_Refs) {}

	mov	QWORD PTR [rcx], rax
	mov	rax, rcx
	ret	0
??0ctype_base@std@@QEAA@_K@Z ENDP			; std::ctype_base::ctype_base
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale
;	COMDAT ??1ctype_base@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1ctype_base@std@@UEAA@XZ PROC				; std::ctype_base::~ctype_base, COMDAT

; 2376 :     __CLR_OR_THIS_CALL ~ctype_base() noexcept override {}

	lea	rax, OFFSET FLAT:??_7_Facet_base@std@@6B@
	mov	QWORD PTR [rcx], rax
	ret	0
??1ctype_base@std@@UEAA@XZ ENDP				; std::ctype_base::~ctype_base
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_Gctype_base@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gctype_base@std@@UEAAPEAXI@Z PROC			; std::ctype_base::`scalar deleting destructor', COMDAT
$LN9:
	push	rbx
	sub	rsp, 32					; 00000020H
	lea	rax, OFFSET FLAT:??_7_Facet_base@std@@6B@
	mov	rbx, rcx
	mov	QWORD PTR [rcx], rax
	test	dl, 1
	je	SHORT $LN5@scalar
	mov	edx, 16
	call	??3@YAXPEAX_K@Z				; operator delete
$LN5@scalar:
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_Gctype_base@std@@UEAAPEAXI@Z ENDP			; std::ctype_base::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale
;	COMDAT ?widen@?$ctype@D@std@@QEBADD@Z
_TEXT	SEGMENT
this$ = 8
_Byte$ = 16
?widen@?$ctype@D@std@@QEBADD@Z PROC			; std::ctype<char>::widen, COMDAT

; 2681 :         return do_widen(_Byte);

	mov	rax, QWORD PTR [rcx]
	rex_jmp	QWORD PTR [rax+64]
?widen@?$ctype@D@std@@QEBADD@Z ENDP			; std::ctype<char>::widen
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocinfo
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale
;	COMDAT ??0?$ctype@D@std@@QEAA@AEBV_Locinfo@1@_K@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 80
_Lobj$ = 88
_Refs$ = 96
??0?$ctype@D@std@@QEAA@AEBV_Locinfo@1@_K@Z PROC		; std::ctype<char>::ctype<char>, COMDAT

; 2717 :     __CLR_OR_THIS_CALL ctype(const _Locinfo& _Lobj, size_t _Refs = 0) : ctype_base(_Refs) {

$LN22:
	push	rbx
	sub	rsp, 64					; 00000040H
	lea	rax, OFFSET FLAT:??_7?$ctype@D@std@@6B@

; 129  :             : _Myrefs(static_cast<_Atomic_counter_t>(_Initrefs)) // non-atomic initialization

	mov	DWORD PTR [rcx+8], r8d

; 2717 :     __CLR_OR_THIS_CALL ctype(const _Locinfo& _Lobj, size_t _Refs = 0) : ctype_base(_Refs) {

	mov	QWORD PTR [rcx], rax
	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocinfo

; 277  :         return ::_Getctype();

	lea	rcx, QWORD PTR $T1[rsp]
	call	_Getctype
	movups	xmm0, XMMWORD PTR [rax]
	movups	xmm1, XMMWORD PTR [rax+16]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale

; 2719 :     }

	mov	rax, rbx

; 2745 :         _Ctype = _Lobj._Getctype();

	movups	XMMWORD PTR [rbx+16], xmm0
	movups	XMMWORD PTR [rbx+32], xmm1

; 2719 :     }

	add	rsp, 64					; 00000040H
	pop	rbx
	ret	0
??0?$ctype@D@std@@QEAA@AEBV_Locinfo@1@_K@Z ENDP		; std::ctype<char>::ctype<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocinfo
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocinfo
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocinfo
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocinfo
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocinfo
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale
;	COMDAT ?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 136
$T3 = 208
_Ppf$ = 208
_Ploc$ = 216
?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z PROC ; std::ctype<char>::_Getcat, COMDAT

; 2721 :     static size_t __CLRCALL_OR_CDECL _Getcat(const locale::facet** _Ppf = nullptr, const locale* _Ploc = nullptr) {

$LN118:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rsi
	push	rbp
	push	rdi
	push	r14
	lea	rbp, QWORD PTR [rsp-71]
	sub	rsp, 176				; 000000b0H
	mov	rbx, rdx
	mov	rdi, rcx
	xor	r14d, r14d

; 2722 :         if (_Ppf && !*_Ppf) {

	test	rcx, rcx
	je	$LN69@Getcat
	cmp	QWORD PTR [rcx], r14
	jne	$LN69@Getcat

; 2723 :             *_Ppf = new ctype<_Elem>(_Locinfo(_Ploc->_C_str()));

	mov	ecx, 48					; 00000030H
	call	??2@YAPEAX_K@Z				; operator new
	mov	rsi, rax
	mov	QWORD PTR $T3[rbp-105], rax

; 359  :         return _Ptr ? _Ptr->_Name.c_str() : "";

	mov	rcx, QWORD PTR [rbx+8]
	test	rcx, rcx
	je	SHORT $LN12@Getcat
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocinfo

; 190  :         return _Myptr ? _Myptr : &_Nul;

	mov	rbx, QWORD PTR [rcx+40]
	test	rbx, rbx
	jne	SHORT $LN13@Getcat
	lea	rbx, QWORD PTR [rcx+48]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale

; 359  :         return _Ptr ? _Ptr->_Name.c_str() : "";

	jmp	SHORT $LN13@Getcat
$LN12@Getcat:
	lea	rbx, OFFSET FLAT:??_C@_00CNPNBAHC@@
$LN13@Getcat:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocinfo

; 232  :         : _Lock(_LOCK_LOCALE)

	xor	edx, edx
	lea	rcx, QWORD PTR $T1[rbp-105]
	call	??0_Lockit@std@@QEAA@H@Z		; std::_Lockit::_Lockit
	npad	1

; 140  :     __CLR_OR_THIS_CALL _Yarn() noexcept : _Myptr(nullptr), _Nul(0) {}

	mov	QWORD PTR $T1[rbp-97], r14
	mov	BYTE PTR $T1[rbp-89], 0
	mov	QWORD PTR $T1[rbp-81], r14
	mov	BYTE PTR $T1[rbp-73], 0
	mov	QWORD PTR $T1[rbp-65], r14
	mov	WORD PTR $T1[rbp-57], r14w
	mov	QWORD PTR $T1[rbp-49], r14
	mov	WORD PTR $T1[rbp-41], r14w
	mov	QWORD PTR $T1[rbp-33], r14
	mov	BYTE PTR $T1[rbp-25], 0
	mov	QWORD PTR $T1[rbp-17], r14
	mov	BYTE PTR $T1[rbp-9], 0

; 235  :         if (_Pch) {

	test	rbx, rbx
	je	$LN21@Getcat

; 236  :             _Locinfo_ctor(this, _Pch);

	mov	rdx, rbx
	lea	rcx, QWORD PTR $T1[rbp-105]
	call	?_Locinfo_ctor@_Locinfo@std@@SAXPEAV12@PEBD@Z ; std::_Locinfo::_Locinfo_ctor
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale

; 129  :             : _Myrefs(static_cast<_Atomic_counter_t>(_Initrefs)) // non-atomic initialization

	mov	DWORD PTR [rsi+8], r14d

; 2717 :     __CLR_OR_THIS_CALL ctype(const _Locinfo& _Lobj, size_t _Refs = 0) : ctype_base(_Refs) {

	lea	rax, OFFSET FLAT:??_7?$ctype@D@std@@6B@
	mov	QWORD PTR [rsi], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocinfo

; 277  :         return ::_Getctype();

	lea	rcx, QWORD PTR $T2[rbp-105]
	call	_Getctype
	movups	xmm0, XMMWORD PTR [rax]
	movups	xmm1, XMMWORD PTR [rax+16]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale

; 2745 :         _Ctype = _Lobj._Getctype();

	movups	XMMWORD PTR [rsi+16], xmm0
	movups	XMMWORD PTR [rsi+32], xmm1

; 2723 :             *_Ppf = new ctype<_Elem>(_Locinfo(_Ploc->_C_str()));

	mov	QWORD PTR [rdi], rsi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocinfo

; 257  :         _Locinfo_dtor(this);

	lea	rcx, QWORD PTR $T1[rbp-105]
	call	?_Locinfo_dtor@_Locinfo@std@@SAXPEAV12@@Z ; std::_Locinfo::_Locinfo_dtor

; 203  :         if (_Myptr) {

	mov	rcx, QWORD PTR $T1[rbp-17]
	test	rcx, rcx
	je	SHORT $LN77@Getcat

; 204  : #ifdef _DEBUG
; 205  :             _free_dbg(_Myptr, _CRT_BLOCK);
; 206  : #else
; 207  :             _CSTD free(_Myptr);

	call	free
$LN77@Getcat:

; 208  : #endif
; 209  :         }
; 210  : 
; 211  :         _Myptr = nullptr;

	mov	QWORD PTR $T1[rbp-17], r14

; 203  :         if (_Myptr) {

	mov	rcx, QWORD PTR $T1[rbp-33]
	test	rcx, rcx
	je	SHORT $LN84@Getcat

; 204  : #ifdef _DEBUG
; 205  :             _free_dbg(_Myptr, _CRT_BLOCK);
; 206  : #else
; 207  :             _CSTD free(_Myptr);

	call	free
$LN84@Getcat:

; 208  : #endif
; 209  :         }
; 210  : 
; 211  :         _Myptr = nullptr;

	mov	QWORD PTR $T1[rbp-33], r14

; 203  :         if (_Myptr) {

	mov	rcx, QWORD PTR $T1[rbp-49]
	test	rcx, rcx
	je	SHORT $LN91@Getcat

; 204  : #ifdef _DEBUG
; 205  :             _free_dbg(_Myptr, _CRT_BLOCK);
; 206  : #else
; 207  :             _CSTD free(_Myptr);

	call	free
$LN91@Getcat:

; 208  : #endif
; 209  :         }
; 210  : 
; 211  :         _Myptr = nullptr;

	mov	QWORD PTR $T1[rbp-49], r14

; 203  :         if (_Myptr) {

	mov	rcx, QWORD PTR $T1[rbp-65]
	test	rcx, rcx
	je	SHORT $LN98@Getcat

; 204  : #ifdef _DEBUG
; 205  :             _free_dbg(_Myptr, _CRT_BLOCK);
; 206  : #else
; 207  :             _CSTD free(_Myptr);

	call	free
$LN98@Getcat:

; 208  : #endif
; 209  :         }
; 210  : 
; 211  :         _Myptr = nullptr;

	mov	QWORD PTR $T1[rbp-65], r14

; 203  :         if (_Myptr) {

	mov	rcx, QWORD PTR $T1[rbp-81]
	test	rcx, rcx
	je	SHORT $LN105@Getcat

; 204  : #ifdef _DEBUG
; 205  :             _free_dbg(_Myptr, _CRT_BLOCK);
; 206  : #else
; 207  :             _CSTD free(_Myptr);

	call	free
$LN105@Getcat:

; 208  : #endif
; 209  :         }
; 210  : 
; 211  :         _Myptr = nullptr;

	mov	QWORD PTR $T1[rbp-81], r14

; 203  :         if (_Myptr) {

	mov	rcx, QWORD PTR $T1[rbp-97]
	test	rcx, rcx
	je	SHORT $LN112@Getcat

; 204  : #ifdef _DEBUG
; 205  :             _free_dbg(_Myptr, _CRT_BLOCK);
; 206  : #else
; 207  :             _CSTD free(_Myptr);

	call	free
$LN112@Getcat:

; 208  : #endif
; 209  :         }
; 210  : 
; 211  :         _Myptr = nullptr;

	mov	QWORD PTR $T1[rbp-97], r14

; 258  :     }

	lea	rcx, QWORD PTR $T1[rbp-105]
	call	??1_Lockit@std@@QEAA@XZ			; std::_Lockit::~_Lockit
	npad	1
$LN69@Getcat:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale

; 2726 :         return _X_CTYPE;

	mov	eax, 2

; 2727 :     }

	lea	r11, QWORD PTR [rsp+176]
	mov	rbx, QWORD PTR [r11+40]
	mov	rsi, QWORD PTR [r11+48]
	mov	rsp, r11
	pop	r14
	pop	rdi
	pop	rbp
	ret	0
$LN21@Getcat:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocinfo

; 240  :         _Xruntime_error("bad locale name");

	lea	rcx, OFFSET FLAT:??_C@_0BA@ELKIONDK@bad?5locale?5name@
	call	?_Xruntime_error@std@@YAXPEBD@Z		; std::_Xruntime_error
	int	3
$LN115@Getcat:
?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z ENDP ; std::ctype<char>::_Getcat
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 136
$T3 = 208
_Ppf$ = 208
_Ploc$ = 216
?dtor$0@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::ctype<char>::_Getcat'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	edx, 48					; 00000030H
	mov	rcx, QWORD PTR $T3[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::ctype<char>::_Getcat'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 136
$T3 = 208
_Ppf$ = 208
_Ploc$ = 216
?dtor$2@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::ctype<char>::_Getcat'::`1'::dtor$2
	lea	rcx, QWORD PTR $T1[rdx]
	jmp	??1_Lockit@std@@QEAA@XZ			; std::_Lockit::~_Lockit
?dtor$2@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::ctype<char>::_Getcat'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 136
$T3 = 208
_Ppf$ = 208
_Ploc$ = 216
?dtor$3@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::ctype<char>::_Getcat'::`1'::dtor$3
	lea	rcx, QWORD PTR $T1[rdx]
	add	rcx, 8
	jmp	??1?$_Yarn@D@std@@QEAA@XZ		; std::_Yarn<char>::~_Yarn<char>
?dtor$3@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::ctype<char>::_Getcat'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 136
$T3 = 208
_Ppf$ = 208
_Ploc$ = 216
?dtor$4@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::ctype<char>::_Getcat'::`1'::dtor$4
	lea	rcx, QWORD PTR $T1[rdx]
	add	rcx, 24
	jmp	??1?$_Yarn@D@std@@QEAA@XZ		; std::_Yarn<char>::~_Yarn<char>
?dtor$4@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::ctype<char>::_Getcat'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 136
$T3 = 208
_Ppf$ = 208
_Ploc$ = 216
?dtor$5@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::ctype<char>::_Getcat'::`1'::dtor$5
	lea	rcx, QWORD PTR $T1[rdx]
	add	rcx, 40					; 00000028H
	jmp	??1?$_Yarn@_W@std@@QEAA@XZ		; std::_Yarn<wchar_t>::~_Yarn<wchar_t>
?dtor$5@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::ctype<char>::_Getcat'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 136
$T3 = 208
_Ppf$ = 208
_Ploc$ = 216
?dtor$6@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::ctype<char>::_Getcat'::`1'::dtor$6
	lea	rcx, QWORD PTR $T1[rdx]
	add	rcx, 56					; 00000038H
	jmp	??1?$_Yarn@_W@std@@QEAA@XZ		; std::_Yarn<wchar_t>::~_Yarn<wchar_t>
?dtor$6@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::ctype<char>::_Getcat'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 136
$T3 = 208
_Ppf$ = 208
_Ploc$ = 216
?dtor$7@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::ctype<char>::_Getcat'::`1'::dtor$7
	lea	rcx, QWORD PTR $T1[rdx]
	add	rcx, 72					; 00000048H
	jmp	??1?$_Yarn@D@std@@QEAA@XZ		; std::_Yarn<char>::~_Yarn<char>
?dtor$7@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::ctype<char>::_Getcat'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 136
$T3 = 208
_Ppf$ = 208
_Ploc$ = 216
?dtor$8@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA PROC ; `std::ctype<char>::_Getcat'::`1'::dtor$8
	lea	rcx, QWORD PTR $T1[rdx]
	add	rcx, 88					; 00000058H
	jmp	??1?$_Yarn@D@std@@QEAA@XZ		; std::_Yarn<char>::~_Yarn<char>
?dtor$8@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA ENDP ; `std::ctype<char>::_Getcat'::`1'::dtor$8
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale
;	COMDAT ??1?$ctype@D@std@@MEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$ctype@D@std@@MEAA@XZ PROC				; std::ctype<char>::~ctype<char>, COMDAT

; 2740 :     __CLR_OR_THIS_CALL ~ctype() noexcept override {

$LN15:
	push	rbx
	sub	rsp, 32					; 00000020H
	lea	rax, OFFSET FLAT:??_7?$ctype@D@std@@6B@
	mov	rbx, rcx
	mov	QWORD PTR [rcx], rax

; 2749 :         if (0 < _Ctype._Delfl) {

	mov	eax, DWORD PTR [rcx+32]
	test	eax, eax
	jle	SHORT $LN12@ctype

; 2750 :             _CSTD free(const_cast<short*>(_Ctype._Table));

	mov	rcx, QWORD PTR [rcx+24]
	call	free
	jmp	SHORT $LN7@ctype
$LN12@ctype:

; 2751 :         } else if (_Ctype._Delfl < 0) {

	jns	SHORT $LN7@ctype

; 2752 :             delete[] _Ctype._Table;

	mov	rcx, QWORD PTR [rcx+24]
	call	??_V@YAXPEAX@Z				; operator delete[]
$LN7@ctype:

; 2753 :         }
; 2754 : 
; 2755 :         _CSTD free(_Ctype._LocaleName);

	mov	rcx, QWORD PTR [rbx+40]
	call	free

; 2741 :         _Tidy();
; 2742 :     }

	lea	rax, OFFSET FLAT:??_7_Facet_base@std@@6B@
	mov	QWORD PTR [rbx], rax
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??1?$ctype@D@std@@MEAA@XZ ENDP				; std::ctype<char>::~ctype<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocinfo
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale
;	COMDAT ?_Init@?$ctype@D@std@@IEAAXAEBV_Locinfo@2@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 80
_Lobj$ = 88
?_Init@?$ctype@D@std@@IEAAXAEBV_Locinfo@2@@Z PROC	; std::ctype<char>::_Init, COMDAT

; 2744 :     void __CLR_OR_THIS_CALL _Init(const _Locinfo& _Lobj) { // initialize from _Lobj

$LN6:
	push	rbx
	sub	rsp, 64					; 00000040H
	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocinfo

; 277  :         return ::_Getctype();

	lea	rcx, QWORD PTR $T1[rsp]
	call	_Getctype
	movups	xmm0, XMMWORD PTR [rax]
	movups	xmm1, XMMWORD PTR [rax+16]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale

; 2745 :         _Ctype = _Lobj._Getctype();

	movups	XMMWORD PTR [rbx+16], xmm0
	movups	XMMWORD PTR [rbx+32], xmm1

; 2746 :     }

	add	rsp, 64					; 00000040H
	pop	rbx
	ret	0
?_Init@?$ctype@D@std@@IEAAXAEBV_Locinfo@2@@Z ENDP	; std::ctype<char>::_Init
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale
;	COMDAT ?_Tidy@?$ctype@D@std@@IEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$ctype@D@std@@IEAAXXZ PROC			; std::ctype<char>::_Tidy, COMDAT

; 2748 :     void __CLR_OR_THIS_CALL _Tidy() noexcept { // free any allocated storage

$LN12:
	push	rbx
	sub	rsp, 32					; 00000020H

; 2749 :         if (0 < _Ctype._Delfl) {

	mov	eax, DWORD PTR [rcx+32]
	mov	rbx, rcx
	test	eax, eax
	jle	SHORT $LN9@Tidy

; 2750 :             _CSTD free(const_cast<short*>(_Ctype._Table));

	mov	rcx, QWORD PTR [rcx+24]
	call	free

; 2753 :         }
; 2754 : 
; 2755 :         _CSTD free(_Ctype._LocaleName);

	mov	rcx, QWORD PTR [rbx+40]

; 2756 :     }

	add	rsp, 32					; 00000020H
	pop	rbx

; 2753 :         }
; 2754 : 
; 2755 :         _CSTD free(_Ctype._LocaleName);

	jmp	free
$LN9@Tidy:

; 2751 :         } else if (_Ctype._Delfl < 0) {

	jns	SHORT $LN4@Tidy

; 2752 :             delete[] _Ctype._Table;

	mov	rcx, QWORD PTR [rcx+24]
	call	??_V@YAXPEAX@Z				; operator delete[]
$LN4@Tidy:

; 2753 :         }
; 2754 : 
; 2755 :         _CSTD free(_Ctype._LocaleName);

	mov	rcx, QWORD PTR [rbx+40]

; 2756 :     }

	add	rsp, 32					; 00000020H
	pop	rbx

; 2753 :         }
; 2754 : 
; 2755 :         _CSTD free(_Ctype._LocaleName);

	jmp	free
?_Tidy@?$ctype@D@std@@IEAAXXZ ENDP			; std::ctype<char>::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale
;	COMDAT ?do_tolower@?$ctype@D@std@@MEBADD@Z
_TEXT	SEGMENT
this$ = 8
_Ch$ = 16
?do_tolower@?$ctype@D@std@@MEBADD@Z PROC		; std::ctype<char>::do_tolower, COMDAT

; 2758 :     virtual _Elem __CLR_OR_THIS_CALL do_tolower(_Elem _Ch) const { // convert element to lower case

	movzx	eax, dl

; 2759 :         return static_cast<_Elem>(_Tolower(static_cast<unsigned char>(_Ch), &_Ctype));

	lea	rdx, QWORD PTR [rcx+16]
	mov	ecx, eax
	jmp	_Tolower
?do_tolower@?$ctype@D@std@@MEBADD@Z ENDP		; std::ctype<char>::do_tolower
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale
;	COMDAT ?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z PROC	; std::ctype<char>::do_tolower, COMDAT

; 2763 :         const _Elem* _Last) const { // convert [_First, _Last) in place to lower case

$LN14:
	mov	QWORD PTR [rsp+32], rbx
	push	rsi
	sub	rsp, 32					; 00000020H
	mov	rsi, r8
	mov	rbx, rdx

; 2764 :         _Adl_verify_range(_First, _Last);
; 2765 :         for (; _First != _Last; ++_First) {

	cmp	rdx, r8
	je	SHORT $LN10@do_tolower
	mov	QWORD PTR [rsp+64], rdi
	lea	rdi, QWORD PTR [rcx+16]
	npad	2
$LL4@do_tolower:

; 2766 :             *_First = static_cast<_Elem>(_Tolower(static_cast<unsigned char>(*_First), &_Ctype));

	movzx	ecx, BYTE PTR [rbx]
	mov	rdx, rdi
	call	_Tolower
	mov	BYTE PTR [rbx], al
	inc	rbx
	cmp	rbx, rsi
	jne	SHORT $LL4@do_tolower

; 2764 :         _Adl_verify_range(_First, _Last);
; 2765 :         for (; _First != _Last; ++_First) {

	mov	rdi, QWORD PTR [rsp+64]
$LN10@do_tolower:

; 2767 :         }
; 2768 : 
; 2769 :         return _First;
; 2770 :     }

	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rsi
	ret	0
?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z ENDP	; std::ctype<char>::do_tolower
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale
;	COMDAT ?do_toupper@?$ctype@D@std@@MEBADD@Z
_TEXT	SEGMENT
this$ = 8
_Ch$ = 16
?do_toupper@?$ctype@D@std@@MEBADD@Z PROC		; std::ctype<char>::do_toupper, COMDAT

; 2772 :     virtual _Elem __CLR_OR_THIS_CALL do_toupper(_Elem _Ch) const { // convert element to upper case

	movzx	eax, dl

; 2773 :         return static_cast<_Elem>(_Toupper(static_cast<unsigned char>(_Ch), &_Ctype));

	lea	rdx, QWORD PTR [rcx+16]
	mov	ecx, eax
	jmp	_Toupper
?do_toupper@?$ctype@D@std@@MEBADD@Z ENDP		; std::ctype<char>::do_toupper
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale
;	COMDAT ?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z PROC	; std::ctype<char>::do_toupper, COMDAT

; 2777 :         const _Elem* _Last) const { // convert [_First, _Last) in place to upper case

$LN14:
	mov	QWORD PTR [rsp+32], rbx
	push	rsi
	sub	rsp, 32					; 00000020H
	mov	rsi, r8
	mov	rbx, rdx

; 2778 :         _Adl_verify_range(_First, _Last);
; 2779 :         for (; _First != _Last; ++_First) {

	cmp	rdx, r8
	je	SHORT $LN10@do_toupper
	mov	QWORD PTR [rsp+64], rdi
	lea	rdi, QWORD PTR [rcx+16]
	npad	2
$LL4@do_toupper:

; 2780 :             *_First = static_cast<_Elem>(_Toupper(static_cast<unsigned char>(*_First), &_Ctype));

	movzx	ecx, BYTE PTR [rbx]
	mov	rdx, rdi
	call	_Toupper
	mov	BYTE PTR [rbx], al
	inc	rbx
	cmp	rbx, rsi
	jne	SHORT $LL4@do_toupper

; 2778 :         _Adl_verify_range(_First, _Last);
; 2779 :         for (; _First != _Last; ++_First) {

	mov	rdi, QWORD PTR [rsp+64]
$LN10@do_toupper:

; 2781 :         }
; 2782 : 
; 2783 :         return _First;
; 2784 :     }

	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rsi
	ret	0
?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z ENDP	; std::ctype<char>::do_toupper
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale
;	COMDAT ?do_widen@?$ctype@D@std@@MEBADD@Z
_TEXT	SEGMENT
this$ = 8
_Byte$ = 16
?do_widen@?$ctype@D@std@@MEBADD@Z PROC			; std::ctype<char>::do_widen, COMDAT

; 2787 :         return _Byte;

	movzx	eax, dl

; 2788 :     }

	ret	0
?do_widen@?$ctype@D@std@@MEBADD@Z ENDP			; std::ctype<char>::do_widen
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale
;	COMDAT ?do_widen@?$ctype@D@std@@MEBAPEBDPEBD0PEAD@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
_Dest$ = 72
?do_widen@?$ctype@D@std@@MEBAPEBDPEBD0PEAD@Z PROC	; std::ctype<char>::do_widen, COMDAT

; 2791 :         const char* _First, const char* _Last, _Elem* _Dest) const { // widen chars in [_First, _Last)

$LN4:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, r8

; 2792 :         _Adl_verify_range(_First, _Last);
; 2793 :         _CSTD memcpy(_Dest, _First, static_cast<size_t>(_Last - _First));

	mov	rcx, r9
	sub	r8, rdx
	call	memcpy

; 2794 :         return _Last;

	mov	rax, rbx

; 2795 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?do_widen@?$ctype@D@std@@MEBAPEBDPEBD0PEAD@Z ENDP	; std::ctype<char>::do_widen
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale
;	COMDAT ?do_narrow@?$ctype@D@std@@MEBADDD@Z
_TEXT	SEGMENT
this$ = 8
_Ch$ = 16
__formal$ = 24
?do_narrow@?$ctype@D@std@@MEBADDD@Z PROC		; std::ctype<char>::do_narrow, COMDAT

; 2798 :         return _Ch;

	movzx	eax, dl

; 2799 :     }

	ret	0
?do_narrow@?$ctype@D@std@@MEBADDD@Z ENDP		; std::ctype<char>::do_narrow
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale
;	COMDAT ?do_narrow@?$ctype@D@std@@MEBAPEBDPEBD0DPEAD@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
__formal$ = 72
_Dest$ = 80
?do_narrow@?$ctype@D@std@@MEBAPEBDPEBD0DPEAD@Z PROC	; std::ctype<char>::do_narrow, COMDAT

; 2802 :         char* _Dest) const { // narrow elements in [_First, _Last) to chars

$LN4:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rcx, QWORD PTR _Dest$[rsp]
	mov	rbx, r8

; 2803 :         _Adl_verify_range(_First, _Last);
; 2804 :         _CSTD memcpy(_Dest, _First, static_cast<size_t>(_Last - _First));

	sub	r8, rdx
	call	memcpy

; 2805 :         return _Last;

	mov	rax, rbx

; 2806 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?do_narrow@?$ctype@D@std@@MEBAPEBDPEBD0DPEAD@Z ENDP	; std::ctype<char>::do_narrow
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale
;	COMDAT ??_G?$ctype@D@std@@MEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$ctype@D@std@@MEAAPEAXI@Z PROC			; std::ctype<char>::`scalar deleting destructor', COMDAT
$LN23:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 2740 :     __CLR_OR_THIS_CALL ~ctype() noexcept override {

	lea	rax, OFFSET FLAT:??_7?$ctype@D@std@@6B@
	mov	edi, edx
	mov	QWORD PTR [rcx], rax
	mov	rbx, rcx

; 2749 :         if (0 < _Ctype._Delfl) {

	mov	eax, DWORD PTR [rcx+32]
	test	eax, eax
	jle	SHORT $LN20@scalar

; 2750 :             _CSTD free(const_cast<short*>(_Ctype._Table));

	mov	rcx, QWORD PTR [rcx+24]
	call	free
	jmp	SHORT $LN13@scalar
$LN20@scalar:

; 2751 :         } else if (_Ctype._Delfl < 0) {

	jns	SHORT $LN13@scalar

; 2752 :             delete[] _Ctype._Table;

	mov	rcx, QWORD PTR [rcx+24]
	call	??_V@YAXPEAX@Z				; operator delete[]
$LN13@scalar:

; 2753 :         }
; 2754 : 
; 2755 :         _CSTD free(_Ctype._LocaleName);

	mov	rcx, QWORD PTR [rbx+40]
	call	free

; 2742 :     }

	lea	rax, OFFSET FLAT:??_7_Facet_base@std@@6B@
	mov	QWORD PTR [rbx], rax
	test	dil, 1
	je	SHORT $LN16@scalar
	mov	edx, 48					; 00000030H
	mov	rcx, rbx
	call	??3@YAXPEAX_K@Z				; operator delete
$LN16@scalar:
	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_G?$ctype@D@std@@MEAAPEAXI@Z ENDP			; std::ctype<char>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\vcruntime_exception.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\stdexcept
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase
;	COMDAT ??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 64
$T3 = 96
_InitData$4 = 128
$T5 = 128
this$GSCopy$ = 128
__$ArrayPad$ = 144
this$ = 192
_Message$ = 200
_Errcode$ = 208
??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z PROC ; std::ios_base::failure::failure, COMDAT

; 116  :         explicit failure(const char* _Message, const error_code& _Errcode = _STD make_error_code(io_errc::stream))

$LN129:
	push	rbx
	sub	rsp, 176				; 000000b0H
	movaps	XMMWORD PTR [rsp+160], xmm6
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbx, rcx
	mov	QWORD PTR this$GSCopy$[rsp], rcx

; 117  :             : system_error(_Errcode, _Message) {} // construct with message

	movups	xmm6, XMMWORD PTR [r8]
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T1[rsp], xmm0
	xorps	xmm1, xmm1

; 2308 :     size_type _Mysize = 0; // current length of string (size)

	movdqu	XMMWORD PTR $T1[rsp+16], xmm1

; 398  :             return __builtin_strlen(_First);

	mov	r8, -1
	npad	6
$LL123@failure:
	inc	r8
	cmp	BYTE PTR [rdx+r8], 0
	jne	SHORT $LL123@failure

; 2560 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	lea	rcx, QWORD PTR $T1[rsp]
	call	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\system_error

; 476  :         : runtime_error(_Makestr(_Errcode, _Message)), _Mycode(_Errcode) {}

	lea	rdx, QWORD PTR $T1[rsp]
	lea	rcx, QWORD PTR $T3[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	movdqa	XMMWORD PTR $T5[rsp], xmm6
	mov	r8, rax
	lea	rdx, QWORD PTR $T5[rsp]
	lea	rcx, QWORD PTR $T2[rsp]
	call	?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z ; std::_System_error::_Makestr
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring

; 2244 :         return _Myres > _Small_string_capacity;

	cmp	QWORD PTR [rax+24], 15

; 2236 :         if (_Large_mode_engaged()) {

	jbe	SHORT $LN37@failure

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rax, QWORD PTR [rax]
$LN37@failure:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\vcruntime_exception.h

; 60   :     {

	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rbx], rcx

; 59   :         : _Data()

	lea	rdx, QWORD PTR [rbx+8]
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [rdx], xmm0

; 61   :         __std_exception_data _InitData = { _Message, true };

	mov	QWORD PTR _InitData$4[rsp], rax
	mov	BYTE PTR _InitData$4[rsp+8], 1

; 62   :         __std_exception_copy(&_InitData, &_Data);

	lea	rcx, QWORD PTR _InitData$4[rsp]
	call	__std_exception_copy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\stdexcept

; 104  :     explicit runtime_error(const string& _Message) : _Mybase(_Message.c_str()) {}

	lea	rax, OFFSET FLAT:??_7runtime_error@std@@6B@
	mov	QWORD PTR [rbx], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring

; 2244 :         return _Myres > _Small_string_capacity;

	mov	rdx, QWORD PTR $T2[rsp+24]
	cmp	rdx, 15

; 4868 :         if (_My_data._Large_mode_engaged()) {

	jbe	SHORT $LN63@failure

; 2643 :         _Al.deallocate(_Old_ptr, _Capacity + 1); // +1 for null terminator

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory

; 950  :         _STD _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T2[rsp]
	mov	rax, rcx

; 253  :         if (_Bytes >= _Big_allocation_threshold) {

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN77@failure

; 171  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 172  : 
; 173  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 174  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 188  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	$LN126@failure
$LN77@failure:

; 258  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN63@failure:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\system_error

; 476  :         : runtime_error(_Makestr(_Errcode, _Message)), _Mycode(_Errcode) {}

	lea	rax, OFFSET FLAT:??_7_System_error@std@@6B@
	mov	QWORD PTR [rbx], rax
	movups	XMMWORD PTR [rbx+24], xmm6
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring

; 2244 :         return _Myres > _Small_string_capacity;

	mov	rdx, QWORD PTR $T1[rsp+24]
	cmp	rdx, 15

; 4868 :         if (_My_data._Large_mode_engaged()) {

	jbe	SHORT $LN102@failure

; 2643 :         _Al.deallocate(_Old_ptr, _Capacity + 1); // +1 for null terminator

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory

; 950  :         _STD _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T1[rsp]
	mov	rax, rcx

; 253  :         if (_Bytes >= _Big_allocation_threshold) {

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN116@failure

; 171  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 172  : 
; 173  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 174  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 188  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	SHORT $LN127@failure
$LN116@failure:

; 258  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN102@failure:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase

; 117  :             : system_error(_Errcode, _Message) {} // construct with message

	lea	rax, OFFSET FLAT:??_7failure@ios_base@std@@6B@
	mov	QWORD PTR [rbx], rax
	mov	rax, rbx
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	movaps	xmm6, XMMWORD PTR [rsp+160]
	add	rsp, 176				; 000000b0H
	pop	rbx
	ret	0
$LN127@failure:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory

; 188  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	_invalid_parameter_noinfo_noreturn
	npad	1
$LN126@failure:
	call	_invalid_parameter_noinfo_noreturn
	npad	1
$LN124@failure:
??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z ENDP ; std::ios_base::failure::failure
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 64
$T3 = 96
_InitData$4 = 128
$T5 = 128
this$GSCopy$ = 128
__$ArrayPad$ = 144
this$ = 192
_Message$ = 200
_Errcode$ = 208
?dtor$1@?0???0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z@4HA PROC ; `std::ios_base::failure::failure'::`1'::dtor$1
	lea	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0???0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z@4HA ENDP ; `std::ios_base::failure::failure'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase
;	COMDAT ?clear@ios_base@std@@QEAAXH_N@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 48
this$ = 112
_State$ = 120
_Reraise$ = 128
?clear@ios_base@std@@QEAAXH_N@Z PROC			; std::ios_base::clear, COMDAT

; 154  :     void __CLR_OR_THIS_CALL clear(iostate _State, bool _Reraise) { // set state, possibly reraise exception

$LN15:
	sub	rsp, 104				; 00000068H

; 155  :         _State &= _Statmask;

	and	edx, 23

; 156  :         _Mystate             = _State;

	mov	DWORD PTR [rcx+16], edx

; 157  :         const auto _Filtered = _State & _Except;

	and	edx, DWORD PTR [rcx+20]

; 158  :         if (_Filtered) {

	je	SHORT $LN2@clear

; 159  :             if (_Reraise) {

	test	r8b, r8b
	je	SHORT $LN3@clear
	jmp	SHORT $LN14@clear
$LN2@clear:

; 173  :         }
; 174  :     }

	add	rsp, 104				; 00000068H
	ret	0
$LN14@clear:

; 160  :                 _RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	int	3
$LN3@clear:
	mov	QWORD PTR [rsp+96], rbx

; 161  :             }
; 162  : 
; 163  :             const char* _Msg;
; 164  :             if (_Filtered & ios_base::badbit) {

	test	dl, 4
	je	SHORT $LN4@clear

; 165  :                 _Msg = "ios_base::badbit set";

	lea	rbx, OFFSET FLAT:??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@
	jmp	SHORT $LN6@clear
$LN4@clear:

; 166  :             } else if (_Filtered & ios_base::failbit) {

	test	dl, 2
	lea	rbx, OFFSET FLAT:??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@
	lea	rax, OFFSET FLAT:??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@
	cmove	rbx, rax
$LN6@clear:

; 167  :                 _Msg = "ios_base::failbit set";
; 168  :             } else {
; 169  :                 _Msg = "ios_base::eofbit set";
; 170  :             }
; 171  : 
; 172  :             _THROW(failure(_Msg));

	mov	edx, 1
	lea	rcx, QWORD PTR $T1[rsp]
	call	?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z ; std::make_error_code
	mov	r8, rax
	lea	rcx, QWORD PTR $T2[rsp]
	mov	rdx, rbx
	call	??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z ; std::ios_base::failure::failure
	lea	rdx, OFFSET FLAT:_TI5?AVfailure@ios_base@std@@
	lea	rcx, QWORD PTR $T2[rsp]
	call	_CxxThrowException
	mov	rbx, QWORD PTR [rsp+96]
$LN12@clear:
?clear@ios_base@std@@QEAAXH_N@Z ENDP			; std::ios_base::clear
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase
;	COMDAT ?rdstate@ios_base@std@@QEBAHXZ
_TEXT	SEGMENT
this$ = 8
?rdstate@ios_base@std@@QEBAHXZ PROC			; std::ios_base::rdstate, COMDAT

; 187  :         return _Mystate;

	mov	eax, DWORD PTR [rcx+16]

; 188  :     }

	ret	0
?rdstate@ios_base@std@@QEBAHXZ ENDP			; std::ios_base::rdstate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase
;	COMDAT ?good@ios_base@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?good@ios_base@std@@QEBA_NXZ PROC			; std::ios_base::good, COMDAT

; 206  :         return rdstate() == ios_base::goodbit;

	cmp	DWORD PTR [rcx+16], 0
	sete	al

; 207  :     }

	ret	0
?good@ios_base@std@@QEBA_NXZ ENDP			; std::ios_base::good
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase
;	COMDAT ?flags@ios_base@std@@QEBAHXZ
_TEXT	SEGMENT
this$ = 8
?flags@ios_base@std@@QEBAHXZ PROC			; std::ios_base::flags, COMDAT

; 237  :         return _Fmtfl;

	mov	eax, DWORD PTR [rcx+24]

; 238  :     }

	ret	0
?flags@ios_base@std@@QEBAHXZ ENDP			; std::ios_base::flags
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase
;	COMDAT ?width@ios_base@std@@QEBA_JXZ
_TEXT	SEGMENT
this$ = 8
?width@ios_base@std@@QEBA_JXZ PROC			; std::ios_base::width, COMDAT

; 278  :         return _Wide;

	mov	rax, QWORD PTR [rcx+40]

; 279  :     }

	ret	0
?width@ios_base@std@@QEBA_JXZ ENDP			; std::ios_base::width
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase
;	COMDAT ?width@ios_base@std@@QEAA_J_J@Z
_TEXT	SEGMENT
this$ = 8
_Newwidth$ = 16
?width@ios_base@std@@QEAA_J_J@Z PROC			; std::ios_base::width, COMDAT

; 282  :         // set width to argument
; 283  :         const streamsize _Oldwidth = _Wide;

	mov	rax, QWORD PTR [rcx+40]

; 284  :         _Wide                      = _Newwidth;

	mov	QWORD PTR [rcx+40], rdx

; 285  :         return _Oldwidth;
; 286  :     }

	ret	0
?width@ios_base@std@@QEAA_J_J@Z ENDP			; std::ios_base::width
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase
;	COMDAT ?getloc@ios_base@std@@QEBA?AVlocale@2@XZ
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
?getloc@ios_base@std@@QEBA?AVlocale@2@XZ PROC		; std::ios_base::getloc, COMDAT

; 288  :     _NODISCARD locale __CLR_OR_THIS_CALL getloc() const noexcept /* strengthened */ { // get locale

$LN9:
	push	rbx
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale

; 254  :     locale(const locale& _Right) noexcept : _Ptr(_Right._Ptr) {

	mov	rax, QWORD PTR [rcx+64]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase

; 288  :     _NODISCARD locale __CLR_OR_THIS_CALL getloc() const noexcept /* strengthened */ { // get locale

	mov	rbx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale

; 254  :     locale(const locale& _Right) noexcept : _Ptr(_Right._Ptr) {

	mov	rcx, QWORD PTR [rax+8]
	mov	QWORD PTR [rdx+8], rcx

; 255  :         _Ptr->_Incref();

	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase

; 289  :         return *_Ploc;

	mov	rax, rbx

; 290  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?getloc@ios_base@std@@QEBA?AVlocale@2@XZ ENDP		; std::ios_base::getloc
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\vcruntime_exception.h
;	COMDAT ??_Gfailure@ios_base@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gfailure@ios_base@std@@UEAAPEAXI@Z PROC		; std::ios_base::failure::`scalar deleting destructor', COMDAT
$LN32:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 90   :     {

	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	rdi, rcx
	mov	QWORD PTR [rcx], rax
	mov	ebx, edx

; 91   :         __std_exception_destroy(&_Data);

	add	rcx, 8
	call	__std_exception_destroy
	test	bl, 1
	je	SHORT $LN28@scalar
	mov	edx, 40					; 00000028H
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
$LN28@scalar:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_Gfailure@ios_base@std@@UEAAPEAXI@Z ENDP		; std::ios_base::failure::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\vcruntime_exception.h
;	COMDAT ??1failure@ios_base@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1failure@ios_base@std@@UEAA@XZ PROC			; std::ios_base::failure::~failure, COMDAT

; 90   :     {

	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rcx], rax

; 91   :         __std_exception_destroy(&_Data);

	add	rcx, 8
	jmp	__std_exception_destroy
??1failure@ios_base@std@@UEAA@XZ ENDP			; std::ios_base::failure::~failure
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\vcruntime_exception.h
;	COMDAT ??0failure@ios_base@std@@QEAA@AEBV012@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0failure@ios_base@std@@QEAA@AEBV012@@Z PROC		; std::ios_base::failure::failure, COMDAT
$LN24:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx

; 73   :     {

	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rcx], rax
	lea	rdx, QWORD PTR [rcx+8]
	mov	rdi, rcx
	xorps	xmm0, xmm0

; 72   :         : _Data()

	movups	XMMWORD PTR [rdx], xmm0

; 74   :         __std_exception_copy(&_Other._Data, &_Data);

	lea	rcx, QWORD PTR [rbx+8]
	call	__std_exception_copy
	lea	rax, OFFSET FLAT:??_7_System_error@std@@6B@
	mov	QWORD PTR [rdi], rax
	lea	rax, OFFSET FLAT:??_7failure@ios_base@std@@6B@
	movups	xmm0, XMMWORD PTR [rbx+24]
	mov	rbx, QWORD PTR [rsp+48]
	mov	QWORD PTR [rdi], rax
	mov	rax, rdi
	movups	XMMWORD PTR [rdi+24], xmm0
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0failure@ios_base@std@@QEAA@AEBV012@@Z ENDP		; std::ios_base::failure::failure
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\mutex
;	COMDAT ??0_Mutex_base@std@@QEAA@H@Z
_TEXT	SEGMENT
this$ = 8
_Flags$dead$ = 16
??0_Mutex_base@std@@QEAA@H@Z PROC			; std::_Mutex_base::_Mutex_base, COMDAT

; 46   : #endif // ^^^ !defined(_DISABLE_CONSTEXPR_MUTEX_CONSTRUCTOR) ^^^
; 47   : 
; 48   :     _Mutex_base(const _Mutex_base&)            = delete;
; 49   :     _Mutex_base& operator=(const _Mutex_base&) = delete;
; 50   : 
; 51   :     void lock() {
; 52   :         if (_Mtx_lock(_Mymtx()) != _Thrd_result::_Success) {
; 53   :             // undefined behavior, only occurs for plain mutexes (N4950 [thread.mutex.requirements.mutex.general]/6)
; 54   :             _STD _Throw_Cpp_error(_RESOURCE_DEADLOCK_WOULD_OCCUR);
; 55   :         }
; 56   : 
; 57   :         if (!_Verify_ownership_levels()) {
; 58   :             // only occurs for recursive mutexes (N4950 [thread.mutex.recursive]/3)
; 59   :             // POSIX specifies EAGAIN in the corresponding situation:
; 60   :             // https://pubs.opengroup.org/onlinepubs/9699919799/functions/pthread_mutex_lock.html
; 61   :             _STD _Throw_Cpp_error(_RESOURCE_UNAVAILABLE_TRY_AGAIN);
; 62   :         }
; 63   :     }
; 64   : 
; 65   :     _NODISCARD_TRY_CHANGE_STATE bool try_lock() noexcept /* strengthened */ {
; 66   :         // false may be from undefined behavior for plain mutexes (N4950 [thread.mutex.requirements.mutex.general]/6)
; 67   :         return _Mtx_trylock(_Mymtx()) == _Thrd_result::_Success;
; 68   :     }
; 69   : 
; 70   :     void unlock() noexcept /* strengthened */ {
; 71   :         _Mtx_unlock(_Mymtx());
; 72   :     }
; 73   : 
; 74   :     // native_handle_type and native_handle() have intentionally been removed. See GH-3820.
; 75   : 
; 76   : protected:
; 77   :     _NODISCARD_TRY_CHANGE_STATE bool _Verify_ownership_levels() noexcept {
; 78   :         if (_Mtx_storage._Count == INT_MAX) {
; 79   :             // only occurs for recursive mutexes (N4950 [thread.mutex.recursive]/3)
; 80   :             --_Mtx_storage._Count;
; 81   :             return false;
; 82   :         }
; 83   : 
; 84   :         return true;
; 85   :     }
; 86   : 
; 87   : private:
; 88   :     friend condition_variable;
; 89   :     friend condition_variable_any;
; 90   : 
; 91   :     _Mtx_internal_imp_t _Mtx_storage{};

	xor	eax, eax
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [rcx+24], xmm0
	movups	XMMWORD PTR [rcx+40], xmm0
	movups	XMMWORD PTR [rcx+56], xmm0
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
	mov	DWORD PTR [rcx+76], eax
	mov	rax, rcx
	mov	DWORD PTR [rcx+72], -1
	mov	DWORD PTR [rcx], 2
	ret	0
??0_Mutex_base@std@@QEAA@H@Z ENDP			; std::_Mutex_base::_Mutex_base
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Users\ethan\source\repos\DLL\DLL\Headers\server.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\unordered_map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xhash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xhash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\mutex
; File C:\Users\ethan\source\repos\DLL\DLL\Headers\net_types.h
; File C:\Users\ethan\source\repos\DLL\DLL\Source\server.cpp
; File C:\Users\ethan\source\repos\DLL\DLL\Headers\server.h
;	COMDAT ??0ServerInterface@@QEAA@W4SocketTypes@@H@Z
_TEXT	SEGMENT
s$ = 32
$T1 = 80
this$ = 160
serverType$dead$ = 168
serverPort$dead$ = 176
this$ = 184
??0ServerInterface@@QEAA@W4SocketTypes@@H@Z PROC	; ServerInterface::ServerInterface, COMDAT

; 23   : 	ServerInterface(SocketTypes serverType, int serverPort)  {

$LN104:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 128				; 00000080H
	mov	rbx, rcx
	mov	QWORD PTR this$[rsp], rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\unordered_map

; 49   :     explicit _Umap_traits(const _Tr& _Traits) noexcept(is_nothrow_copy_constructible_v<_Tr>) : _Tr(_Traits) {}

	xor	esi, esi
	mov	DWORD PTR [rcx], esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\list

; 353  :     _List_val() noexcept : _Myhead(), _Mysize(0) {} // initialize data

	mov	QWORD PTR [rcx+8], rsi
	mov	QWORD PTR [rcx+16], rsi

; 1838 :         auto _Newhead = _Al.allocate(1);

	mov	ecx, 288				; 00000120H
	call	??2@YAPEAX_K@Z				; operator new

; 1839 :         _Construct_in_place(_Newhead->_Next, _Newhead);

	mov	QWORD PTR [rax], rax

; 1840 :         _Construct_in_place(_Newhead->_Prev, _Newhead);

	mov	QWORD PTR [rax+8], rax

; 1841 :         _Mypair._Myval2._Myhead = _Newhead;

	mov	QWORD PTR [rbx+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xhash

; 373  :         : _Traitsobj(_Parg), _List(_Al), _Vec(_Al), _Mask(_Min_buckets - 1), _Maxidx(_Min_buckets) {

	lea	rcx, QWORD PTR [rbx+24]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\vector

; 400  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	QWORD PTR [rcx], rsi
	mov	QWORD PTR [rcx+8], rsi
	mov	QWORD PTR [rcx+16], rsi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xhash

; 373  :         : _Traitsobj(_Parg), _List(_Al), _Vec(_Al), _Mask(_Min_buckets - 1), _Maxidx(_Min_buckets) {

	mov	QWORD PTR [rbx+48], 7
	mov	QWORD PTR [rbx+56], 8

; 374  :         // construct empty hash table
; 375  :         _Max_bucket_size() = _Bucket_size;

	mov	DWORD PTR [rbx], 1065353216		; 3f800000H

; 376  :         _Vec._Assign_grow(_Min_buckets * 2, _List._Unchecked_end());

	mov	r8, QWORD PTR [rbx+8]
	mov	edx, 16
	call	?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAX_KV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@@2@@Z ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > > >::_Assign_grow
	npad	1
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\mutex

; 91   :     _Mtx_internal_imp_t _Mtx_storage{};

	movups	XMMWORD PTR [rbx+88], xmm0
	movups	XMMWORD PTR [rbx+104], xmm0
	movups	XMMWORD PTR [rbx+120], xmm0

; 41   :         _Mtx_storage._Critical_section = {};

	mov	QWORD PTR [rbx+72], rsi
	mov	QWORD PTR [rbx+80], rsi

; 42   :         _Mtx_storage._Thread_id        = -1;

	mov	DWORD PTR [rbx+136], -1

; 43   :         _Mtx_storage._Type             = _Flags | _Mtx_try;

	mov	ebp, 2
	mov	DWORD PTR [rbx+64], ebp

; 44   :         _Mtx_storage._Count            = 0;

	mov	DWORD PTR [rbx+140], esi
; File C:\Users\ethan\source\repos\DLL\DLL\Headers\net_types.h

; 43   :         : sfd(INVALID_SOCKET), domain(AF_INET),

	mov	DWORD PTR [rbx+144], -1
	mov	DWORD PTR [rbx+148], ebp

; 44   :         type(-1), protocol(-1), port(-1), addr({0}), alive(FALSE)

	mov	QWORD PTR [rbx+152], -1
	mov	DWORD PTR [rbx+160], -1
	movups	XMMWORD PTR [rbx+164], xmm0
	mov	DWORD PTR [rbx+180], esi

; 43   :         : sfd(INVALID_SOCKET), domain(AF_INET),

	movdqa	xmm0, XMMWORD PTR __xmm@ffffffffffffffffffffffff00000002
	movdqu	XMMWORD PTR s$[rsp+4], xmm0
	xorps	xmm1, xmm1

; 44   :         type(-1), protocol(-1), port(-1), addr({0}), alive(FALSE)

	movups	XMMWORD PTR s$[rsp+20], xmm1
	mov	DWORD PTR s$[rsp+36], esi
; File C:\Users\ethan\source\repos\DLL\DLL\Source\server.cpp

; 7    : 	if ( !NetCommon::WSAInitialized )

	cmp	DWORD PTR ?WSAInitialized@NetCommon@@3HA, esi ; NetCommon::WSAInitialized
	jne	SHORT $LN91@ServerInte

; 8    : 		NetCommon::LoadWSAFunctions();

	call	?LoadWSAFunctions@NetCommon@@YAXXZ	; NetCommon::LoadWSAFunctions
$LN91@ServerInte:

; 9    : 
; 10   : 	// create socket for server type
; 11   : 	// update server fields
; 12   : 	if ( serverType == TCP ) {
; 13   : 		server.sfd = CreateSocket(AF_INET, SOCK_STREAM, 0);

	mov	rax, QWORD PTR ?CreateSocket@@3P6A_KHHH@ZEA ; CreateSocket
	xor	r8d, r8d
	mov	edx, 1
	mov	ecx, ebp
	call	rax
	mov	rdi, rax
	mov	DWORD PTR s$[rsp], edi
	cmp	eax, -1

; 14   : 		if ( server.sfd == INVALID_SOCKET )

	je	SHORT $LN90@ServerInte

; 15   : 			return server;
; 16   : 
; 17   : 		server.type = SOCK_STREAM;

	mov	DWORD PTR s$[rsp+8], 1

; 18   : 	} else if ( serverType == UDP) {
; 19   : 		server.sfd = CreateSocket(AF_INET, SOCK_DGRAM, IPPROTO_UDP);
; 20   : 		if ( server.sfd == INVALID_SOCKET )
; 21   : 			return server;
; 22   : 
; 23   : 		server.type = SOCK_DGRAM;
; 24   : 	}
; 25   : 
; 26   : 	// update server fields
; 27   : 	server.addr.sin_family	    = AF_INET;

	mov	WORD PTR s$[rsp+20], bp

; 28   : 	server.addr.sin_addr.s_addr = INADDR_ANY; // servers shouldnt bind to any address

	mov	DWORD PTR s$[rsp+24], esi

; 29   : 	server.addr.sin_port        = htons(port);

	mov	ecx, 5454				; 0000154eH
	call	QWORD PTR __imp_htons
	mov	WORD PTR s$[rsp+22], ax

; 30   : 	server.port                 = port;

	mov	DWORD PTR s$[rsp+16], 5454		; 0000154eH
$LN90@ServerInte:
; File C:\Users\ethan\source\repos\DLL\DLL\Headers\server.h

; 25   : 		StartServer(s);

	movups	xmm0, XMMWORD PTR s$[rsp]
	movaps	XMMWORD PTR $T1[rsp], xmm0
	movups	xmm1, XMMWORD PTR s$[rsp+16]
	movaps	XMMWORD PTR $T1[rsp+16], xmm1
	movsd	xmm0, QWORD PTR s$[rsp+32]
	movsd	QWORD PTR $T1[rsp+32], xmm0

; 44   : 		BindSocket(server.sfd, ( sockaddr*)&server.addr, sizeof(server.addr));

	movsxd	rcx, edi
	mov	r8d, 16
	lea	rdx, QWORD PTR $T1[rsp+20]
	call	QWORD PTR ?BindSocket@@3P6AH_KPEBUsockaddr@@H@ZEA ; BindSocket

; 45   : 		SocketListen(server.sfd, SOMAXCONN);

	movsxd	rcx, DWORD PTR $T1[rsp]
	mov	edx, 2147483647				; 7fffffffH
	call	QWORD PTR ?SocketListen@@3P6AH_KH@ZEA	; SocketListen

; 46   : 		this->ServerDetails = server;

	movaps	xmm0, XMMWORD PTR $T1[rsp]
	movups	XMMWORD PTR [rbx+144], xmm0
	movaps	xmm1, XMMWORD PTR $T1[rsp+16]
	movups	XMMWORD PTR [rbx+160], xmm1
	movsd	xmm0, QWORD PTR $T1[rsp+32]
	movsd	QWORD PTR [rbx+176], xmm0

; 26   : 	}

	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+168]
	add	rsp, 128				; 00000080H
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
??0ServerInterface@@QEAA@W4SocketTypes@@H@Z ENDP	; ServerInterface::ServerInterface
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
s$ = 32
$T1 = 80
this$ = 160
serverType$dead$ = 168
serverPort$dead$ = 176
this$ = 184
?dtor$2@?0???0ServerInterface@@QEAA@W4SocketTypes@@H@Z@4HA PROC ; `ServerInterface::ServerInterface'::`1'::dtor$2
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 8
	jmp	??1?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ ; std::list<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~list<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
?dtor$2@?0???0ServerInterface@@QEAA@W4SocketTypes@@H@Z@4HA ENDP ; `ServerInterface::ServerInterface'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
s$ = 32
$T1 = 80
this$ = 160
serverType$dead$ = 168
serverPort$dead$ = 176
this$ = 184
?dtor$3@?0???0ServerInterface@@QEAA@W4SocketTypes@@H@Z@4HA PROC ; `ServerInterface::ServerInterface'::`1'::dtor$3
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 24
	jmp	??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > > >
?dtor$3@?0???0ServerInterface@@QEAA@W4SocketTypes@@H@Z@4HA ENDP ; `ServerInterface::ServerInterface'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
s$ = 32
$T1 = 80
this$ = 160
serverType$dead$ = 168
serverPort$dead$ = 176
this$ = 184
?dtor$0@?0???0ServerInterface@@QEAA@W4SocketTypes@@H@Z@4HA PROC ; `ServerInterface::ServerInterface'::`1'::dtor$0
	mov	rcx, QWORD PTR this$[rdx]
	jmp	??1?$unordered_map@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@U?$hash@J@2@U?$equal_to@J@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ
?dtor$0@?0???0ServerInterface@@QEAA@W4SocketTypes@@H@Z@4HA ENDP ; `ServerInterface::ServerInterface'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Users\ethan\source\repos\DLL\DLL\Headers\server.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xhash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xhash
; File C:\Users\ethan\source\repos\DLL\DLL\Headers\server.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory
; File C:\Users\ethan\source\repos\DLL\DLL\Headers\server.h
;	COMDAT ??1ServerInterface@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1ServerInterface@@QEAA@XZ PROC			; ServerInterface::~ServerInterface, COMDAT

; 28   : 	~ServerInterface() {

$LN51:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 29   : 		//if ( IsServerRunning(this->ServerDetails) )
; 30   : 		//	ShutdownServer(this->ServerDetails);
; 31   : 
; 32   : 		CleanWSA();

	call	QWORD PTR ?CleanWSA@@3P6AHXZEA		; CleanWSA
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xhash

; 309  :         if (_Mypair._Myval2._Myfirst != nullptr) {

	mov	rcx, QWORD PTR [rbx+24]
	test	rcx, rcx
	je	SHORT $LN18@ServerInte

; 281  :         return static_cast<size_type>(_Mypair._Myval2._Myend - _Mypair._Myval2._Myfirst);

	mov	rdx, QWORD PTR [rbx+40]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory

; 950  :         _STD _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -8

; 253  :         if (_Bytes >= _Big_allocation_threshold) {

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN40@ServerInte

; 171  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 172  : 
; 173  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 174  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]

; 175  : 
; 176  :     // If the following asserts, it likely means that we are performing
; 177  :     // an aligned delete on memory coming from an unaligned allocation.
; 178  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 179  : 
; 180  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 181  :     // in range [_Min_back_shift, _Non_user_size]
; 182  : #ifdef _DEBUG
; 183  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 184  : #else // ^^^ defined(_DEBUG) / !defined(_DEBUG) vvv
; 185  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 186  : #endif // ^^^ !defined(_DEBUG) ^^^
; 187  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 188  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN37@ServerInte

; 189  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN40@ServerInte:

; 258  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xhash

; 312  :             _Mypair._Myval2._Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx+24], rax

; 313  :             _Mypair._Myval2._Mylast  = nullptr;

	mov	QWORD PTR [rbx+32], rax

; 314  :             _Mypair._Myval2._Myend   = nullptr;

	mov	QWORD PTR [rbx+40], rax
$LN18@ServerInte:
	lea	rcx, QWORD PTR [rbx+8]
; File C:\Users\ethan\source\repos\DLL\DLL\Headers\server.h

; 33   : 	}

	add	rsp, 32					; 00000020H
	pop	rbx
	jmp	??1?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ ; std::list<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~list<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
$LN37@ServerInte:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory

; 188  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	_invalid_parameter_noinfo_noreturn
	int	3
$LN48@ServerInte:
??1ServerInterface@@QEAA@XZ ENDP			; ServerInterface::~ServerInterface
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Users\ethan\source\repos\DLL\DLL\Headers\server.h
;	COMDAT ?StartServer@ServerInterface@@QEAAHUServer@@@Z
_TEXT	SEGMENT
this$ = 48
server$ = 56
?StartServer@ServerInterface@@QEAAHUServer@@@Z PROC	; ServerInterface::StartServer, COMDAT

; 39   : 	inline BOOL StartServer(Server server) {

$LN4:
	mov	QWORD PTR [rsp+24], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rdx
	mov	rbx, rcx

; 40   : 		
; 41   : 		// TODO: cleanup start server function. include
; 42   : 		// error handling too since this is a server side function
; 43   : 
; 44   : 		BindSocket(server.sfd, ( sockaddr*)&server.addr, sizeof(server.addr));

	add	rdx, 20
	mov	r8d, 16
	movsxd	rcx, DWORD PTR [rdi]
	call	QWORD PTR ?BindSocket@@3P6AH_KPEBUsockaddr@@H@ZEA ; BindSocket

; 45   : 		SocketListen(server.sfd, SOMAXCONN);

	movsxd	rcx, DWORD PTR [rdi]
	mov	edx, 2147483647				; 7fffffffH
	call	QWORD PTR ?SocketListen@@3P6AH_KH@ZEA	; SocketListen

; 46   : 		this->ServerDetails = server;

	movaps	xmm0, XMMWORD PTR [rdi]

; 47   : 		return TRUE;

	mov	eax, 1
	movaps	xmm1, XMMWORD PTR [rdi+16]
	movups	XMMWORD PTR [rbx+144], xmm0
	movsd	xmm0, QWORD PTR [rdi+32]
	movups	XMMWORD PTR [rbx+160], xmm1
	movsd	QWORD PTR [rbx+176], xmm0

; 48   : 	}

	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?StartServer@ServerInterface@@QEAAHUServer@@@Z ENDP	; ServerInterface::StartServer
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Users\ethan\source\repos\DLL\DLL\Headers\server.h
;	COMDAT ?GetServerDetails@ServerInterface@@QEBA?BUServer@@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?GetServerDetails@ServerInterface@@QEBA?BUServer@@XZ PROC ; ServerInterface::GetServerDetails, COMDAT

; 59   : 		return this->ServerDetails;

	movups	xmm0, XMMWORD PTR [rcx+144]
	mov	rax, rdx
	movups	xmm1, XMMWORD PTR [rcx+160]
	movups	XMMWORD PTR [rdx], xmm0
	movsd	xmm0, QWORD PTR [rcx+176]
	movups	XMMWORD PTR [rdx+16], xmm1
	movsd	QWORD PTR [rdx+32], xmm0

; 60   : 	}

	ret	0
?GetServerDetails@ServerInterface@@QEBA?BUServer@@XZ ENDP ; ServerInterface::GetServerDetails
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xhash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xhash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory
;	COMDAT ??1?$unordered_map@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@U?$hash@J@2@U?$equal_to@J@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$unordered_map@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@U?$hash@J@2@U?$equal_to@J@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ PROC ; std::unordered_map<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::hash<long>,std::equal_to<long>,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~unordered_map<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::hash<long>,std::equal_to<long>,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >, COMDAT
$LN48:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xhash

; 309  :         if (_Mypair._Myval2._Myfirst != nullptr) {

	mov	rcx, QWORD PTR [rcx+24]
	test	rcx, rcx
	je	SHORT $LN13@unordered_

; 281  :         return static_cast<size_type>(_Mypair._Myval2._Myend - _Mypair._Myval2._Myfirst);

	mov	rdx, QWORD PTR [rbx+40]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory

; 950  :         _STD _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -8

; 253  :         if (_Bytes >= _Big_allocation_threshold) {

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN35@unordered_

; 174  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 175  : 
; 176  :     // If the following asserts, it likely means that we are performing
; 177  :     // an aligned delete on memory coming from an unaligned allocation.
; 178  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 179  : 
; 180  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 181  :     // in range [_Min_back_shift, _Non_user_size]
; 182  : #ifdef _DEBUG
; 183  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 184  : #else // ^^^ defined(_DEBUG) / !defined(_DEBUG) vvv
; 185  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 186  : #endif // ^^^ !defined(_DEBUG) ^^^
; 187  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 188  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN32@unordered_

; 189  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN35@unordered_:

; 258  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xhash

; 312  :             _Mypair._Myval2._Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx+24], rax

; 313  :             _Mypair._Myval2._Mylast  = nullptr;

	mov	QWORD PTR [rbx+32], rax

; 314  :             _Mypair._Myval2._Myend   = nullptr;

	mov	QWORD PTR [rbx+40], rax
$LN13@unordered_:
	lea	rcx, QWORD PTR [rbx+8]
	add	rsp, 32					; 00000020H
	pop	rbx
	jmp	??1?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ ; std::list<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~list<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
$LN32@unordered_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory

; 188  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	_invalid_parameter_noinfo_noreturn
	int	3
$LN45@unordered_:
??1?$unordered_map@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@U?$hash@J@2@U?$equal_to@J@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ ENDP ; std::unordered_map<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::hash<long>,std::equal_to<long>,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~unordered_map<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::hash<long>,std::equal_to<long>,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xhash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xhash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory
;	COMDAT ??1?$_Hash@V?$_Umap_traits@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@V?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@$0A@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Hash@V?$_Umap_traits@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@V?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@$0A@@std@@@std@@QEAA@XZ PROC ; std::_Hash<std::_Umap_traits<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Uhash_compare<long,std::hash<long>,std::equal_to<long> >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,0> >::~_Hash<std::_Umap_traits<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Uhash_compare<long,std::hash<long>,std::equal_to<long> >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,0> >, COMDAT
$LN42:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xhash

; 309  :         if (_Mypair._Myval2._Myfirst != nullptr) {

	mov	rcx, QWORD PTR [rcx+24]
	test	rcx, rcx
	je	SHORT $LN8@Hash

; 281  :         return static_cast<size_type>(_Mypair._Myval2._Myend - _Mypair._Myval2._Myfirst);

	mov	rdx, QWORD PTR [rbx+40]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory

; 950  :         _STD _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -8

; 253  :         if (_Bytes >= _Big_allocation_threshold) {

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN30@Hash

; 174  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 175  : 
; 176  :     // If the following asserts, it likely means that we are performing
; 177  :     // an aligned delete on memory coming from an unaligned allocation.
; 178  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 179  : 
; 180  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 181  :     // in range [_Min_back_shift, _Non_user_size]
; 182  : #ifdef _DEBUG
; 183  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 184  : #else // ^^^ defined(_DEBUG) / !defined(_DEBUG) vvv
; 185  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 186  : #endif // ^^^ !defined(_DEBUG) ^^^
; 187  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 188  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN27@Hash

; 189  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN30@Hash:

; 258  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xhash

; 312  :             _Mypair._Myval2._Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx+24], rax

; 313  :             _Mypair._Myval2._Mylast  = nullptr;

	mov	QWORD PTR [rbx+32], rax

; 314  :             _Mypair._Myval2._Myend   = nullptr;

	mov	QWORD PTR [rbx+40], rax
$LN8@Hash:
	lea	rcx, QWORD PTR [rbx+8]
	add	rsp, 32					; 00000020H
	pop	rbx
	jmp	??1?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ ; std::list<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~list<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
$LN27@Hash:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory

; 188  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	_invalid_parameter_noinfo_noreturn
	int	3
$LN39@Hash:
??1?$_Hash@V?$_Umap_traits@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@V?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@$0A@@std@@@std@@QEAA@XZ ENDP ; std::_Hash<std::_Umap_traits<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Uhash_compare<long,std::hash<long>,std::equal_to<long> >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,0> >::~_Hash<std::_Umap_traits<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Uhash_compare<long,std::hash<long>,std::equal_to<long> >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,0> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\mutex
;	COMDAT ??0mutex@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0mutex@std@@QEAA@XZ PROC				; std::mutex::mutex, COMDAT

; 91   :     _Mtx_internal_imp_t _Mtx_storage{};

	xor	eax, eax
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [rcx+24], xmm0
	movups	XMMWORD PTR [rcx+40], xmm0
	movups	XMMWORD PTR [rcx+56], xmm0
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
	mov	DWORD PTR [rcx+76], eax

; 100  :     mutex() noexcept = default;

	mov	rax, rcx

; 42   :         _Mtx_storage._Thread_id        = -1;

	mov	DWORD PTR [rcx+72], -1

; 43   :         _Mtx_storage._Type             = _Flags | _Mtx_try;

	mov	DWORD PTR [rcx], 2

; 100  :     mutex() noexcept = default;

	ret	0
??0mutex@std@@QEAA@XZ ENDP				; std::mutex::mutex
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Users\ethan\source\repos\DLL\DLL\Source\servermain.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream
; File C:\Users\ethan\source\repos\DLL\DLL\Headers\server.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xhash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xhash
; File C:\Users\ethan\source\repos\DLL\DLL\Source\servermain.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory
; File C:\Users\ethan\source\repos\DLL\DLL\Source\servermain.cpp
;	COMDAT main
_TEXT	SEGMENT
server$ = 32
__$ArrayPad$ = 224
main	PROC						; COMDAT

; 10   : int main() {

$LN70:
	push	rbx
	sub	rsp, 240				; 000000f0H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	xor	edx, edx
	mov	r8d, 184				; 000000b8H
	lea	rcx, QWORD PTR server$[rsp]
	call	memset

; 11   :     struct sockaddr_in serverAddr;
; 12   : 
; 13   :     ServerInterface server(SocketTypes::TCP, 5454);

	lea	rcx, QWORD PTR server$[rsp]
	call	??0ServerInterface@@QEAA@W4SocketTypes@@H@Z ; ServerInterface::ServerInterface
	npad	1

; 14   : 
; 15   :     // Accept a client socket
; 16   :     SOCKET s = accept(server.GetServerDetails().sfd, nullptr, nullptr);

	movsxd	rcx, DWORD PTR server$[rsp+144]
	xor	r8d, r8d
	xor	edx, edx
	call	QWORD PTR __imp_accept

; 17   :     if ( s != INVALID_SOCKET )

	cmp	rax, -1
	je	SHORT $LN12@main

; 18   :         std::cout << "Client connected!" << std::endl;

	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rbx, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream

; 1019 :     _Ostr.put(_Ostr.widen('\n'));

	mov	rcx, QWORD PTR [rax]
	movsxd	rcx, DWORD PTR [rcx+4]
	add	rcx, rax
	mov	dl, 10
	call	?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z ; std::basic_ios<char,std::char_traits<char> >::widen
	movzx	edx, al
	mov	rcx, rbx
	call	?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put

; 1020 :     _Ostr.flush();

	mov	rcx, rbx
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush
	npad	1
$LN12@main:
; File C:\Users\ethan\source\repos\DLL\DLL\Headers\server.h

; 32   : 		CleanWSA();

	call	QWORD PTR ?CleanWSA@@3P6AHXZEA		; CleanWSA
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xhash

; 309  :         if (_Mypair._Myval2._Myfirst != nullptr) {

	mov	rcx, QWORD PTR server$[rsp+24]
	test	rcx, rcx
	je	SHORT $LN35@main

; 281  :         return static_cast<size_type>(_Mypair._Myval2._Myend - _Mypair._Myval2._Myfirst);

	mov	rax, QWORD PTR server$[rsp+40]
	sub	rax, rcx
	sar	rax, 3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory

; 950  :         _STD _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	lea	rdx, QWORD PTR [rax*8]
	mov	rax, rcx

; 253  :         if (_Bytes >= _Big_allocation_threshold) {

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN57@main

; 171  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 172  : 
; 173  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 174  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 188  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	SHORT $LN68@main
$LN57@main:

; 258  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xhash

; 312  :             _Mypair._Myval2._Myfirst = nullptr;

	mov	QWORD PTR server$[rsp+24], 0
	xorps	xmm0, xmm0

; 313  :             _Mypair._Myval2._Mylast  = nullptr;

	movdqa	XMMWORD PTR server$[rsp+32], xmm0
$LN35@main:
	lea	rcx, QWORD PTR server$[rsp+8]
	call	??1?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ ; std::list<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~list<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	npad	1
; File C:\Users\ethan\source\repos\DLL\DLL\Source\servermain.cpp

; 20   :     return 0;

	xor	eax, eax

; 21   : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 240				; 000000f0H
	pop	rbx
	ret	0
$LN68@main:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory

; 188  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	_invalid_parameter_noinfo_noreturn
	npad	1
$LN66@main:
main	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
server$ = 32
__$ArrayPad$ = 224
main$dtor$0 PROC
	lea	rcx, QWORD PTR server$[rdx]
	jmp	??1ServerInterface@@QEAA@XZ		; ServerInterface::~ServerInterface
main$dtor$0 ENDP
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@ServerInterface@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@ServerInterface@@QEAAX_K@Z PROC	; ServerInterface::__autoclassinit2, COMDAT
	xor	edx, edx
	mov	r8d, 184				; 000000b8H
	jmp	memset
?__autoclassinit2@ServerInterface@@QEAAX_K@Z ENDP	; ServerInterface::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream
;	COMDAT ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z
_TEXT	SEGMENT
this$ = 8
_Pfn$dead$ = 16
??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::operator<<, COMDAT

; 196  :         // call basic_ostream manipulator
; 197  :         return _Pfn(*this);

	jmp	??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::operator<<
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\unordered_map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xhash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xhash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\unordered_map
;	COMDAT ??0?$unordered_map@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@U?$hash@J@2@U?$equal_to@J@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$unordered_map@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@U?$hash@J@2@U?$equal_to@J@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ PROC ; std::unordered_map<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::hash<long>,std::equal_to<long>,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::unordered_map<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::hash<long>,std::equal_to<long>,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >, COMDAT

; 101  :     unordered_map() : _Mybase(_Key_compare(), allocator_type()) {}

$LN80:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 49   :     explicit _Umap_traits(const _Tr& _Traits) noexcept(is_nothrow_copy_constructible_v<_Tr>) : _Tr(_Traits) {}

	xor	edi, edi
	mov	DWORD PTR [rcx], edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\list

; 353  :     _List_val() noexcept : _Myhead(), _Mysize(0) {} // initialize data

	mov	QWORD PTR [rcx+8], rdi
	mov	QWORD PTR [rcx+16], rdi

; 1838 :         auto _Newhead = _Al.allocate(1);

	mov	ecx, 288				; 00000120H
	call	??2@YAPEAX_K@Z				; operator new

; 1839 :         _Construct_in_place(_Newhead->_Next, _Newhead);

	mov	QWORD PTR [rax], rax

; 1840 :         _Construct_in_place(_Newhead->_Prev, _Newhead);

	mov	QWORD PTR [rax+8], rax

; 1841 :         _Mypair._Myval2._Myhead = _Newhead;

	mov	QWORD PTR [rbx+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xhash

; 373  :         : _Traitsobj(_Parg), _List(_Al), _Vec(_Al), _Mask(_Min_buckets - 1), _Maxidx(_Min_buckets) {

	lea	rcx, QWORD PTR [rbx+24]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\vector

; 400  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	QWORD PTR [rcx], rdi
	mov	QWORD PTR [rcx+8], rdi
	mov	QWORD PTR [rcx+16], rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xhash

; 373  :         : _Traitsobj(_Parg), _List(_Al), _Vec(_Al), _Mask(_Min_buckets - 1), _Maxidx(_Min_buckets) {

	mov	QWORD PTR [rbx+48], 7
	mov	QWORD PTR [rbx+56], 8

; 374  :         // construct empty hash table
; 375  :         _Max_bucket_size() = _Bucket_size;

	mov	DWORD PTR [rbx], 1065353216		; 3f800000H

; 376  :         _Vec._Assign_grow(_Min_buckets * 2, _List._Unchecked_end());

	mov	r8, QWORD PTR [rbx+8]
	mov	edx, 16
	call	?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAX_KV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@@2@@Z ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > > >::_Assign_grow
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\unordered_map

; 101  :     unordered_map() : _Mybase(_Key_compare(), allocator_type()) {}

	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$unordered_map@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@U?$hash@J@2@U?$equal_to@J@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ ENDP ; std::unordered_map<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::hash<long>,std::equal_to<long>,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::unordered_map<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::hash<long>,std::equal_to<long>,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$1@?0???0?$unordered_map@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@U?$hash@J@2@U?$equal_to@J@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ@4HA PROC ; `std::unordered_map<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::hash<long>,std::equal_to<long>,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::unordered_map<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::hash<long>,std::equal_to<long>,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >'::`1'::dtor$1
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 8
	jmp	??1?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ ; std::list<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~list<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
?dtor$1@?0???0?$unordered_map@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@U?$hash@J@2@U?$equal_to@J@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ@4HA ENDP ; `std::unordered_map<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::hash<long>,std::equal_to<long>,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::unordered_map<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::hash<long>,std::equal_to<long>,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$2@?0???0?$unordered_map@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@U?$hash@J@2@U?$equal_to@J@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ@4HA PROC ; `std::unordered_map<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::hash<long>,std::equal_to<long>,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::unordered_map<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::hash<long>,std::equal_to<long>,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >'::`1'::dtor$2
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 24
	jmp	??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > > >
?dtor$2@?0???0?$unordered_map@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@U?$hash@J@2@U?$equal_to@J@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ@4HA ENDP ; `std::unordered_map<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::hash<long>,std::equal_to<long>,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::unordered_map<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::hash<long>,std::equal_to<long>,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xhash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xhash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xhash
;	COMDAT ??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > > >, COMDAT

; 318  :     ~_Hash_vec() {

$LN38:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 309  :         if (_Mypair._Myval2._Myfirst != nullptr) {

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN5@Hash_vec

; 281  :         return static_cast<size_type>(_Mypair._Myval2._Myend - _Mypair._Myval2._Myfirst);

	mov	rdx, QWORD PTR [rbx+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory

; 950  :         _STD _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -8

; 253  :         if (_Bytes >= _Big_allocation_threshold) {

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN27@Hash_vec

; 174  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 175  : 
; 176  :     // If the following asserts, it likely means that we are performing
; 177  :     // an aligned delete on memory coming from an unaligned allocation.
; 178  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 179  : 
; 180  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 181  :     // in range [_Min_back_shift, _Non_user_size]
; 182  : #ifdef _DEBUG
; 183  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 184  : #else // ^^^ defined(_DEBUG) / !defined(_DEBUG) vvv
; 185  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 186  : #endif // ^^^ !defined(_DEBUG) ^^^
; 187  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 188  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN24@Hash_vec

; 189  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN27@Hash_vec:

; 258  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xhash

; 312  :             _Mypair._Myval2._Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 313  :             _Mypair._Myval2._Mylast  = nullptr;

	mov	QWORD PTR [rbx+8], rax

; 314  :             _Mypair._Myval2._Myend   = nullptr;

	mov	QWORD PTR [rbx+16], rax
$LN5@Hash_vec:

; 324  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN24@Hash_vec:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory

; 188  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	_invalid_parameter_noinfo_noreturn
	int	3
$LN35@Hash_vec:
??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\list
;	COMDAT ??1?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ PROC ; std::list<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~list<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >, COMDAT

; 1047 :     ~list() noexcept {

$LN140:
	mov	QWORD PTR [rsp+32], rsi
	push	r14
	sub	rsp, 32					; 00000020H

; 1503 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

	mov	rdx, QWORD PTR [rcx]

; 1047 :     ~list() noexcept {

	mov	r14, rcx

; 324  :         _Head->_Prev->_Next = nullptr;

	mov	rax, QWORD PTR [rdx+8]
	mov	QWORD PTR [rax], 0

; 325  : 
; 326  :         auto _Pnode = _Head->_Next;

	mov	rsi, QWORD PTR [rdx]

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

	test	rsi, rsi
	je	SHORT $LN134@list
	mov	QWORD PTR [rsp+56], rbx
	mov	QWORD PTR [rsp+64], rdi
	npad	2
$LL10@list:

; 328  :             _Pnext = _Pnode->_Next;

	mov	rdi, QWORD PTR [rsi]
	lea	rcx, QWORD PTR [rsi+88]
	call	??1Client@@QEAA@XZ
	lea	rcx, QWORD PTR [rsi+24]
	call	??1?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QEAA@XZ
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory

; 258  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 288				; 00000120H
	mov	rcx, rsi
	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\list

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

	mov	rsi, rdi
	test	rdi, rdi
	jne	SHORT $LL10@list
	mov	rdi, QWORD PTR [rsp+64]
	mov	rbx, QWORD PTR [rsp+56]
$LN134@list:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory

; 258  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, QWORD PTR [r14]
	mov	edx, 288				; 00000120H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\list

; 1053 :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	r14
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory

; 258  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
??1?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ ENDP ; std::list<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~list<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocinfo
;	COMDAT ??1?$_Yarn@_W@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Yarn@_W@std@@QEAA@XZ PROC				; std::_Yarn<wchar_t>::~_Yarn<wchar_t>, COMDAT

; 181  :     __CLR_OR_THIS_CALL ~_Yarn() noexcept {

$LN12:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 203  :         if (_Myptr) {

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN8@Yarn

; 204  : #ifdef _DEBUG
; 205  :             _free_dbg(_Myptr, _CRT_BLOCK);
; 206  : #else
; 207  :             _CSTD free(_Myptr);

	call	free
$LN8@Yarn:

; 182  :         _Tidy();
; 183  :     }

	mov	QWORD PTR [rbx], 0
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??1?$_Yarn@_W@std@@QEAA@XZ ENDP				; std::_Yarn<wchar_t>::~_Yarn<wchar_t>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocinfo
;	COMDAT ??0?$_Yarn@_W@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Yarn@_W@std@@QEAA@XZ PROC				; std::_Yarn<wchar_t>::_Yarn<wchar_t>, COMDAT

; 140  :     __CLR_OR_THIS_CALL _Yarn() noexcept : _Myptr(nullptr), _Nul(0) {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	WORD PTR [rcx+8], ax
	mov	rax, rcx
	ret	0
??0?$_Yarn@_W@std@@QEAA@XZ ENDP				; std::_Yarn<wchar_t>::_Yarn<wchar_t>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocinfo
;	COMDAT ?c_str@?$_Yarn@D@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?c_str@?$_Yarn@D@std@@QEBAPEBDXZ PROC			; std::_Yarn<char>::c_str, COMDAT

; 190  :         return _Myptr ? _Myptr : &_Nul;

	mov	rax, QWORD PTR [rcx]
	test	rax, rax
	jne	SHORT $LN4@c_str
	lea	rax, QWORD PTR [rcx+8]
$LN4@c_str:

; 191  :     }

	ret	0
?c_str@?$_Yarn@D@std@@QEBAPEBDXZ ENDP			; std::_Yarn<char>::c_str
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocinfo
;	COMDAT ??1?$_Yarn@D@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Yarn@D@std@@QEAA@XZ PROC				; std::_Yarn<char>::~_Yarn<char>, COMDAT

; 181  :     __CLR_OR_THIS_CALL ~_Yarn() noexcept {

$LN12:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 203  :         if (_Myptr) {

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN8@Yarn

; 204  : #ifdef _DEBUG
; 205  :             _free_dbg(_Myptr, _CRT_BLOCK);
; 206  : #else
; 207  :             _CSTD free(_Myptr);

	call	free
$LN8@Yarn:

; 182  :         _Tidy();
; 183  :     }

	mov	QWORD PTR [rbx], 0
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??1?$_Yarn@D@std@@QEAA@XZ ENDP				; std::_Yarn<char>::~_Yarn<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocinfo
;	COMDAT ??0?$_Yarn@D@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Yarn@D@std@@QEAA@XZ PROC				; std::_Yarn<char>::_Yarn<char>, COMDAT

; 140  :     __CLR_OR_THIS_CALL _Yarn() noexcept : _Myptr(nullptr), _Nul(0) {}

	mov	QWORD PTR [rcx], 0
	mov	rax, rcx
	mov	BYTE PTR [rcx+8], 0
	ret	0
??0?$_Yarn@D@std@@QEAA@XZ ENDP				; std::_Yarn<char>::_Yarn<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT

; 398  :             return __builtin_strlen(_First);

	mov	r8, -1
	npad	9
$LL6@append:
	inc	r8
	cmp	BYTE PTR [rdx+r8], 0
	jne	SHORT $LL6@append

; 3331 :         return append(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	jmp	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT

; 2244 :         return _Myres > _Small_string_capacity;

	cmp	QWORD PTR [rdx+24], 15

; 3280 :         return append(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

	mov	r8, QWORD PTR [rdx+16]

; 2236 :         if (_Large_mode_engaged()) {

	jbe	SHORT $LN4@append

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rdx, QWORD PTR [rdx]
$LN4@append:

; 3280 :         return append(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

	jmp	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2546 :         : _Mypair(_Zero_then_variadic_args_t{}) {

$LN18:
	push	rbx
	sub	rsp, 32					; 00000020H

; 2308 :     size_type _Mysize = 0; // current length of string (size)

	xor	eax, eax
	xorps	xmm0, xmm0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR [rcx], xmm0

; 2308 :     size_type _Mysize = 0; // current length of string (size)

	mov	QWORD PTR [rcx+16], rax

; 2546 :         : _Mypair(_Zero_then_variadic_args_t{}) {

	mov	rbx, rcx

; 2309 :     size_type _Myres  = 0; // current storage reserved for string (capacity)

	mov	QWORD PTR [rcx+24], rax

; 2547 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Count);

	call	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>

; 2548 :     }

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xhash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xhash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xhash
;	COMDAT ?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ PROC ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > > >::_Tidy, COMDAT

; 308  :     void _Tidy() noexcept {

$LN34:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 309  :         if (_Mypair._Myval2._Myfirst != nullptr) {

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN2@Tidy

; 281  :         return static_cast<size_type>(_Mypair._Myval2._Myend - _Mypair._Myval2._Myfirst);

	mov	rdx, QWORD PTR [rbx+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory

; 950  :         _STD _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -8

; 253  :         if (_Bytes >= _Big_allocation_threshold) {

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN24@Tidy

; 174  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 175  : 
; 176  :     // If the following asserts, it likely means that we are performing
; 177  :     // an aligned delete on memory coming from an unaligned allocation.
; 178  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 179  : 
; 180  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 181  :     // in range [_Min_back_shift, _Non_user_size]
; 182  : #ifdef _DEBUG
; 183  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 184  : #else // ^^^ defined(_DEBUG) / !defined(_DEBUG) vvv
; 185  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 186  : #endif // ^^^ !defined(_DEBUG) ^^^
; 187  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 188  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN21@Tidy

; 189  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN24@Tidy:

; 258  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xhash

; 312  :             _Mypair._Myval2._Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 313  :             _Mypair._Myval2._Mylast  = nullptr;

	mov	QWORD PTR [rbx+8], rax

; 314  :             _Mypair._Myval2._Myend   = nullptr;

	mov	QWORD PTR [rbx+16], rax
$LN2@Tidy:

; 316  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN21@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory

; 188  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	_invalid_parameter_noinfo_noreturn
	int	3
$LN31@Tidy:
?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ ENDP ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xhash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\unordered_map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xhash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xhash
;	COMDAT ??0?$_Hash@V?$_Umap_traits@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@V?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@1@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Parg$ = 56
_Al$dead$ = 64
??0?$_Hash@V?$_Umap_traits@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@V?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@1@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@1@@Z PROC ; std::_Hash<std::_Umap_traits<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Uhash_compare<long,std::hash<long>,std::equal_to<long> >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,0> >::_Hash<std::_Umap_traits<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Uhash_compare<long,std::hash<long>,std::equal_to<long> >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,0> >, COMDAT

; 373  :         : _Traitsobj(_Parg), _List(_Al), _Vec(_Al), _Mask(_Min_buckets - 1), _Maxidx(_Min_buckets) {

$LN67:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\unordered_map

; 49   :     explicit _Umap_traits(const _Tr& _Traits) noexcept(is_nothrow_copy_constructible_v<_Tr>) : _Tr(_Traits) {}

	mov	eax, DWORD PTR [rdx]
	mov	DWORD PTR [rcx], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\list

; 353  :     _List_val() noexcept : _Myhead(), _Mysize(0) {} // initialize data

	xor	edi, edi
	mov	QWORD PTR [rcx+8], rdi
	mov	QWORD PTR [rcx+16], rdi

; 1838 :         auto _Newhead = _Al.allocate(1);

	mov	ecx, 288				; 00000120H
	call	??2@YAPEAX_K@Z				; operator new

; 1839 :         _Construct_in_place(_Newhead->_Next, _Newhead);

	mov	QWORD PTR [rax], rax

; 1840 :         _Construct_in_place(_Newhead->_Prev, _Newhead);

	mov	QWORD PTR [rax+8], rax

; 1841 :         _Mypair._Myval2._Myhead = _Newhead;

	mov	QWORD PTR [rbx+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xhash

; 373  :         : _Traitsobj(_Parg), _List(_Al), _Vec(_Al), _Mask(_Min_buckets - 1), _Maxidx(_Min_buckets) {

	lea	rcx, QWORD PTR [rbx+24]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\vector

; 400  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	QWORD PTR [rcx], rdi
	mov	QWORD PTR [rcx+8], rdi
	mov	QWORD PTR [rcx+16], rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xhash

; 373  :         : _Traitsobj(_Parg), _List(_Al), _Vec(_Al), _Mask(_Min_buckets - 1), _Maxidx(_Min_buckets) {

	mov	QWORD PTR [rbx+48], 7
	mov	QWORD PTR [rbx+56], 8

; 374  :         // construct empty hash table
; 375  :         _Max_bucket_size() = _Bucket_size;

	mov	DWORD PTR [rbx], 1065353216		; 3f800000H

; 376  :         _Vec._Assign_grow(_Min_buckets * 2, _List._Unchecked_end());

	mov	r8, QWORD PTR [rbx+8]
	mov	edx, 16
	call	?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAX_KV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@@2@@Z ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > > >::_Assign_grow
	npad	1

; 377  : #ifdef _ENABLE_STL_INTERNAL_CHECK
; 378  :         _Stl_internal_check_container_invariants();
; 379  : #endif // _ENABLE_STL_INTERNAL_CHECK
; 380  :     }

	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$_Hash@V?$_Umap_traits@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@V?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@1@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@1@@Z ENDP ; std::_Hash<std::_Umap_traits<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Uhash_compare<long,std::hash<long>,std::equal_to<long> >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,0> >::_Hash<std::_Umap_traits<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Uhash_compare<long,std::hash<long>,std::equal_to<long> >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,0> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Parg$ = 56
_Al$dead$ = 64
?dtor$0@?0???0?$_Hash@V?$_Umap_traits@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@V?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@1@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@1@@Z@4HA PROC ; `std::_Hash<std::_Umap_traits<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Uhash_compare<long,std::hash<long>,std::equal_to<long> >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,0> >::_Hash<std::_Umap_traits<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Uhash_compare<long,std::hash<long>,std::equal_to<long> >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,0> >'::`1'::dtor$0
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 8
	jmp	??1?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@XZ ; std::list<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~list<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
?dtor$0@?0???0?$_Hash@V?$_Umap_traits@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@V?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@1@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@1@@Z@4HA ENDP ; `std::_Hash<std::_Umap_traits<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Uhash_compare<long,std::hash<long>,std::equal_to<long> >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,0> >::_Hash<std::_Umap_traits<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Uhash_compare<long,std::hash<long>,std::equal_to<long> >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,0> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Parg$ = 56
_Al$dead$ = 64
?dtor$1@?0???0?$_Hash@V?$_Umap_traits@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@V?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@1@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@1@@Z@4HA PROC ; `std::_Hash<std::_Umap_traits<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Uhash_compare<long,std::hash<long>,std::equal_to<long> >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,0> >::_Hash<std::_Umap_traits<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Uhash_compare<long,std::hash<long>,std::equal_to<long> >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,0> >'::`1'::dtor$1
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 24
	jmp	??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > > >
?dtor$1@?0???0?$_Hash@V?$_Umap_traits@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@V?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@1@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@1@@Z@4HA ENDP ; `std::_Hash<std::_Umap_traits<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Uhash_compare<long,std::hash<long>,std::equal_to<long> >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,0> >::_Hash<std::_Umap_traits<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Uhash_compare<long,std::hash<long>,std::equal_to<long> >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,0> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\list
;	COMDAT ?_Tidy@?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@AEAAXXZ PROC ; std::list<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Tidy, COMDAT

; 1499 :     void _Tidy() noexcept {

$LN136:
	mov	QWORD PTR [rsp+32], rsi
	push	r14
	sub	rsp, 32					; 00000020H

; 1500 :         auto& _Al      = _Getal();
; 1501 :         auto& _My_data = _Mypair._Myval2;
; 1502 :         _My_data._Orphan_all();
; 1503 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

	mov	rdx, QWORD PTR [rcx]
	mov	r14, rcx

; 324  :         _Head->_Prev->_Next = nullptr;

	mov	rax, QWORD PTR [rdx+8]
	mov	QWORD PTR [rax], 0

; 325  : 
; 326  :         auto _Pnode = _Head->_Next;

	mov	rsi, QWORD PTR [rdx]

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

	test	rsi, rsi
	je	SHORT $LN130@Tidy
	mov	QWORD PTR [rsp+56], rbx
	mov	QWORD PTR [rsp+64], rdi
	npad	2
$LL7@Tidy:

; 328  :             _Pnext = _Pnode->_Next;

	mov	rdi, QWORD PTR [rsi]
	lea	rcx, QWORD PTR [rsi+88]
	call	??1Client@@QEAA@XZ
	lea	rcx, QWORD PTR [rsi+24]
	call	??1?$tuple@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QEAA@XZ
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory

; 258  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 288				; 00000120H
	mov	rcx, rsi
	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\list

; 327  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

	mov	rsi, rdi
	test	rdi, rdi
	jne	SHORT $LL7@Tidy
	mov	rdi, QWORD PTR [rsp+64]
	mov	rbx, QWORD PTR [rsp+56]
$LN130@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory

; 258  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, QWORD PTR [r14]
	mov	edx, 288				; 00000120H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\list

; 1505 :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	r14
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory

; 258  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
?_Tidy@?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@AEAAXXZ ENDP ; std::list<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@QEAA@XZ PROC ; std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT

; 939  :     constexpr allocator() noexcept {}

	mov	rax, rcx
	ret	0
??0?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@QEAA@XZ ENDP ; std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xhash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xhash
;	COMDAT ??0?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@std@@QEAA@XZ PROC ; std::_Uhash_compare<long,std::hash<long>,std::equal_to<long> >::_Uhash_compare<long,std::hash<long>,std::equal_to<long> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory

; 1496 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	DWORD PTR [rcx], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xhash

; 132  :         : _Mypair(_Zero_then_variadic_args_t{}, _Zero_then_variadic_args_t{}, 0.0f) {}

	mov	rax, rcx
	ret	0
??0?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@std@@QEAA@XZ ENDP ; std::_Uhash_compare<long,std::hash<long>,std::equal_to<long> >::_Uhash_compare<long,std::hash<long>,std::equal_to<long> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocinfo
;	COMDAT ?_Tidy@?$_Yarn@_W@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$_Yarn@_W@std@@AEAAXXZ PROC			; std::_Yarn<wchar_t>::_Tidy, COMDAT

; 202  :     void __CLR_OR_THIS_CALL _Tidy() noexcept {

$LN9:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 203  :         if (_Myptr) {

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN5@Tidy

; 204  : #ifdef _DEBUG
; 205  :             _free_dbg(_Myptr, _CRT_BLOCK);
; 206  : #else
; 207  :             _CSTD free(_Myptr);

	call	free
$LN5@Tidy:

; 208  : #endif
; 209  :         }
; 210  : 
; 211  :         _Myptr = nullptr;
; 212  :     }

	mov	QWORD PTR [rbx], 0
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?_Tidy@?$_Yarn@_W@std@@AEAAXXZ ENDP			; std::_Yarn<wchar_t>::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocinfo
;	COMDAT ?_Tidy@?$_Yarn@D@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$_Yarn@D@std@@AEAAXXZ PROC			; std::_Yarn<char>::_Tidy, COMDAT

; 202  :     void __CLR_OR_THIS_CALL _Tidy() noexcept {

$LN9:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 203  :         if (_Myptr) {

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN5@Tidy

; 204  : #ifdef _DEBUG
; 205  :             _free_dbg(_Myptr, _CRT_BLOCK);
; 206  : #else
; 207  :             _CSTD free(_Myptr);

	call	free
$LN5@Tidy:

; 208  : #endif
; 209  :         }
; 210  : 
; 211  :         _Myptr = nullptr;
; 212  :     }

	mov	QWORD PTR [rbx], 0
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?_Tidy@?$_Yarn@D@std@@AEAAXXZ ENDP			; std::_Yarn<char>::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
_TEXT	SEGMENT
$T1 = 64
this$ = 64
_Ptr$ = 72
_Count$ = 80
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT

; 3307 :         _In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

$LN46:
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rcx
	mov	rsi, r8

; 3308 :         // append [_Ptr, _Ptr + _Count)
; 3309 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

	mov	rcx, QWORD PTR [rcx+16]

; 3310 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

	mov	r8, QWORD PTR [rdi+24]
	mov	rax, r8
	sub	rax, rcx
	cmp	rsi, rax
	ja	SHORT $LN2@append
	mov	QWORD PTR [rsp+72], rbx

; 3311 :             _ASAN_STRING_MODIFY(*this, _Old_size, _Old_size + _Count);
; 3312 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

	lea	rax, QWORD PTR [rcx+rsi]
	mov	QWORD PTR [rdi+16], rax

; 2226 :         value_type* _Result = _Bx._Buf;

	mov	rax, rdi

; 2244 :         return _Myres > _Small_string_capacity;

	cmp	r8, 15

; 2227 :         if (_Large_mode_engaged()) {

	jbe	SHORT $LN5@append

; 2228 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rax, QWORD PTR [rdi]
$LN5@append:

; 3313 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();
; 3314 :             _Traits::move(_Old_ptr + _Old_size, _Ptr, _Count);

	lea	rbx, QWORD PTR [rax+rcx]

; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	mov	r8, rsi
	mov	rcx, rbx
	call	memmove

; 3315 :             _Traits::assign(_Old_ptr[_Old_size + _Count], _Elem());

	mov	BYTE PTR [rbx+rsi], 0

; 3316 :             return *this;

	mov	rax, rdi
	mov	rbx, QWORD PTR [rsp+72]

; 3320 :             _Count,
; 3321 :             [](_Elem* const _New_ptr, const _Elem* const _Old_ptr, const size_type _Old_size, const _Elem* const _Ptr,
; 3322 :                 const size_type _Count) _STATIC_CALL_OPERATOR {
; 3323 :                 _Traits::copy(_New_ptr, _Old_ptr, _Old_size);
; 3324 :                 _Traits::copy(_New_ptr + _Old_size, _Ptr, _Count);
; 3325 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());
; 3326 :             },
; 3327 :             _Ptr, _Count);
; 3328 :     }

	mov	rsi, QWORD PTR [rsp+80]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
$LN2@append:

; 3317 :         }
; 3318 : 
; 3319 :         return _Reallocate_grow_by(

	movzx	r8d, BYTE PTR $T1[rsp]
	mov	r9, rdx
	mov	rdx, rsi
	mov	QWORD PTR [rsp+32], rsi
	mov	rcx, rdi
	call	??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append'::`2'::<lambda_1>,char const *,unsigned __int64>

; 3320 :             _Count,
; 3321 :             [](_Elem* const _New_ptr, const _Elem* const _Old_ptr, const size_type _Old_size, const _Elem* const _Ptr,
; 3322 :                 const size_type _Count) _STATIC_CALL_OPERATOR {
; 3323 :                 _Traits::copy(_New_ptr, _Old_ptr, _Old_size);
; 3324 :                 _Traits::copy(_New_ptr + _Old_size, _Ptr, _Count);
; 3325 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());
; 3326 :             },
; 3327 :             _Ptr, _Count);
; 3328 :     }

	mov	rsi, QWORD PTR [rsp+80]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring
;	COMDAT ??R<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@QEBD_K@Z@QEBA@QEAD0101@Z
_TEXT	SEGMENT
this$ = 48
_New_ptr$ = 56
_Old_ptr$ = 64
_Old_size$ = 72
_Ptr$ = 80
_Count$ = 88
??R<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@QEBD_K@Z@QEBA@QEAD0101@Z PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append'::`2'::<lambda_1>::operator(), COMDAT

; 3322 :                 const size_type _Count) _STATIC_CALL_OPERATOR {

$LN31:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rax, r8
	mov	rbx, rdx

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	rdx, rax
	mov	rcx, rbx
	mov	r8, r9

; 3322 :                 const size_type _Count) _STATIC_CALL_OPERATOR {

	mov	rdi, r9

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	call	memcpy
	mov	rdx, QWORD PTR _Ptr$[rsp]

; 3323 :                 _Traits::copy(_New_ptr, _Old_ptr, _Old_size);
; 3324 :                 _Traits::copy(_New_ptr + _Old_size, _Ptr, _Count);

	add	rdi, rbx

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	rbx, QWORD PTR _Count$[rsp]
	mov	rcx, rdi
	mov	r8, rbx
	call	memcpy

; 3325 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

	mov	BYTE PTR [rdi+rbx], 0

; 3326 :             },

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??R<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@QEBD_K@Z@QEBA@QEAD0101@Z ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append'::`2'::<lambda_1>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xhash
;	COMDAT ?_Max_bucket_size@?$_Hash@V?$_Umap_traits@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@V?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@$0A@@std@@@std@@IEAAAEAMXZ
_TEXT	SEGMENT
this$ = 8
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@V?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@$0A@@std@@@std@@IEAAAEAMXZ PROC ; std::_Hash<std::_Umap_traits<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Uhash_compare<long,std::hash<long>,std::equal_to<long> >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,0> >::_Max_bucket_size, COMDAT

; 1798 :         return _Traitsobj._Get_max_bucket_size();

	mov	rax, rcx

; 1799 :     }

	ret	0
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@V?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@$0A@@std@@@std@@IEAAAEAMXZ ENDP ; std::_Hash<std::_Umap_traits<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Uhash_compare<long,std::hash<long>,std::equal_to<long> >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,0> >::_Max_bucket_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\list
;	COMDAT ??0?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Al$dead$ = 56
??0?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@1@@Z PROC ; std::list<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::list<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >, COMDAT

; 802  :     explicit list(const _Alloc& _Al) : _Mypair(_One_then_variadic_args_t{}, _Al) {

$LN41:
	push	rbx
	sub	rsp, 32					; 00000020H

; 353  :     _List_val() noexcept : _Myhead(), _Mysize(0) {} // initialize data

	xor	eax, eax

; 802  :     explicit list(const _Alloc& _Al) : _Mypair(_One_then_variadic_args_t{}, _Al) {

	mov	rbx, rcx

; 353  :     _List_val() noexcept : _Myhead(), _Mysize(0) {} // initialize data

	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax

; 1838 :         auto _Newhead = _Al.allocate(1);

	mov	ecx, 288				; 00000120H
	call	??2@YAPEAX_K@Z				; operator new

; 1839 :         _Construct_in_place(_Newhead->_Next, _Newhead);

	mov	QWORD PTR [rax], rax

; 1840 :         _Construct_in_place(_Newhead->_Prev, _Newhead);

	mov	QWORD PTR [rax+8], rax

; 1841 :         _Mypair._Myval2._Myhead = _Newhead;

	mov	QWORD PTR [rbx], rax

; 803  :         _Alloc_sentinel_and_proxy();
; 804  :     }

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@1@@Z ENDP ; std::list<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::list<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\unordered_map
;	COMDAT ??0?$_Umap_traits@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@V?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@$0A@@std@@QEAA@AEBV?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@1@@Z
_TEXT	SEGMENT
this$ = 8
_Traits$ = 16
??0?$_Umap_traits@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@V?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@$0A@@std@@QEAA@AEBV?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@1@@Z PROC ; std::_Umap_traits<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Uhash_compare<long,std::hash<long>,std::equal_to<long> >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,0>::_Umap_traits<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Uhash_compare<long,std::hash<long>,std::equal_to<long> >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,0>, COMDAT

; 49   :     explicit _Umap_traits(const _Tr& _Traits) noexcept(is_nothrow_copy_constructible_v<_Tr>) : _Tr(_Traits) {}

	mov	eax, DWORD PTR [rdx]
	mov	DWORD PTR [rcx], eax
	mov	rax, rcx
	ret	0
??0?$_Umap_traits@JV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@V?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@2@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@$0A@@std@@QEAA@AEBV?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@1@@Z ENDP ; std::_Umap_traits<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Uhash_compare<long,std::hash<long>,std::equal_to<long> >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,0>::_Umap_traits<long,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Uhash_compare<long,std::hash<long>,std::equal_to<long> >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring
;	COMDAT ?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z
_TEXT	SEGMENT
_First1$ = 48
_First2$ = 56
_Count$ = 64
?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z PROC	; std::_Char_traits<char,int>::move, COMDAT

; 79   :         _In_reads_(_Count) const _Elem* const _First2, const size_t _Count) noexcept /* strengthened */ {

$LN34:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 80   :         // copy [_First2, _First2 + _Count) to [_First1, ...), allowing overlap
; 81   : #if _HAS_MEMCPY_MEMMOVE_INTRINSICS
; 82   :         __builtin_memmove(_First1, _First2, _Count * sizeof(_Elem));
; 83   : #else // ^^^ _HAS_MEMCPY_MEMMOVE_INTRINSICS / !_HAS_MEMCPY_MEMMOVE_INTRINSICS vvv
; 84   : #if _HAS_CXX20
; 85   :         if (_STD is_constant_evaluated()) {
; 86   :             // dest: [_First1, _First1 + _Count)
; 87   :             // src: [_First2, _First2 + _Count)
; 88   :             // We need to handle overlapping ranges.
; 89   :             // If _First1 is in the src range, we need a backward loop.
; 90   :             // Otherwise, the forward loop works (even if the back of dest overlaps the front of src).
; 91   : 
; 92   :             // Usually, we would compare pointers with less-than, even though they could belong to different arrays.
; 93   :             // However, we're not allowed to do that during constant evaluation, so we need a linear scan for equality.
; 94   :             bool _Loop_forward = true;
; 95   : 
; 96   :             for (const _Elem* _Src = _First2; _Src != _First2 + _Count; ++_Src) {
; 97   :                 if (_First1 == _Src) {
; 98   :                     _Loop_forward = false;
; 99   :                     break;
; 100  :                 }
; 101  :             }
; 102  : 
; 103  :             if (_Loop_forward) {
; 104  :                 for (size_t _Idx = 0; _Idx != _Count; ++_Idx) {
; 105  :                     _First1[_Idx] = _First2[_Idx];
; 106  :                 }
; 107  :             } else {
; 108  :                 for (size_t _Idx = _Count; _Idx != 0; --_Idx) {
; 109  :                     _First1[_Idx - 1] = _First2[_Idx - 1];
; 110  :                 }
; 111  :             }
; 112  : 
; 113  :             return _First1;
; 114  :         }
; 115  : #endif // _HAS_CXX20
; 116  : 
; 117  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	call	memmove

; 118  : #endif // ^^^ !_HAS_MEMCPY_MEMMOVE_INTRINSICS ^^^
; 119  : 
; 120  :         return _First1;

	mov	rax, rbx

; 121  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z ENDP	; std::_Char_traits<char,int>::move
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\list
;	COMDAT ?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@AEAAXXZ PROC ; std::list<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Alloc_sentinel_and_proxy, COMDAT

; 1834 :     void _Alloc_sentinel_and_proxy() {

$LN31:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 1835 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alnode, _Getal());
; 1836 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);
; 1837 :         auto& _Al     = _Getal();
; 1838 :         auto _Newhead = _Al.allocate(1);

	mov	ecx, 288				; 00000120H
	call	??2@YAPEAX_K@Z				; operator new

; 1839 :         _Construct_in_place(_Newhead->_Next, _Newhead);

	mov	QWORD PTR [rax], rax

; 1840 :         _Construct_in_place(_Newhead->_Prev, _Newhead);

	mov	QWORD PTR [rax+8], rax

; 1841 :         _Mypair._Myval2._Myhead = _Newhead;

	mov	QWORD PTR [rbx], rax

; 1842 :         _Proxy._Release();
; 1843 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@V?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@2@@std@@AEAAXXZ ENDP ; std::list<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Alloc_sentinel_and_proxy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xhash
;	COMDAT ?_Get_max_bucket_size@?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@std@@QEAAAEAMXZ
_TEXT	SEGMENT
this$ = 8
?_Get_max_bucket_size@?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@std@@QEAAAEAMXZ PROC ; std::_Uhash_compare<long,std::hash<long>,std::equal_to<long> >::_Get_max_bucket_size, COMDAT

; 156  :         return _Mypair._Myval2._Myval2;

	mov	rax, rcx

; 157  :     }

	ret	0
?_Get_max_bucket_size@?$_Uhash_compare@JU?$hash@J@std@@U?$equal_to@J@2@@std@@QEAAAEAMXZ ENDP ; std::_Uhash_compare<long,std::hash<long>,std::equal_to<long> >::_Get_max_bucket_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\type_traits
;	COMDAT ??$_Bit_cast@_KT_Addr_storage@error_category@std@@$0A@@std@@YA_KAEBT_Addr_storage@error_category@0@@Z
_TEXT	SEGMENT
_Val$ = 8
??$_Bit_cast@_KT_Addr_storage@error_category@std@@$0A@@std@@YA_KAEBT_Addr_storage@error_category@0@@Z PROC ; std::_Bit_cast<unsigned __int64,std::error_category::_Addr_storage,0>, COMDAT

; 2492 :     return __builtin_bit_cast(_To, _Val);

	mov	rax, QWORD PTR [rcx]

; 2493 : }

	ret	0
??$_Bit_cast@_KT_Addr_storage@error_category@std@@$0A@@std@@YA_KAEBT_Addr_storage@error_category@0@@Z ENDP ; std::_Bit_cast<unsigned __int64,std::error_category::_Addr_storage,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\system_error
;	COMDAT ??$_Immortalize_memcpy_image@V_Iostream_error_category2@std@@@std@@YAAEBV_Iostream_error_category2@0@XZ
_TEXT	SEGMENT
??$_Immortalize_memcpy_image@V_Iostream_error_category2@std@@@std@@YAAEBV_Iostream_error_category2@0@XZ PROC ; std::_Immortalize_memcpy_image<std::_Iostream_error_category2>, COMDAT

; 640  :     static constexpr _Ty _Static;
; 641  :     return _Static;

	lea	rax, OFFSET FLAT:?_Static@?1???$_Immortalize_memcpy_image@V_Iostream_error_category2@std@@@std@@YAAEBV_Iostream_error_category2@1@XZ@4V21@B ; `std::_Immortalize_memcpy_image<std::_Iostream_error_category2>'::`2'::_Static

; 642  : }

	ret	0
??$_Immortalize_memcpy_image@V_Iostream_error_category2@std@@@std@@YAAEBV_Iostream_error_category2@0@XZ ENDP ; std::_Immortalize_memcpy_image<std::_Iostream_error_category2>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xutility
;	COMDAT ??$_Adl_verify_range@PEBDPEBD@std@@YAXAEBQEBD0@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
??$_Adl_verify_range@PEBDPEBD@std@@YAXAEBQEBD0@Z PROC	; std::_Adl_verify_range<char const *,char const *>, COMDAT

; 1278 :     // check that [_First, _Last) forms an iterator range
; 1279 :     if constexpr (is_pointer_v<_Iter> && is_pointer_v<_Sentinel>) {
; 1280 : #if _ITERATOR_DEBUG_LEVEL != 0
; 1281 :         _STL_VERIFY(_First <= _Last, "transposed pointer range");
; 1282 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 1283 :     } else if constexpr (_Range_verifiable_v<_Iter, _Sentinel>) {
; 1284 :         _Verify_range(_First, _Last);
; 1285 :     }
; 1286 : }

	ret	0
??$_Adl_verify_range@PEBDPEBD@std@@YAXAEBQEBD0@Z ENDP	; std::_Adl_verify_range<char const *,char const *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale
;	COMDAT ??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z
_TEXT	SEGMENT
_Lock$1 = 32
_Lock$2 = 36
_Psave_guard$3 = 40
_Psave$4 = 40
__$ArrayPad$ = 48
_Loc$ = 96
??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z PROC ; std::use_facet<std::ctype<char> >, COMDAT

; 420  : const _Facet& __CRTDECL use_facet(const locale& _Loc) { // get facet reference from locale

$LN52:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	push	rsi
	push	rdi
	push	r14
	sub	rsp, 64					; 00000040H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	r14, rcx

; 421  :     _BEGIN_LOCK(_LOCK_LOCALE) // the thread lock, make get atomic

	xor	edx, edx
	lea	rcx, QWORD PTR _Lock$2[rsp]
	call	??0_Lockit@std@@QEAA@H@Z		; std::_Lockit::_Lockit
	npad	1

; 422  :     const locale::facet* _Psave = _Facetptr<_Facet>::_Psave; // static pointer to lazy facet

	mov	rbp, QWORD PTR ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PEBVfacet@locale@2@EB ; std::_Facetptr<std::ctype<char> >::_Psave
	mov	QWORD PTR _Psave$4[rsp], rbp

; 83   :             if (_Id == 0) { // still zero, allocate stamp

	mov	rdi, QWORD PTR ?id@?$ctype@D@std@@2V0locale@2@A ; std::ctype<char>::id
	test	rdi, rdi
	jne	SHORT $LN11@use_facet

; 84   :                 _BEGIN_LOCK(_LOCK_LOCALE)

	xor	edx, edx
	lea	rcx, QWORD PTR _Lock$1[rsp]
	call	??0_Lockit@std@@QEAA@H@Z		; std::_Lockit::_Lockit

; 85   :                 if (_Id == 0) {

	cmp	QWORD PTR ?id@?$ctype@D@std@@2V0locale@2@A, rdi ; std::ctype<char>::id
	jne	SHORT $LN12@use_facet

; 86   :                     _Id = static_cast<size_t>(++_Id_cnt);

	mov	eax, DWORD PTR ?_Id_cnt@id@locale@std@@0HA ; std::locale::id::_Id_cnt
	inc	eax
	mov	DWORD PTR ?_Id_cnt@id@locale@std@@0HA, eax ; std::locale::id::_Id_cnt
	cdqe
	mov	QWORD PTR ?id@?$ctype@D@std@@2V0locale@2@A, rax ; std::ctype<char>::id
$LN12@use_facet:

; 87   :                 }
; 88   :                 _END_LOCK()

	lea	rcx, QWORD PTR _Lock$1[rsp]
	call	??1_Lockit@std@@QEAA@XZ			; std::_Lockit::~_Lockit
	mov	rdi, QWORD PTR ?id@?$ctype@D@std@@2V0locale@2@A ; std::ctype<char>::id
$LN11@use_facet:

; 363  :         const facet* _Facptr = _Id < _Ptr->_Facetcount ? _Ptr->_Facetvec[_Id] : nullptr; // null if id off end

	mov	rcx, QWORD PTR [r14+8]
	lea	rsi, QWORD PTR [rdi*8]
	cmp	rdi, QWORD PTR [rcx+24]
	jae	SHORT $LN19@use_facet
	mov	rax, QWORD PTR [rcx+16]
	mov	rbx, QWORD PTR [rsi+rax]

; 364  :         if (_Facptr || !_Ptr->_Xparent) {

	test	rbx, rbx
	jne	SHORT $LN42@use_facet
	jmp	SHORT $LN45@use_facet
$LN19@use_facet:

; 89   :             }
; 90   :             return _Id;
; 91   :         }
; 92   : 
; 93   :     private:
; 94   :         size_t _Id; // the identifier stamp
; 95   : 
; 96   :         __PURE_APPDOMAIN_GLOBAL static int _Id_cnt;
; 97   :     };
; 98   : 
; 99   :     struct _Facet_guard;
; 100  : 
; 101  :     class _CRTIMP2_PURE_IMPORT facet : public _Facet_base, public _Crt_new_delete {
; 102  :         // base class for all locale facets, performs reference counting
; 103  :     private:
; 104  :         friend _Facet_guard;
; 105  : 
; 106  :     public:
; 107  :         static size_t __CLRCALL_OR_CDECL _Getcat(const facet** = nullptr, const locale* = nullptr) {
; 108  :             // get category value, or -1 if no corresponding C category
; 109  :             return static_cast<size_t>(-1);
; 110  :         }
; 111  : 
; 112  :         void __CLR_OR_THIS_CALL _Incref() noexcept override { // increment use count
; 113  :             _MT_INCR(_Myrefs);
; 114  :         }
; 115  : 
; 116  :         _Facet_base* __CLR_OR_THIS_CALL _Decref() noexcept override { // decrement use count
; 117  :             if (_MT_DECR(_Myrefs) == 0) {
; 118  :                 return this;
; 119  :             }
; 120  : 
; 121  :             return nullptr;
; 122  :         }
; 123  : 
; 124  :     private:
; 125  :         _Atomic_counter_t _Myrefs; // the reference count
; 126  : 
; 127  :     protected:
; 128  :         explicit __CLR_OR_THIS_CALL facet(size_t _Initrefs = 0) noexcept // strengthened
; 129  :             : _Myrefs(static_cast<_Atomic_counter_t>(_Initrefs)) // non-atomic initialization
; 130  :         {}
; 131  : 
; 132  :         __CLR_OR_THIS_CALL ~facet() noexcept override {}
; 133  : 
; 134  :     public:
; 135  :         __CLR_OR_THIS_CALL facet(const facet&)            = delete;
; 136  :         facet& __CLR_OR_THIS_CALL operator=(const facet&) = delete;
; 137  :     };
; 138  : 
; 139  :     struct _NODISCARD _Facet_guard {
; 140  :         facet* _Target;
; 141  :         ~_Facet_guard() {
; 142  :             if (_Target) {
; 143  :                 delete _Target->_Decref();
; 144  :             }
; 145  :         }
; 146  :     };
; 147  : 
; 148  :     class _CRTIMP2_PURE_IMPORT _Locimp : public facet { // reference-counted actual implementation of a locale
; 149  :     protected:
; 150  :         __CLR_OR_THIS_CALL ~_Locimp() noexcept {
; 151  :             _Locimp_dtor(this);
; 152  :         }
; 153  : 
; 154  :     private:
; 155  :         static _Locimp* __CLRCALL_PURE_OR_CDECL _New_Locimp(bool _Transparent = false);
; 156  :         static _Locimp* __CLRCALL_PURE_OR_CDECL _New_Locimp(const _Locimp& _Right);
; 157  : 
; 158  :         static void __CLRCALL_PURE_OR_CDECL _Locimp_dtor(_Locimp*);
; 159  :         static void __CLRCALL_PURE_OR_CDECL _Locimp_Addfac(_Locimp*, facet*, size_t); // add a facet
; 160  :         static void __CLRCALL_PURE_OR_CDECL _Locimp_ctor(_Locimp*, const _Locimp&);
; 161  : 
; 162  :         friend locale;
; 163  : 
; 164  :         __CLR_OR_THIS_CALL _Locimp(bool _Transparent)
; 165  :             : locale::facet(1), _Facetvec(nullptr), _Facetcount(0), _Catmask(none), _Xparent(_Transparent), _Name("*") {
; 166  :         }
; 167  : 
; 168  :         __CLR_OR_THIS_CALL _Locimp(const _Locimp& _Right)
; 169  :             : locale::facet(1), _Facetvec(nullptr), _Facetcount(_Right._Facetcount), _Catmask(_Right._Catmask),
; 170  :               _Xparent(_Right._Xparent), _Name(_Right._Name.c_str()) {
; 171  :             _Locimp_ctor(this, _Right);
; 172  :         }
; 173  : 
; 174  :         void __CLR_OR_THIS_CALL _Addfac(facet* _Pfacet, size_t _Id) { // add a facet
; 175  :             _Locimp_Addfac(this, _Pfacet, _Id);
; 176  :         }
; 177  : 
; 178  :         static _Locimp* __CLRCALL_OR_CDECL _Makeloc(
; 179  :             const _Locinfo&, category, _Locimp*, const locale*); // make essential facets
; 180  : 
; 181  :         static void __CLRCALL_OR_CDECL _Makewloc(
; 182  :             const _Locinfo&, category, _Locimp*, const locale*); // make wchar_t facets
; 183  : 
; 184  : #if defined(_NATIVE_WCHAR_T_DEFINED) && !_ENFORCE_FACET_SPECIALIZATIONS
; 185  :         static void __CLRCALL_OR_CDECL _Makeushloc(
; 186  :             const _Locinfo&, category, _Locimp*, const locale*); // make ushort facets
; 187  : #endif // defined(_NATIVE_WCHAR_T_DEFINED) && !_ENFORCE_FACET_SPECIALIZATIONS
; 188  : 
; 189  :         static void __CLRCALL_OR_CDECL _Makexloc(
; 190  :             const _Locinfo&, category, _Locimp*, const locale*); // make remaining facets
; 191  : 
; 192  :         facet** _Facetvec; // pointer to vector of facets
; 193  :         size_t _Facetcount; // size of vector of facets
; 194  :         category _Catmask; // mask describing implemented categories
; 195  :         bool _Xparent; // true if locale is transparent
; 196  :         _Yarn<char> _Name; // locale name, or "*" if not known
; 197  : 
; 198  :         __PURE_APPDOMAIN_GLOBAL static _Locimp* _Clocptr;
; 199  : 
; 200  :     public:
; 201  :         _Locimp& __CLR_OR_THIS_CALL operator=(const _Locimp&) = delete;
; 202  :     };
; 203  : 
; 204  :     template <class _Elem, class _Traits, class _Alloc>
; 205  :     bool operator()(
; 206  :         const basic_string<_Elem, _Traits, _Alloc>& _Left, const basic_string<_Elem, _Traits, _Alloc>& _Right) const {
; 207  :         // compare _Left and _Right strings using collate facet in locale
; 208  :         const auto& _Coll_fac = _STD use_facet<_STD collate<_Elem>>(*this);
; 209  : 
; 210  :         const _Elem* const _Left_data  = _Left.data();
; 211  :         const _Elem* const _Right_data = _Right.data();
; 212  :         return _Coll_fac.compare(_Left_data, _Left_data + _Left.size(), _Right_data, _Right_data + _Right.size()) < 0;
; 213  :     }
; 214  : 
; 215  :     template <class _Facet>
; 216  :     locale combine(const locale& _Loc) const { // combine two locales
; 217  :         _Facet* _Facptr;
; 218  : 
; 219  :         _TRY_BEGIN
; 220  :         _Facptr = const_cast<_Facet*>(_STD addressof(_STD use_facet<_Facet>(_Loc)));
; 221  :         _CATCH_ALL
; 222  :         _Xruntime_error("locale::combine facet missing");
; 223  :         _CATCH_END
; 224  : 
; 225  :         _Locimp* _Newimp = _Locimp::_New_Locimp(*_Ptr);
; 226  :         _Newimp->_Addfac(_Facptr, _Facet::id);
; 227  :         _Newimp->_Catmask = none;
; 228  :         _Newimp->_Name    = "*";
; 229  :         return locale{_Secret_locale_construct_tag{}, _Newimp};
; 230  :     }
; 231  : 
; 232  :     template <class _Facet>
; 233  :     locale(const locale& _Loc, const _Facet* _Facptr) : _Ptr(_Locimp::_New_Locimp(*_Loc._Ptr)) {
; 234  :         if (_Facptr) { // replace facet
; 235  :             _Ptr->_Addfac(const_cast<_Facet*>(_Facptr), _Facet::id);
; 236  :             _Ptr->_Catmask = none;
; 237  :             _Ptr->_Name    = "*";
; 238  :         }
; 239  :     }
; 240  : 
; 241  : #pragma warning(push)
; 242  : #pragma warning(disable : 26495) // Variable 'std::locale::_Ptr' is uninitialized.
; 243  :                                  // Always initialize a member variable (type.6).
; 244  : 
; 245  :     // We must not explicitly initialize _Ptr here; we rely on it maintaining the value
; 246  :     // previously created in its storage. To be precise:
; 247  :     // In locale0.cpp, locale::_Init() uses True Placement New at classic_locale's address,
; 248  :     // and classic_locale is constructed from the _Noinit enumerator of type _Uninitialized.
; 249  :     // The sequencing is highly unusual; the True Placement New happens before the _Uninitialized construction,
; 250  :     // so while _Ptr here formally has indeterminate value, we expect it to actually keep the previous value.
; 251  :     locale(_Uninitialized) {} // defer construction
; 252  : #pragma warning(pop)
; 253  : 
; 254  :     locale(const locale& _Right) noexcept : _Ptr(_Right._Ptr) {
; 255  :         _Ptr->_Incref();
; 256  :     }
; 257  : 
; 258  :     locale() noexcept : _Ptr(_Init(true)) {}
; 259  : 
; 260  : #if !defined(MRTDLL) || !defined(_CRTBLD)
; 261  :     locale(const locale& _Loc, const locale& _Other, category _Cat) : _Ptr(_Locimp::_New_Locimp(*_Loc._Ptr)) {
; 262  :         // construct a locale by copying named facets
; 263  :         if (_Cat != none) { // worth adding, do it
; 264  :             _STL_ASSERT((_Cat & all) == _Cat, "the bitmask value specifying category must be valid");
; 265  :             _Facet_guard _Guard{_Ptr};
; 266  :             _BEGIN_LOCINFO(_Lobj)
; 267  :             _Locimp::_Makeloc(_Lobj, _Cat, _Ptr, &_Other);
; 268  :             _Lobj._Addcats(_Loc._Ptr->_Catmask, _Loc.name().c_str());
; 269  :             _Lobj._Addcats(_Other._Ptr->_Catmask, _Other.name().c_str());
; 270  :             _Ptr->_Catmask = _Loc._Ptr->_Catmask | _Other._Ptr->_Catmask;
; 271  :             _Ptr->_Name    = _Lobj._Getname();
; 272  :             _END_LOCINFO()
; 273  :             _Guard._Target = nullptr;
; 274  :         }
; 275  :     }
; 276  : 
; 277  : private:
; 278  :     void _Construct(const string& _Str, category _Cat) {
; 279  :         _STL_ASSERT((_Cat & all) == _Cat, "the bitmask value specifying category must be valid");
; 280  :         // construct a locale with named facets
; 281  :         bool _Bad = false;
; 282  :         _Init();
; 283  :         if (_Cat != none) { // worth adding, do it
; 284  :             _Facet_guard _Guard{_Ptr};
; 285  :             _BEGIN_LOCINFO(_Lobj(_Cat, _Str.c_str()))
; 286  :             if (_Badname(_Lobj)) {
; 287  :                 _Bad = true;
; 288  :             } else { // name okay, build the locale
; 289  :                 _Locimp::_Makeloc(_Lobj, _Cat, _Ptr, nullptr);
; 290  :                 _Ptr->_Catmask = _Cat;
; 291  :                 _Ptr->_Name    = _Str.c_str();
; 292  :             }
; 293  :             _END_LOCINFO()
; 294  :             _Guard._Target = nullptr;
; 295  :         }
; 296  : 
; 297  :         if (_Bad) { // Don't throw within _BEGIN_LOCINFO if we can avoid it
; 298  :             delete _Ptr->_Decref();
; 299  :             _Xruntime_error("bad locale name");
; 300  :         }
; 301  :     }
; 302  : 
; 303  : public:
; 304  :     explicit locale(const char* _Locname, category _Cat = all) : _Ptr(_Locimp::_New_Locimp()) {
; 305  :         // construct a locale with named facets
; 306  :         // _Locname might have been returned from setlocale().
; 307  :         // Therefore, _Construct() takes const string&.
; 308  :         if (_Locname) {
; 309  :             _Construct(_Locname, _Cat);
; 310  :             return;
; 311  :         }
; 312  : 
; 313  :         _Xruntime_error("bad locale name");
; 314  :     }
; 315  : 
; 316  :     locale(const locale& _Loc, const char* _Locname, category _Cat) : _Ptr(_Locimp::_New_Locimp(*_Loc._Ptr)) {
; 317  :         // construct a locale by copying, replacing named facets
; 318  :         // _Locname might have been returned from setlocale().
; 319  :         // Therefore, _Construct() takes const string&.
; 320  :         if (_Locname) {
; 321  :             _Construct(_Locname, _Cat);
; 322  :             return;
; 323  :         }
; 324  : 
; 325  :         _Xruntime_error("bad locale name");
; 326  :     }
; 327  : 
; 328  :     explicit locale(const string& _Str, category _Cat = all) : _Ptr(_Locimp::_New_Locimp()) {
; 329  :         // construct a locale with named facets
; 330  :         _Construct(_Str, _Cat);
; 331  :     }
; 332  : 
; 333  :     locale(const locale& _Loc, const string& _Str, category _Cat) : _Ptr(_Locimp::_New_Locimp(*_Loc._Ptr)) {
; 334  :         // construct a locale by copying, replacing named facets
; 335  :         _Construct(_Str, _Cat);
; 336  :     }
; 337  : #endif // !MRTDLL || !_CRTBLD
; 338  : 
; 339  :     ~locale() noexcept {
; 340  :         if (_Ptr) {
; 341  :             delete _Ptr->_Decref();
; 342  :         }
; 343  :     }
; 344  : 
; 345  :     const locale& operator=(const locale& _Right) noexcept {
; 346  :         if (_Ptr != _Right._Ptr) { // different implementation, point at new one
; 347  :             delete _Ptr->_Decref();
; 348  :             _Ptr = _Right._Ptr;
; 349  :             _Ptr->_Incref();
; 350  :         }
; 351  :         return *this;
; 352  :     }
; 353  : 
; 354  :     string name() const {
; 355  :         return _Ptr ? _Ptr->_Name.c_str() : string{};
; 356  :     }
; 357  : 
; 358  :     _Ret_z_ const char* _C_str() const noexcept {
; 359  :         return _Ptr ? _Ptr->_Name.c_str() : "";
; 360  :     }
; 361  : 
; 362  :     const facet* _Getfacet(size_t _Id) const { // look up a facet in locale object
; 363  :         const facet* _Facptr = _Id < _Ptr->_Facetcount ? _Ptr->_Facetvec[_Id] : nullptr; // null if id off end

	xor	ebx, ebx
$LN45@use_facet:

; 364  :         if (_Facptr || !_Ptr->_Xparent) {

	cmp	BYTE PTR [rcx+36], 0
	je	SHORT $LN14@use_facet

; 365  :             return _Facptr; // found facet or not transparent
; 366  :         }
; 367  : 
; 368  :         // look in current locale
; 369  :         locale::_Locimp* _Ptr0 = _Getgloballocale();

	call	?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ ; std::locale::_Getgloballocale

; 370  :         if (_Id < _Ptr0->_Facetcount) {

	cmp	rdi, QWORD PTR [rax+24]
	jae	SHORT $LN46@use_facet

; 371  :             return _Ptr0->_Facetvec[_Id]; // get from current locale

	mov	rax, QWORD PTR [rax+16]
	mov	rbx, QWORD PTR [rsi+rax]
$LN14@use_facet:

; 423  : 
; 424  :     const size_t _Id         = _Facet::id;
; 425  :     const locale::facet* _Pf = _Loc._Getfacet(_Id);
; 426  : 
; 427  :     if (!_Pf) {

	test	rbx, rbx
	jne	SHORT $LN42@use_facet
$LN46@use_facet:

; 428  :         if (_Psave) {

	test	rbp, rbp
	je	SHORT $LN3@use_facet

; 429  :             _Pf = _Psave; // lazy facet already allocated

	mov	rbx, rbp
	jmp	SHORT $LN42@use_facet
$LN3@use_facet:

; 430  :         } else if (_Facet::_Getcat(&_Psave, &_Loc) == static_cast<size_t>(-1)) {

	mov	rdx, r14
	lea	rcx, QWORD PTR _Psave$4[rsp]
	call	?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z ; std::ctype<char>::_Getcat
	cmp	rax, -1
	je	SHORT $LN50@use_facet
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory

; 1496 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	rbx, QWORD PTR _Psave$4[rsp]
	mov	QWORD PTR _Psave_guard$3[rsp], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale

; 443  :             _Facet_Register(_Pfmod);

	mov	rcx, rbx
	call	?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z ; std::_Facet_Register

; 444  : #endif // ^^^ !defined(_M_CEE) ^^^
; 445  : 
; 446  :             _Pfmod->_Incref();

	mov	rdx, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rdx+8]

; 447  :             _Facetptr<_Facet>::_Psave = _Psave;

	mov	QWORD PTR ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PEBVfacet@locale@2@EB, rbx ; std::_Facetptr<std::ctype<char> >::_Psave
$LN42@use_facet:

; 448  :             _Pf                       = _Psave;
; 449  : 
; 450  :             (void) _Psave_guard.release();
; 451  :         }
; 452  :     }
; 453  : 
; 454  :     return static_cast<const _Facet&>(*_Pf); // should be dynamic_cast

	lea	rcx, QWORD PTR _Lock$2[rsp]
	call	??1_Lockit@std@@QEAA@XZ			; std::_Lockit::~_Lockit
	mov	rax, rbx

; 455  :     _END_LOCK()
; 456  : } // end of use_facet body

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+104]
	mov	rbp, QWORD PTR [rsp+112]
	add	rsp, 64					; 00000040H
	pop	r14
	pop	rdi
	pop	rsi
	ret	0
$LN50@use_facet:

; 431  : #if _HAS_EXCEPTIONS
; 432  :             _Throw_bad_cast(); // lazy disallowed

	call	?_Throw_bad_cast@std@@YAXXZ		; std::_Throw_bad_cast
	npad	1
$LN47@use_facet:
??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z ENDP ; std::use_facet<std::ctype<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Lock$1 = 32
_Lock$2 = 36
_Psave_guard$3 = 40
_Psave$4 = 40
__$ArrayPad$ = 48
_Loc$ = 96
?dtor$0@?0???$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<std::ctype<char> >'::`1'::dtor$0
	lea	rcx, QWORD PTR _Lock$2[rdx]
	jmp	??1_Lockit@std@@QEAA@XZ			; std::_Lockit::~_Lockit
?dtor$0@?0???$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<std::ctype<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Lock$1 = 32
_Lock$2 = 36
_Psave_guard$3 = 40
_Psave$4 = 40
__$ArrayPad$ = 48
_Loc$ = 96
?dtor$1@?0???$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<std::ctype<char> >'::`1'::dtor$1
	lea	rcx, QWORD PTR _Psave_guard$3[rdx]
	jmp	??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >
?dtor$1@?0???$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<std::ctype<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xutility
;	COMDAT ??$_Adl_verify_range@PEADPEBD@std@@YAXAEBQEADAEBQEBD@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
??$_Adl_verify_range@PEADPEBD@std@@YAXAEBQEADAEBQEBD@Z PROC ; std::_Adl_verify_range<char *,char const *>, COMDAT

; 1278 :     // check that [_First, _Last) forms an iterator range
; 1279 :     if constexpr (is_pointer_v<_Iter> && is_pointer_v<_Sentinel>) {
; 1280 : #if _ITERATOR_DEBUG_LEVEL != 0
; 1281 :         _STL_VERIFY(_First <= _Last, "transposed pointer range");
; 1282 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 1283 :     } else if constexpr (_Range_verifiable_v<_Iter, _Sentinel>) {
; 1284 :         _Verify_range(_First, _Last);
; 1285 :     }
; 1286 : }

	ret	0
??$_Adl_verify_range@PEADPEBD@std@@YAXAEBQEADAEBQEBD@Z ENDP ; std::_Adl_verify_range<char *,char const *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\streambuf
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\streambuf
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\streambuf
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\streambuf
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\streambuf
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\streambuf
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\streambuf
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ios
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream
;	COMDAT ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
_TEXT	SEGMENT
_Ok$ = 32
$T1 = 48
$T2 = 64
_Ostr$dead$ = 160
_Val$dead$ = 168
_State$ = 168
_Ostr$ = 176
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z PROC ; std::operator<<<std::char_traits<char> >, COMDAT

; 774  : basic_ostream<char, _Traits>& operator<<(basic_ostream<char, _Traits>& _Ostr, const char* _Val) {

$LN151:
	mov	QWORD PTR [rsp+32], rbx
	mov	QWORD PTR [rsp+16], rdx
	push	rsi
	push	rdi
	push	r12
	push	r14
	push	r15
	sub	rsp, 112				; 00000070H
	lea	rsi, OFFSET FLAT:?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cout
	mov	r12, rsi
	mov	QWORD PTR _Ostr$[rsp], rsi

; 775  :     // insert NTBS into char stream
; 776  :     using _Elem = char;
; 777  :     using _Myos = basic_ostream<_Elem, _Traits>;
; 778  : 
; 779  :     ios_base::iostate _State = ios_base::goodbit;

	xor	r15d, r15d
	mov	ebx, r15d
	mov	DWORD PTR _State$[rsp], ebx

; 780  :     streamsize _Count        = static_cast<streamsize>(_Traits::length(_Val));
; 781  :     streamsize _Pad          = _Ostr.width() <= 0 || _Ostr.width() <= _Count ? 0 : _Ostr.width() - _Count;

	mov	rcx, QWORD PTR ?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	movsxd	rdx, DWORD PTR [rcx+4]
	mov	rdi, QWORD PTR [rdx+rsi+40]
	cmp	rdi, 18
	jl	SHORT $LN17@operator
	add	rdi, -17
	jmp	SHORT $LN18@operator
$LN17@operator:
	mov	rdi, r15
$LN18@operator:

; 75   :         __CLR_OR_THIS_CALL _Sentry_base(basic_ostream& _Ostr) : _Myostr(_Ostr) { // lock the stream buffer, if there

	mov	r14, rsi
	mov	QWORD PTR _Ok$[rsp], rsi

; 76   :             const auto _Rdbuf = _Myostr.rdbuf();

	mov	rdx, QWORD PTR [rdx+rsi+72]

; 77   :             if (_Rdbuf) {

	test	rdx, rdx
	je	SHORT $LN108@operator

; 78   :                 _Rdbuf->_Lock();

	mov	rax, QWORD PTR [rdx]
	mov	rcx, rdx
	call	QWORD PTR [rax+8]
	mov	rcx, QWORD PTR ?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
$LN108@operator:

; 97   :             if (!_Ostr.good()) {

	movsxd	rax, DWORD PTR [rcx+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase

; 206  :         return rdstate() == ios_base::goodbit;

	cmp	DWORD PTR [rax+rsi+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream

; 97   :             if (!_Ostr.good()) {

	je	SHORT $LN102@operator

; 98   :                 _Ok = false;

	xor	al, al

; 99   :                 return;

	jmp	SHORT $LN145@operator
$LN102@operator:

; 100  :             }
; 101  : 
; 102  :             const auto _Tied = _Ostr.tie();

	mov	rax, QWORD PTR [rax+rsi+80]

; 103  :             if (!_Tied || _Tied == &_Ostr) {

	test	rax, rax
	je	SHORT $LN104@operator
	cmp	rax, rsi
	je	SHORT $LN104@operator

; 105  :                 return;
; 106  :             }
; 107  : 
; 108  :             _Tied->flush();

	mov	rcx, rax
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush

; 109  :             _Ok = _Ostr.good(); // store test only after flushing tie

	mov	rcx, QWORD PTR ?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	movsxd	rax, DWORD PTR [rcx+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase

; 206  :         return rdstate() == ios_base::goodbit;

	cmp	DWORD PTR [rax+rsi+16], 0
	sete	al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream

; 109  :             _Ok = _Ostr.good(); // store test only after flushing tie

	jmp	SHORT $LN145@operator
$LN104@operator:

; 104  :                 _Ok = true;

	mov	al, 1
$LN145@operator:

; 110  :         }

	mov	BYTE PTR _Ok$[rsp+8], al
	mov	rdx, rcx

; 782  :     const typename _Myos::sentry _Ok(_Ostr);
; 783  : 
; 784  :     if (!_Ok) {

	test	al, al
	jne	SHORT $LN8@operator

; 785  :         _State |= ios_base::badbit;

	mov	edx, 4
	mov	ebx, edx

; 786  :     } else { // state okay, insert

	jmp	$LN22@operator
$LN8@operator:

; 787  :         _TRY_IO_BEGIN
; 788  :         if ((_Ostr.flags() & ios_base::adjustfield) != ios_base::left) {

	movsxd	rax, DWORD PTR [rdx+4]
	mov	eax, DWORD PTR [rax+rsi+24]
	and	eax, 448				; 000001c0H
	cmp	eax, 64					; 00000040H
	je	SHORT $LN136@operator
	npad	4
$LL4@operator:

; 789  :             for (; 0 < _Pad; --_Pad) { // pad on left

	test	rdi, rdi
	jle	SHORT $LN136@operator

; 790  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

	movsxd	rax, DWORD PTR [rcx+4]
	mov	rcx, QWORD PTR [rax+rsi+72]
	movzx	r8d, BYTE PTR [rax+rsi+88]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\streambuf

; 261  :         return *_IPnext ? *_IPcount : 0;

	mov	rax, QWORD PTR [rcx+64]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN77@operator
	mov	rdx, QWORD PTR [rcx+88]
	mov	eax, DWORD PTR [rdx]

; 166  :         return 0 < _Pnavail() ? _Traits::to_int_type(*_Pninc() = _Ch) : overflow(_Traits::to_int_type(_Ch));

	test	eax, eax
	jle	SHORT $LN77@operator

; 256  :         --*_IPcount;

	dec	eax
	mov	DWORD PTR [rdx], eax

; 257  :         return (*_IPnext)++;

	mov	rcx, QWORD PTR [rcx+64]
	mov	rdx, QWORD PTR [rcx]
	lea	rax, QWORD PTR [rdx+1]
	mov	QWORD PTR [rcx], rax

; 166  :         return 0 < _Pnavail() ? _Traits::to_int_type(*_Pninc() = _Ch) : overflow(_Traits::to_int_type(_Ch));

	mov	BYTE PTR [rdx], r8b
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring

; 460  :         return static_cast<unsigned char>(_Ch);

	mov	eax, r8d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\streambuf

; 166  :         return 0 < _Pnavail() ? _Traits::to_int_type(*_Pninc() = _Ch) : overflow(_Traits::to_int_type(_Ch));

	jmp	SHORT $LN78@operator
$LN77@operator:
	mov	rax, QWORD PTR [rcx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring

; 460  :         return static_cast<unsigned char>(_Ch);

	mov	edx, r8d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\streambuf

; 166  :         return 0 < _Pnavail() ? _Traits::to_int_type(*_Pninc() = _Ch) : overflow(_Traits::to_int_type(_Ch));

	call	QWORD PTR [rax+24]
$LN78@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring

; 464  :         return _Left == _Right;

	cmp	eax, -1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream

; 790  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

	jne	SHORT $LN2@operator

; 791  :                     _State |= ios_base::badbit; // insertion failed, quit

	mov	edx, 4
	mov	ebx, edx
	mov	DWORD PTR _State$[rsp], edx

; 792  :                     break;

	jmp	$LN6@operator
$LN2@operator:

; 789  :             for (; 0 < _Pad; --_Pad) { // pad on left

	dec	rdi
	mov	rcx, QWORD PTR ?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	jmp	SHORT $LL4@operator
$LN136@operator:

; 797  :         if (_State == ios_base::goodbit && _Ostr.rdbuf()->sputn(_Val, _Count) != _Count) {

	movsxd	rax, DWORD PTR [rcx+4]
	mov	rcx, QWORD PTR [rax+rsi+72]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\streambuf

; 171  :         return xsputn(_Ptr, _Count);

	mov	rax, QWORD PTR [rcx]
	mov	r8d, 17
	lea	rdx, OFFSET FLAT:??_C@_0BC@LCLEKDHB@Client?5connected?$CB@
	call	QWORD PTR [rax+72]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream

; 797  :         if (_State == ios_base::goodbit && _Ostr.rdbuf()->sputn(_Val, _Count) != _Count) {

	cmp	rax, 17
	jne	SHORT $LN146@operator
$LL141@operator:

; 798  :             _State |= ios_base::badbit;
; 799  :         }
; 800  : 
; 801  :         if (_State == ios_base::goodbit) {
; 802  :             for (; 0 < _Pad; --_Pad) { // pad on right

	test	rdi, rdi
	jle	SHORT $LN142@operator

; 803  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

	mov	rax, QWORD PTR ?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	movsxd	rcx, DWORD PTR [rax+4]
	mov	r8, QWORD PTR [rcx+rsi+72]
	movzx	r9d, BYTE PTR [rcx+rsi+88]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\streambuf

; 261  :         return *_IPnext ? *_IPcount : 0;

	mov	rax, QWORD PTR [r8+64]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN56@operator
	mov	rcx, QWORD PTR [r8+88]
	mov	eax, DWORD PTR [rcx]

; 166  :         return 0 < _Pnavail() ? _Traits::to_int_type(*_Pninc() = _Ch) : overflow(_Traits::to_int_type(_Ch));

	test	eax, eax
	jle	SHORT $LN56@operator

; 256  :         --*_IPcount;

	dec	eax
	mov	DWORD PTR [rcx], eax

; 257  :         return (*_IPnext)++;

	mov	rcx, QWORD PTR [r8+64]
	mov	rdx, QWORD PTR [rcx]
	lea	rax, QWORD PTR [rdx+1]
	mov	QWORD PTR [rcx], rax

; 166  :         return 0 < _Pnavail() ? _Traits::to_int_type(*_Pninc() = _Ch) : overflow(_Traits::to_int_type(_Ch));

	mov	BYTE PTR [rdx], r9b
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring

; 460  :         return static_cast<unsigned char>(_Ch);

	mov	eax, r9d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\streambuf

; 166  :         return 0 < _Pnavail() ? _Traits::to_int_type(*_Pninc() = _Ch) : overflow(_Traits::to_int_type(_Ch));

	jmp	SHORT $LN57@operator
$LN56@operator:
	mov	rax, QWORD PTR [r8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring

; 460  :         return static_cast<unsigned char>(_Ch);

	mov	edx, r9d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\streambuf

; 166  :         return 0 < _Pnavail() ? _Traits::to_int_type(*_Pninc() = _Ch) : overflow(_Traits::to_int_type(_Ch));

	mov	rcx, r8
	call	QWORD PTR [rax+24]
$LN57@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring

; 464  :         return _Left == _Right;

	cmp	eax, -1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream

; 803  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

	je	SHORT $LN146@operator

; 798  :             _State |= ios_base::badbit;
; 799  :         }
; 800  : 
; 801  :         if (_State == ios_base::goodbit) {
; 802  :             for (; 0 < _Pad; --_Pad) { // pad on right

	dec	rdi
	jmp	SHORT $LL141@operator
$LN146@operator:

; 804  :                     _State |= ios_base::badbit; // insertion failed, quit
; 805  :                     break;
; 806  :                 }
; 807  :             }
; 808  :         }
; 809  : 
; 810  :         _Ostr.width(0);

	or	ebx, 4
	mov	DWORD PTR _State$[rsp], ebx
$LN142@operator:
	mov	edx, 4
$LN6@operator:
	mov	rax, QWORD PTR ?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	movsxd	rcx, DWORD PTR [rax+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase

; 284  :         _Wide                      = _Newwidth;

	mov	QWORD PTR [rcx+rsi+40], r15
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream
	jmp	SHORT $LN147@operator
$LN23@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase
	lea	rsi, OFFSET FLAT:?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::cout
	xor	r15d, r15d
	mov	edx, 4
	mov	r12, QWORD PTR _Ostr$[rsp]
	mov	ebx, DWORD PTR _State$[rsp]
	mov	r14, QWORD PTR _Ok$[rsp]
$LN147@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream

; 814  :     _Ostr.setstate(_State);

	mov	rcx, QWORD PTR ?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
$LN22@operator:
	movsxd	rax, DWORD PTR [rcx+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ios

; 51   :         clear(rdstate() | _State, _Reraise);

	or	ebx, DWORD PTR [rax+rsi+16]

; 40   :         ios_base::clear(_State | (_Mystrbuf ? ios_base::goodbit : ios_base::badbit), _Reraise);

	cmp	QWORD PTR [rax+rsi+72], 0
	cmovne	edx, r15d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase

; 155  :         _State &= _Statmask;

	or	edx, ebx
	and	edx, 23

; 156  :         _Mystate             = _State;

	mov	DWORD PTR [rax+rsi+16], edx

; 157  :         const auto _Filtered = _State & _Except;

	mov	ecx, DWORD PTR [rax+rsi+20]
	and	ecx, edx

; 158  :         if (_Filtered) {

	jne	SHORT $LN150@operator
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream

; 119  :             const bool _Zero_uncaught_exceptions = _STD uncaught_exceptions() == 0;

	call	?uncaught_exceptions@std@@YAHXZ		; std::uncaught_exceptions

; 120  : #endif // ^^^ !_HAS_DEPRECATED_UNCAUGHT_EXCEPTION ^^^
; 121  : 
; 122  :             if (_Zero_uncaught_exceptions) {

	test	eax, eax
	jne	SHORT $LN40@operator

; 123  :                 this->_Myostr._Osfx();

	mov	rcx, r14
	call	?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ ; std::basic_ostream<char,std::char_traits<char> >::_Osfx
	npad	1
$LN40@operator:

; 83   :             const auto _Rdbuf = _Myostr.rdbuf();

	mov	rcx, QWORD PTR [r14]
	movsxd	rdx, DWORD PTR [rcx+4]
	mov	rcx, QWORD PTR [rdx+r14+72]

; 84   :             if (_Rdbuf) {

	test	rcx, rcx
	je	SHORT $LN46@operator

; 85   :                 _Rdbuf->_Unlock();

	mov	rdx, QWORD PTR [rcx]
	call	QWORD PTR [rdx+16]
	npad	1
$LN46@operator:

; 815  :     return _Ostr;

	mov	rax, r12

; 816  : }

	mov	rbx, QWORD PTR [rsp+184]
	add	rsp, 112				; 00000070H
	pop	r15
	pop	r14
	pop	r12
	pop	rdi
	pop	rsi
	ret	0
$LN150@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase

; 164  :             if (_Filtered & ios_base::badbit) {

	test	cl, 4
	je	SHORT $LN31@operator

; 165  :                 _Msg = "ios_base::badbit set";

	lea	rbx, OFFSET FLAT:??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@
	jmp	SHORT $LN33@operator
$LN31@operator:

; 166  :             } else if (_Filtered & ios_base::failbit) {

	test	cl, 2
	lea	rbx, OFFSET FLAT:??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@
	lea	rax, OFFSET FLAT:??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@
	cmove	rbx, rax
$LN33@operator:

; 167  :                 _Msg = "ios_base::failbit set";
; 168  :             } else {
; 169  :                 _Msg = "ios_base::eofbit set";
; 170  :             }
; 171  : 
; 172  :             _THROW(failure(_Msg));

	mov	edx, 1
	lea	rcx, QWORD PTR $T1[rsp]
	call	?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z ; std::make_error_code
	mov	r8, rax
	mov	rdx, rbx
	lea	rcx, QWORD PTR $T2[rsp]
	call	??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z ; std::ios_base::failure::failure
	lea	rdx, OFFSET FLAT:_TI5?AVfailure@ios_base@std@@
	lea	rcx, QWORD PTR $T2[rsp]
	call	_CxxThrowException
	int	3
$LN144@operator:
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ENDP ; std::operator<<<std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Ok$ = 32
$T1 = 48
$T2 = 64
_Ostr$dead$ = 160
_Val$dead$ = 168
_State$ = 168
_Ostr$ = 176
?dtor$3@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$3
	lea	rcx, QWORD PTR _Ok$[rdx]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
?dtor$3@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Ok$ = 32
$T1 = 48
$T2 = 64
_Ostr$dead$ = 160
_Val$dead$ = 168
_State$ = 168
_Ostr$ = 176
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
	lea	rcx, QWORD PTR _Ok$[rdx]
	jmp	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ios
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream
;	COMDAT text$x
text$x	SEGMENT
_Ok$ = 32
$T1 = 48
$T2 = 64
_Ostr$dead$ = 160
_Val$dead$ = 168
_State$ = 168
_Ostr$ = 176
?catch$4@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::catch$4

; 811  :         _CATCH_IO_(ios_base, _Ostr)

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$0:
	mov	rax, QWORD PTR ?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	movsxd	rdx, DWORD PTR [rax+4]
	add	rdx, QWORD PTR _Ostr$[rbp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ios

; 51   :         clear(rdstate() | _State, _Reraise);

	mov	eax, DWORD PTR [rdx+16]
	or	eax, 4

; 40   :         ios_base::clear(_State | (_Mystrbuf ? ios_base::goodbit : ios_base::badbit), _Reraise);

	mov	ecx, 4
	xor	r8d, r8d
	cmp	QWORD PTR [rdx+72], r8
	cmovne	ecx, r8d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase

; 155  :         _State &= _Statmask;

	or	ecx, eax
	and	ecx, 23

; 156  :         _Mystate             = _State;

	mov	DWORD PTR [rdx+16], ecx

; 157  :         const auto _Filtered = _State & _Except;

	test	DWORD PTR [rdx+20], ecx

; 158  :         if (_Filtered) {

	je	SHORT $LN121@catch$4

; 159  :             if (_Reraise) {
; 160  :                 _RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
$LN121@catch$4:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream

; 811  :         _CATCH_IO_(ios_base, _Ostr)

	mov	rax, 0
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
	int	3
?catch$4@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::catch$4
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream
;	COMDAT ??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Ostr$ = 48
??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z PROC ; std::endl<char,std::char_traits<char> >, COMDAT

; 1018 :     basic_ostream<_Elem, _Traits>& _Ostr) { // insert newline and flush stream

$LN4:
	push	rbx
	sub	rsp, 32					; 00000020H

; 1019 :     _Ostr.put(_Ostr.widen('\n'));

	mov	rax, QWORD PTR [rcx]
	mov	rbx, rcx
	mov	dl, 10
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rbx
	call	?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z ; std::basic_ios<char,std::char_traits<char> >::widen
	movzx	edx, al
	mov	rcx, rbx
	call	?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z ; std::basic_ostream<char,std::char_traits<char> >::put

; 1020 :     _Ostr.flush();

	mov	rcx, rbx
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush

; 1021 :     return _Ostr;

	mov	rax, rbx

; 1022 : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ENDP ; std::endl<char,std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xhash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xhash
;	COMDAT ??$?0AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
_Al$dead$ = 16
??$?0AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@1@@Z PROC ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > > >::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > > ><std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,0>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\vector

; 400  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xhash

; 264  :     }

	mov	rax, rcx
	ret	0
??$?0AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@1@@Z ENDP ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > > >::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > > ><std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory
;	COMDAT ??$?0U_Zero_then_variadic_args_t@std@@M@?$_Compressed_pair@U?$hash@J@std@@V?$_Compressed_pair@U?$equal_to@J@std@@M$00@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@$$QEAU21@$$QEAM@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
<_Val2_0>$dead$ = 24
<_Val2_1>$ = 32
??$?0U_Zero_then_variadic_args_t@std@@M@?$_Compressed_pair@U?$hash@J@std@@V?$_Compressed_pair@U?$equal_to@J@std@@M$00@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@$$QEAU21@$$QEAM@Z PROC ; std::_Compressed_pair<std::hash<long>,std::_Compressed_pair<std::equal_to<long>,float,1>,1>::_Compressed_pair<std::hash<long>,std::_Compressed_pair<std::equal_to<long>,float,1>,1><std::_Zero_then_variadic_args_t,float>, COMDAT

; 1496 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	eax, DWORD PTR [r9]
	mov	DWORD PTR [rcx], eax
	mov	rax, rcx
	ret	0
??$?0U_Zero_then_variadic_args_t@std@@M@?$_Compressed_pair@U?$hash@J@std@@V?$_Compressed_pair@U?$equal_to@J@std@@M$00@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@$$QEAU21@$$QEAM@Z ENDP ; std::_Compressed_pair<std::hash<long>,std::_Compressed_pair<std::equal_to<long>,float,1>,1>::_Compressed_pair<std::hash<long>,std::_Compressed_pair<std::equal_to<long>,float,1>,1><std::_Zero_then_variadic_args_t,float>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring
;	COMDAT ??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z
_TEXT	SEGMENT
this$ = 96
_Size_increase$ = 104
_Fn$ = 112
<_Args_0>$ = 120
<_Args_1>$ = 128
??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append'::`2'::<lambda_1>,char const *,unsigned __int64>, COMDAT

; 4809 :     _CONSTEXPR20 basic_string& _Reallocate_grow_by(const size_type _Size_increase, _Fty _Fn, _ArgTys... _Args) {

$LN160:
	push	rbx
	push	rsi
	push	r12
	push	r13
	push	r15
	sub	rsp, 48					; 00000030H

; 4810 :         // reallocate to increase size by _Size_increase elements, new buffer prepared by
; 4811 :         // _Fn(_New_ptr, _Old_ptr, _Old_size, _Args...)
; 4812 :         auto& _My_data            = _Mypair._Myval2;
; 4813 :         const size_type _Old_size = _My_data._Mysize;

	mov	r15, QWORD PTR [rcx+16]

; 4814 :         if (max_size() - _Old_size < _Size_increase) {

	mov	rbx, 9223372036854775807		; 7fffffffffffffffH
	mov	r12, QWORD PTR <_Args_1>$[rsp]
	mov	rax, rbx
	sub	rax, r15
	mov	r13, r9
	mov	rsi, rcx
	cmp	rax, rdx
	jb	$LN157@Reallocate

; 4816 :         }
; 4817 : 
; 4818 :         const size_type _New_size     = _Old_size + _Size_increase;
; 4819 :         const size_type _Old_capacity = _My_data._Myres;

	mov	QWORD PTR [rsp+112], rbp
	mov	rbp, QWORD PTR [rcx+24]
	mov	QWORD PTR [rsp+40], rdi
	mov	QWORD PTR [rsp+32], r14
	lea	r14, QWORD PTR [rdx+r15]

; 4763 :         const size_type _Masked = _Requested | _Alloc_mask;

	mov	rdx, r14
	or	rdx, 15
	cmp	rdx, rbx

; 4764 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

	ja	SHORT $LN155@Reallocate

; 4765 :             return _Max;
; 4766 :         }
; 4767 : 
; 4768 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

	mov	rcx, rbp
	mov	rax, rbx
	shr	rcx, 1
	sub	rax, rcx
	cmp	rbp, rax
	ja	SHORT $LN155@Reallocate

; 4769 :             return _Max;
; 4770 :         }
; 4771 : 
; 4772 :         return (_STD max)(_Masked, _Old + _Old / 2);

	lea	rax, QWORD PTR [rcx+rbp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\utility

; 74   :     return _Left < _Right ? _Right : _Left;

	mov	rbx, rdx
	cmp	rdx, rax
	cmovb	rbx, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring

; 2616 :         ++_Capacity; // Take null terminator into consideration

	lea	rcx, QWORD PTR [rbx+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory

; 196  :     if (_Bytes == 0) {

	test	rcx, rcx
	jne	SHORT $LN28@Reallocate

; 197  :         return nullptr;

	xor	edi, edi
	jmp	SHORT $LN27@Reallocate
$LN28@Reallocate:

; 198  :     }
; 199  : 
; 200  : #if _HAS_CXX20 // TRANSITION, GH-1532
; 201  :     if (_STD is_constant_evaluated()) {
; 202  :         return _Traits::_Allocate(_Bytes);
; 203  :     }
; 204  : #endif // _HAS_CXX20
; 205  : 
; 206  : #ifdef __cpp_aligned_new
; 207  :     if constexpr (_Align > __STDCPP_DEFAULT_NEW_ALIGNMENT__) {
; 208  :         size_t _Passed_align = _Align;
; 209  : #if defined(_M_IX86) || defined(_M_X64)
; 210  :         if (_Bytes >= _Big_allocation_threshold) {
; 211  :             // boost the alignment of big allocations to help autovectorization
; 212  :             _Passed_align = (_STD max)(_Align, _Big_allocation_alignment);
; 213  :         }
; 214  : #endif // defined(_M_IX86) || defined(_M_X64)
; 215  :         return _Traits::_Allocate_aligned(_Bytes, _Passed_align);
; 216  :     } else
; 217  : #endif // defined(__cpp_aligned_new)
; 218  :     {
; 219  : #if defined(_M_IX86) || defined(_M_X64)
; 220  :         if (_Bytes >= _Big_allocation_threshold) {

	cmp	rcx, 4096				; 00001000H
	jb	SHORT $LN30@Reallocate

; 153  :     const size_t _Block_size = _Non_user_size + _Bytes;

	lea	rax, QWORD PTR [rcx+39]

; 154  :     if (_Block_size <= _Bytes) {

	cmp	rax, rcx
	jbe	$LN158@Reallocate
	jmp	SHORT $LN41@Reallocate
$LN155@Reallocate:

; 101  :         return ::operator new(_Bytes);

	mov	rax, -9223372036854775808		; 8000000000000000H
	add	rax, 39					; 00000027H
$LN41@Reallocate:
	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new

; 159  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	test	rax, rax
	je	$LN89@Reallocate

; 160  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

	lea	rdi, QWORD PTR [rax+39]
	and	rdi, -32				; ffffffffffffffe0H

; 161  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

	mov	QWORD PTR [rdi-8], rax

; 222  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

	jmp	SHORT $LN27@Reallocate
$LN30@Reallocate:

; 101  :         return ::operator new(_Bytes);

	call	??2@YAPEAX_K@Z				; operator new
	mov	rdi, rax
$LN27@Reallocate:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring

; 4826 :         _My_data._Mysize      = _New_size;

	mov	QWORD PTR [rsi+16], r14

; 4827 :         _My_data._Myres       = _New_capacity;

	lea	r14, QWORD PTR [r15+rdi]
	mov	QWORD PTR [rsi+24], rbx

; 4828 :         _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4829 :         if (_Old_capacity > _Small_string_capacity) {

	mov	r8, r15
	mov	rcx, rdi
	cmp	rbp, 15
	jbe	SHORT $LN3@Reallocate

; 4830 :             const pointer _Old_ptr = _My_data._Bx._Ptr;

	mov	rbx, QWORD PTR [rsi]

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	rdx, rbx
	call	memcpy
	mov	r8, r12
	mov	rdx, r13
	mov	rcx, r14
	call	memcpy

; 2643 :         _Al.deallocate(_Old_ptr, _Capacity + 1); // +1 for null terminator

	lea	rdx, QWORD PTR [rbp+1]

; 3325 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

	mov	BYTE PTR [r14+r12], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory

; 253  :         if (_Bytes >= _Big_allocation_threshold) {

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN92@Reallocate

; 174  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rbx-8]
	add	rdx, 39					; 00000027H

; 175  : 
; 176  :     // If the following asserts, it likely means that we are performing
; 177  :     // an aligned delete on memory coming from an unaligned allocation.
; 178  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 179  : 
; 180  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 181  :     // in range [_Min_back_shift, _Non_user_size]
; 182  : #ifdef _DEBUG
; 183  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 184  : #else // ^^^ defined(_DEBUG) / !defined(_DEBUG) vvv
; 185  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 186  : #endif // ^^^ !defined(_DEBUG) ^^^
; 187  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rbx, rcx

; 188  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rbx-8]
	cmp	rax, 31
	ja	SHORT $LN89@Reallocate

; 189  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rbx, rcx
$LN92@Reallocate:

; 258  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, rbx
	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring

; 4834 :         } else {

	jmp	SHORT $LN4@Reallocate
$LN3@Reallocate:

; 64   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	rdx, rsi
	call	memcpy
	mov	r8, r12
	mov	rdx, r13
	mov	rcx, r14
	call	memcpy

; 3325 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

	mov	BYTE PTR [r14+r12], 0
$LN4@Reallocate:

; 4835 :             _Fn(_Raw_new, _My_data._Bx._Buf, _Old_size, _Args...);
; 4836 :             _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);
; 4837 :         }
; 4838 : 
; 4839 :         _ASAN_STRING_CREATE(*this);
; 4840 :         return *this;

	mov	QWORD PTR [rsi], rdi
	mov	rax, rsi
	mov	rdi, QWORD PTR [rsp+40]
	mov	rbp, QWORD PTR [rsp+112]
	mov	r14, QWORD PTR [rsp+32]

; 4841 :     }

	add	rsp, 48					; 00000030H
	pop	r15
	pop	r13
	pop	r12
	pop	rsi
	pop	rbx
	ret	0
$LN89@Reallocate:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory

; 188  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	_invalid_parameter_noinfo_noreturn
	int	3
$LN158@Reallocate:

; 155  :         _Throw_bad_array_new_length(); // add overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
	int	3
$LN157@Reallocate:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring

; 4815 :             _Xlen_string(); // result too long

	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	int	3
$LN154@Reallocate:
??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append'::`2'::<lambda_1>,char const *,unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory
;	COMDAT ??$?0AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
_Val1$dead$ = 24
??$?0AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@1@@Z PROC ; std::_Compressed_pair<std::allocator<std::_List_node<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,void *> >,std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,1>::_Compressed_pair<std::allocator<std::_List_node<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,void *> >,std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,1><std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\list

; 353  :     _List_val() noexcept : _Myhead(), _Mysize(0) {} // initialize data

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory

; 1501 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	rax, rcx
	ret	0
??$?0AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@1@@Z ENDP ; std::_Compressed_pair<std::allocator<std::_List_node<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,void *> >,std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,1>::_Compressed_pair<std::allocator<std::_List_node<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,void *> >,std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,1><std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xutility
;	COMDAT ??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@PEAX@0@0@Z
_TEXT	SEGMENT
_Obj$ = 8
<_Args_0>$ = 16
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@PEAX@0@0@Z PROC ; std::_Construct_in_place<std::_List_node<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,void *> *,std::_List_node<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,void *> * &>, COMDAT

; 382  : #if _HAS_CXX20
; 383  :     if (_STD is_constant_evaluated()) {
; 384  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);
; 385  :     } else
; 386  : #endif // _HAS_CXX20
; 387  :     {
; 388  :         ::new (static_cast<void*>(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);
; 389  :     }
; 390  : }

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	ret	0
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@PEAX@0@0@Z ENDP ; std::_Construct_in_place<std::_List_node<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,void *> *,std::_List_node<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAX_K@Z PROC ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::__autoclassinit2, COMDAT
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	ret	0
?__autoclassinit2@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAX_K@Z ENDP ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\streambuf
;	COMDAT ?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$dead$ = 16
_Count$ = 24
?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::sputn, COMDAT

; 171  :         return xsputn(_Ptr, _Count);

	mov	rax, QWORD PTR [rcx]
	lea	rdx, OFFSET FLAT:??_C@_0BC@LCLEKDHB@Client?5connected?$CB@
	rex_jmp	QWORD PTR [rax+72]
?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::sputn
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\streambuf
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\streambuf
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\streambuf
;	COMDAT ?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
_TEXT	SEGMENT
this$ = 8
_Ch$ = 16
?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z PROC ; std::basic_streambuf<char,std::char_traits<char> >::sputc, COMDAT

; 261  :         return *_IPnext ? *_IPcount : 0;

	mov	rax, QWORD PTR [rcx+64]

; 165  :     int_type __CLR_OR_THIS_CALL sputc(_Elem _Ch) { // put a character

	movzx	r8d, dl

; 261  :         return *_IPnext ? *_IPcount : 0;

	cmp	QWORD PTR [rax], 0
	je	SHORT $LN3@sputc
	mov	rdx, QWORD PTR [rcx+88]
	mov	eax, DWORD PTR [rdx]

; 166  :         return 0 < _Pnavail() ? _Traits::to_int_type(*_Pninc() = _Ch) : overflow(_Traits::to_int_type(_Ch));

	test	eax, eax
	jle	SHORT $LN3@sputc

; 256  :         --*_IPcount;

	dec	eax
	mov	DWORD PTR [rdx], eax

; 257  :         return (*_IPnext)++;

	mov	rcx, QWORD PTR [rcx+64]
	mov	rdx, QWORD PTR [rcx]
	lea	rax, QWORD PTR [rdx+1]
	mov	QWORD PTR [rcx], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring

; 460  :         return static_cast<unsigned char>(_Ch);

	mov	eax, r8d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\streambuf

; 166  :         return 0 < _Pnavail() ? _Traits::to_int_type(*_Pninc() = _Ch) : overflow(_Traits::to_int_type(_Ch));

	mov	BYTE PTR [rdx], r8b

; 167  :     }

	ret	0
$LN3@sputc:

; 166  :         return 0 < _Pnavail() ? _Traits::to_int_type(*_Pninc() = _Ch) : overflow(_Traits::to_int_type(_Ch));

	mov	rax, QWORD PTR [rcx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring

; 460  :         return static_cast<unsigned char>(_Ch);

	mov	edx, r8d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\streambuf

; 166  :         return 0 < _Pnavail() ? _Traits::to_int_type(*_Pninc() = _Ch) : overflow(_Traits::to_int_type(_Ch));

	rex_jmp	QWORD PTR [rax+24]
?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z ENDP ; std::basic_streambuf<char,std::char_traits<char> >::sputc
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool, COMDAT

; 129  :             return _Ok;

	movzx	eax, BYTE PTR [rcx+8]

; 130  :         }

	ret	0
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry, COMDAT

; 113  :         __CLR_OR_THIS_CALL ~sentry() noexcept {

$LN14:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 114  : #if !_HAS_EXCEPTIONS
; 115  :             const bool _Zero_uncaught_exceptions = true;
; 116  : #elif _HAS_DEPRECATED_UNCAUGHT_EXCEPTION
; 117  :             const bool _Zero_uncaught_exceptions = !_STD uncaught_exception(); // TRANSITION, ArchivedOS-12000909
; 118  : #else // ^^^ _HAS_DEPRECATED_UNCAUGHT_EXCEPTION / !_HAS_DEPRECATED_UNCAUGHT_EXCEPTION vvv
; 119  :             const bool _Zero_uncaught_exceptions = _STD uncaught_exceptions() == 0;

	call	?uncaught_exceptions@std@@YAHXZ		; std::uncaught_exceptions

; 120  : #endif // ^^^ !_HAS_DEPRECATED_UNCAUGHT_EXCEPTION ^^^
; 121  : 
; 122  :             if (_Zero_uncaught_exceptions) {

	test	eax, eax
	jne	SHORT $LN2@sentry

; 123  :                 this->_Myostr._Osfx();

	mov	rcx, QWORD PTR [rbx]
	call	?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ ; std::basic_ostream<char,std::char_traits<char> >::_Osfx
	npad	1
$LN2@sentry:

; 83   :             const auto _Rdbuf = _Myostr.rdbuf();

	mov	rdx, QWORD PTR [rbx]
	mov	rax, QWORD PTR [rdx]
	movsxd	rcx, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR [rcx+rdx+72]

; 84   :             if (_Rdbuf) {

	test	rcx, rcx
	je	SHORT $LN11@sentry

; 85   :                 _Rdbuf->_Unlock();

	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	npad	1
$LN11@sentry:

; 124  :             }
; 125  :         }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Ostr$ = 56
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry, COMDAT

; 96   :         explicit __CLR_OR_THIS_CALL sentry(basic_ostream& _Ostr) : _Sentry_base(_Ostr) {

$LN18:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, rcx

; 75   :         __CLR_OR_THIS_CALL _Sentry_base(basic_ostream& _Ostr) : _Myostr(_Ostr) { // lock the stream buffer, if there

	mov	QWORD PTR [rcx], rdx

; 76   :             const auto _Rdbuf = _Myostr.rdbuf();

	mov	rax, QWORD PTR [rdx]
	movsxd	r8, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR [r8+rdx+72]

; 77   :             if (_Rdbuf) {

	test	rcx, rcx
	je	SHORT $LN8@sentry

; 78   :                 _Rdbuf->_Lock();

	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+8]
	npad	1
$LN8@sentry:

; 97   :             if (!_Ostr.good()) {

	mov	rax, QWORD PTR [rbx]
	movsxd	rcx, DWORD PTR [rax+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase

; 206  :         return rdstate() == ios_base::goodbit;

	cmp	DWORD PTR [rcx+rbx+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream

; 97   :             if (!_Ostr.good()) {

	je	SHORT $LN2@sentry

; 98   :                 _Ok = false;

	xor	al, al

; 99   :                 return;

	jmp	SHORT $LN1@sentry
$LN2@sentry:

; 100  :             }
; 101  : 
; 102  :             const auto _Tied = _Ostr.tie();

	mov	rcx, QWORD PTR [rcx+rbx+80]

; 103  :             if (!_Tied || _Tied == &_Ostr) {

	test	rcx, rcx
	je	SHORT $LN4@sentry
	cmp	rcx, rbx
	je	SHORT $LN4@sentry

; 105  :                 return;
; 106  :             }
; 107  : 
; 108  :             _Tied->flush();

	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush

; 109  :             _Ok = _Ostr.good(); // store test only after flushing tie

	mov	rax, QWORD PTR [rbx]
	movsxd	rcx, DWORD PTR [rax+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase

; 206  :         return rdstate() == ios_base::goodbit;

	cmp	DWORD PTR [rcx+rbx+16], 0
	sete	al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream

; 109  :             _Ok = _Ostr.good(); // store test only after flushing tie

	jmp	SHORT $LN1@sentry
$LN4@sentry:

; 104  :                 _Ok = true;

	mov	al, 1
$LN1@sentry:

; 110  :         }

	mov	BYTE PTR [rdi+8], al
	mov	rax, rdi
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Ostr$ = 56
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
	mov	rcx, QWORD PTR this$[rdx]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\memory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\memory
;	COMDAT ?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAPEAV_Facet_base@2@XZ
_TEXT	SEGMENT
this$ = 8
?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAPEAV_Facet_base@2@XZ PROC ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::release, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\utility

; 756  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rax, QWORD PTR [rcx]

; 757  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [rcx], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\memory

; 3440 :     }

	ret	0
?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAPEAV_Facet_base@2@XZ ENDP ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::release
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\memory
;	COMDAT ??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ PROC ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >, COMDAT

; 3409 :         if (_Mypair._Myval2) {

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN7@unique_ptr

; 3300 :         delete _Ptr;

	mov	rax, QWORD PTR [rcx]
	mov	edx, 1
	rex_jmp	QWORD PTR [rax]
$LN7@unique_ptr:

; 3410 :             _Mypair._Get_first()(_Mypair._Myval2);
; 3411 :         }
; 3412 :     }

	ret	0
??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ ENDP ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\streambuf
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ios
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream
;	COMDAT ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
_TEXT	SEGMENT
_State$1 = 32
$T2 = 40
this$GSCopy$ = 40
$T3 = 56
_Ok$4 = 96
__$ArrayPad$ = 112
this$ = 144
?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::flush, COMDAT

; 568  :     basic_ostream& __CLR_OR_THIS_CALL flush() { // flush output stream

$LN93:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 128				; 00000080H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbx, rcx
	mov	QWORD PTR this$GSCopy$[rsp], rcx

; 569  :         const auto _Rdbuf = _Myios::rdbuf();

	mov	rax, QWORD PTR [rcx]
	movsxd	rcx, DWORD PTR [rax+4]
	mov	rsi, QWORD PTR [rcx+rbx+72]

; 570  :         if (_Rdbuf) { // buffer exists, flush it

	test	rsi, rsi
	je	$LN85@flush

; 571  :             const sentry _Ok(*this);

	mov	rdx, rbx
	lea	rcx, QWORD PTR _Ok$4[rsp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	npad	1

; 572  : 
; 573  :             if (_Ok) {

	cmp	BYTE PTR _Ok$4[rsp+8], 0
	je	SHORT $LN68@flush

; 574  :                 ios_base::iostate _State = ios_base::goodbit;

	xor	edi, edi
	mov	DWORD PTR _State$1[rsp], edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\streambuf

; 121  :         return sync();

	mov	rax, QWORD PTR [rsi]
	mov	rcx, rsi
	call	QWORD PTR [rax+104]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream

; 576  :                 if (_Rdbuf->pubsync() == -1) {

	mov	r8d, edi
	mov	edx, 4
	cmp	eax, -1
	cmove	r8d, edx
	mov	DWORD PTR _State$1[rsp], r8d
	jmp	SHORT $LN10@flush
$LN11@flush:
	xor	edi, edi
	mov	edx, 4
	mov	r8d, DWORD PTR _State$1[rsp]
	mov	rbx, QWORD PTR this$GSCopy$[rsp]
$LN10@flush:

; 577  :                     _State |= ios_base::badbit; // sync failed
; 578  :                 }
; 579  :                 _CATCH_IO_END
; 580  :                 _Myios::setstate(_State);

	mov	rax, QWORD PTR [rbx]
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ios

; 51   :         clear(rdstate() | _State, _Reraise);

	or	r8d, DWORD PTR [rcx+16]

; 40   :         ios_base::clear(_State | (_Mystrbuf ? ios_base::goodbit : ios_base::badbit), _Reraise);

	cmp	QWORD PTR [rcx+72], 0
	cmovne	edx, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase

; 155  :         _State &= _Statmask;

	or	edx, r8d
	and	edx, 23

; 156  :         _Mystate             = _State;

	mov	DWORD PTR [rcx+16], edx

; 157  :         const auto _Filtered = _State & _Except;

	and	edx, DWORD PTR [rcx+20]

; 158  :         if (_Filtered) {

	jne	SHORT $LN92@flush
$LN68@flush:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream

; 119  :             const bool _Zero_uncaught_exceptions = _STD uncaught_exceptions() == 0;

	call	?uncaught_exceptions@std@@YAHXZ		; std::uncaught_exceptions
	test	eax, eax

; 120  : #endif // ^^^ !_HAS_DEPRECATED_UNCAUGHT_EXCEPTION ^^^
; 121  : 
; 122  :             if (_Zero_uncaught_exceptions) {

	jne	SHORT $LN78@flush

; 123  :                 this->_Myostr._Osfx();

	mov	rcx, QWORD PTR _Ok$4[rsp]
	call	?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ ; std::basic_ostream<char,std::char_traits<char> >::_Osfx
	npad	1
$LN78@flush:

; 83   :             const auto _Rdbuf = _Myostr.rdbuf();

	mov	r8, QWORD PTR _Ok$4[rsp]
	mov	rcx, QWORD PTR [r8]
	movsxd	rdx, DWORD PTR [rcx+4]
	mov	rcx, QWORD PTR [rdx+r8+72]

; 84   :             if (_Rdbuf) {

	test	rcx, rcx
	je	SHORT $LN84@flush

; 85   :                 _Rdbuf->_Unlock();

	mov	rdx, QWORD PTR [rcx]
	call	QWORD PTR [rdx+16]
	npad	1
$LN84@flush:
$LN85@flush:

; 581  :             }
; 582  :         }
; 583  :         return *this;

	mov	rax, rbx

; 584  :     }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+128]
	mov	rbx, QWORD PTR [r11+24]
	mov	rsi, QWORD PTR [r11+32]
	mov	rsp, r11
	pop	rdi
	ret	0
$LN92@flush:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase

; 164  :             if (_Filtered & ios_base::badbit) {

	test	dl, 4
	je	SHORT $LN70@flush

; 165  :                 _Msg = "ios_base::badbit set";

	lea	rbx, OFFSET FLAT:??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@
	jmp	SHORT $LN72@flush
$LN70@flush:

; 166  :             } else if (_Filtered & ios_base::failbit) {

	test	dl, 2
	lea	rbx, OFFSET FLAT:??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@
	lea	rax, OFFSET FLAT:??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@
	cmove	rbx, rax
$LN72@flush:

; 167  :                 _Msg = "ios_base::failbit set";
; 168  :             } else {
; 169  :                 _Msg = "ios_base::eofbit set";
; 170  :             }
; 171  : 
; 172  :             _THROW(failure(_Msg));

	mov	edx, 1
	lea	rcx, QWORD PTR $T2[rsp]
	call	?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z ; std::make_error_code
	mov	r8, rax
	mov	rdx, rbx
	lea	rcx, QWORD PTR $T3[rsp]
	call	??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z ; std::ios_base::failure::failure
	lea	rdx, OFFSET FLAT:_TI5?AVfailure@ios_base@std@@
	lea	rcx, QWORD PTR $T3[rsp]
	call	_CxxThrowException
	int	3
$LN89@flush:
?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::flush
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_State$1 = 32
$T2 = 40
this$GSCopy$ = 40
$T3 = 56
_Ok$4 = 96
__$ArrayPad$ = 112
this$ = 144
?dtor$0@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::flush'::`1'::dtor$0
	lea	rcx, QWORD PTR _Ok$4[rdx]
	jmp	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
?dtor$0@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::flush'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ios
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream
;	COMDAT text$x
text$x	SEGMENT
_State$1 = 32
$T2 = 40
this$GSCopy$ = 40
$T3 = 56
_Ok$4 = 96
__$ArrayPad$ = 112
this$ = 144
?catch$9@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::flush'::`1'::catch$9

; 579  :                 _CATCH_IO_END

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ$0:
	mov	rcx, QWORD PTR this$GSCopy$[rbp]
	mov	rax, QWORD PTR [rcx]
	movsxd	rax, DWORD PTR [rax+4]
	add	rax, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ios

; 40   :         ios_base::clear(_State | (_Mystrbuf ? ios_base::goodbit : ios_base::badbit), _Reraise);

	mov	ecx, 4
	xor	edx, edx
	cmp	QWORD PTR [rax+72], rdx
	cmovne	ecx, edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase

; 155  :         _State &= _Statmask;

	or	ecx, DWORD PTR [rax+16]
	and	ecx, 19
	or	ecx, 4

; 156  :         _Mystate             = _State;

	mov	DWORD PTR [rax+16], ecx

; 157  :         const auto _Filtered = _State & _Except;

	test	DWORD PTR [rax+20], ecx

; 158  :         if (_Filtered) {

	je	SHORT $LN53@catch$9

; 159  :             if (_Reraise) {
; 160  :                 _RERAISE;

	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
$LN53@catch$9:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream

; 579  :                 _CATCH_IO_END

	mov	rax, 0
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
	int	3
?catch$9@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::flush'::`1'::catch$9
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\streambuf
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\streambuf
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\streambuf
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ios
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream
;	COMDAT ?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
_TEXT	SEGMENT
_Ok$ = 32
$T1 = 48
$T2 = 64
this$ = 144
_Ch$ = 152
_State$ = 160
?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::put, COMDAT

; 531  :     basic_ostream& __CLR_OR_THIS_CALL put(_Elem _Ch) { // insert a character

$LN94:
	mov	QWORD PTR [rsp+8], rcx
	push	rbx
	push	rsi
	push	rdi
	sub	rsp, 112				; 00000070H
	movzx	esi, dl
	mov	rbx, rcx

; 532  :         ios_base::iostate _State = ios_base::goodbit;

	xor	edi, edi
	mov	DWORD PTR _State$[rsp], edi

; 75   :         __CLR_OR_THIS_CALL _Sentry_base(basic_ostream& _Ostr) : _Myostr(_Ostr) { // lock the stream buffer, if there

	mov	QWORD PTR _Ok$[rsp], rcx

; 76   :             const auto _Rdbuf = _Myostr.rdbuf();

	mov	rax, QWORD PTR [rcx]
	movsxd	r8, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR [r8+rcx+72]

; 77   :             if (_Rdbuf) {

	test	rcx, rcx
	je	SHORT $LN19@put

; 78   :                 _Rdbuf->_Lock();

	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+8]
	npad	1
$LN19@put:

; 97   :             if (!_Ostr.good()) {

	mov	rcx, QWORD PTR [rbx]
	movsxd	rax, DWORD PTR [rcx+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase

; 206  :         return rdstate() == ios_base::goodbit;

	cmp	DWORD PTR [rax+rbx+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream

; 97   :             if (!_Ostr.good()) {

	je	SHORT $LN13@put

; 98   :                 _Ok = false;

	xor	al, al

; 99   :                 return;

	jmp	SHORT $LN90@put
$LN13@put:

; 100  :             }
; 101  : 
; 102  :             const auto _Tied = _Ostr.tie();

	mov	rax, QWORD PTR [rax+rbx+80]

; 103  :             if (!_Tied || _Tied == &_Ostr) {

	test	rax, rax
	je	SHORT $LN15@put
	cmp	rax, rbx
	je	SHORT $LN15@put

; 105  :                 return;
; 106  :             }
; 107  : 
; 108  :             _Tied->flush();

	mov	rcx, rax
	call	?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ ; std::basic_ostream<char,std::char_traits<char> >::flush

; 109  :             _Ok = _Ostr.good(); // store test only after flushing tie

	mov	rcx, QWORD PTR [rbx]
	movsxd	rax, DWORD PTR [rcx+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase

; 206  :         return rdstate() == ios_base::goodbit;

	cmp	DWORD PTR [rax+rbx+16], 0
	sete	al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream

; 109  :             _Ok = _Ostr.good(); // store test only after flushing tie

	jmp	SHORT $LN90@put
$LN15@put:

; 104  :                 _Ok = true;

	mov	al, 1
$LN90@put:

; 110  :         }

	mov	BYTE PTR _Ok$[rsp+8], al

; 533  :         const sentry _Ok(*this);
; 534  : 
; 535  :         if (!_Ok) {

	test	al, al
	jne	SHORT $LN2@put

; 536  :             _State |= ios_base::badbit;

	mov	edx, 4
	mov	r8d, edx

; 537  :         } else { // state okay, insert character

	jmp	SHORT $LN10@put
$LN2@put:

; 539  :             if (_Traits::eq_int_type(_Traits::eof(), _Myios::rdbuf()->sputc(_Ch))) {

	movsxd	rax, DWORD PTR [rcx+4]
	mov	rcx, QWORD PTR [rax+rbx+72]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\streambuf

; 261  :         return *_IPnext ? *_IPcount : 0;

	mov	rax, QWORD PTR [rcx+64]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN29@put
	mov	rdx, QWORD PTR [rcx+88]
	mov	eax, DWORD PTR [rdx]

; 166  :         return 0 < _Pnavail() ? _Traits::to_int_type(*_Pninc() = _Ch) : overflow(_Traits::to_int_type(_Ch));

	test	eax, eax
	jle	SHORT $LN29@put

; 256  :         --*_IPcount;

	dec	eax
	mov	DWORD PTR [rdx], eax

; 257  :         return (*_IPnext)++;

	mov	rcx, QWORD PTR [rcx+64]
	mov	rdx, QWORD PTR [rcx]
	lea	rax, QWORD PTR [rdx+1]
	mov	QWORD PTR [rcx], rax

; 166  :         return 0 < _Pnavail() ? _Traits::to_int_type(*_Pninc() = _Ch) : overflow(_Traits::to_int_type(_Ch));

	mov	BYTE PTR [rdx], sil
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring

; 460  :         return static_cast<unsigned char>(_Ch);

	mov	eax, esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\streambuf

; 166  :         return 0 < _Pnavail() ? _Traits::to_int_type(*_Pninc() = _Ch) : overflow(_Traits::to_int_type(_Ch));

	jmp	SHORT $LN30@put
$LN29@put:
	mov	rax, QWORD PTR [rcx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring

; 460  :         return static_cast<unsigned char>(_Ch);

	mov	edx, esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\streambuf

; 166  :         return 0 < _Pnavail() ? _Traits::to_int_type(*_Pninc() = _Ch) : overflow(_Traits::to_int_type(_Ch));

	call	QWORD PTR [rax+24]
$LN30@put:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream

; 539  :             if (_Traits::eq_int_type(_Traits::eof(), _Myios::rdbuf()->sputc(_Ch))) {

	mov	r8d, edi
	mov	edx, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring

; 464  :         return _Left == _Right;

	cmp	eax, -1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream

; 539  :             if (_Traits::eq_int_type(_Traits::eof(), _Myios::rdbuf()->sputc(_Ch))) {

	cmove	r8d, edx
	mov	DWORD PTR _State$[rsp], r8d
	jmp	SHORT $LN10@put
$LN11@put:
	xor	edi, edi
	mov	edx, 4
	mov	rbx, QWORD PTR this$[rsp]
	mov	r8d, DWORD PTR _State$[rsp]
$LN10@put:

; 540  :                 _State |= ios_base::badbit;
; 541  :             }
; 542  :             _CATCH_IO_END
; 543  :         }
; 544  : 
; 545  :         _Myios::setstate(_State);

	mov	rax, QWORD PTR [rbx]
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ios

; 51   :         clear(rdstate() | _State, _Reraise);

	or	r8d, DWORD PTR [rcx+16]

; 40   :         ios_base::clear(_State | (_Mystrbuf ? ios_base::goodbit : ios_base::badbit), _Reraise);

	cmp	QWORD PTR [rcx+72], 0
	cmovne	edx, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase

; 155  :         _State &= _Statmask;

	or	edx, r8d
	and	edx, 23

; 156  :         _Mystate             = _State;

	mov	DWORD PTR [rcx+16], edx

; 157  :         const auto _Filtered = _State & _Except;

	and	edx, DWORD PTR [rcx+20]

; 158  :         if (_Filtered) {

	jne	SHORT $LN93@put
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream

; 119  :             const bool _Zero_uncaught_exceptions = _STD uncaught_exceptions() == 0;

	call	?uncaught_exceptions@std@@YAHXZ		; std::uncaught_exceptions

; 120  : #endif // ^^^ !_HAS_DEPRECATED_UNCAUGHT_EXCEPTION ^^^
; 121  : 
; 122  :             if (_Zero_uncaught_exceptions) {

	test	eax, eax
	jne	SHORT $LN78@put

; 123  :                 this->_Myostr._Osfx();

	mov	rcx, rbx
	call	?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ ; std::basic_ostream<char,std::char_traits<char> >::_Osfx
	npad	1
$LN78@put:

; 83   :             const auto _Rdbuf = _Myostr.rdbuf();

	mov	rax, QWORD PTR [rbx]
	movsxd	rcx, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR [rcx+rbx+72]

; 84   :             if (_Rdbuf) {

	test	rcx, rcx
	je	SHORT $LN84@put

; 85   :                 _Rdbuf->_Unlock();

	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	npad	1
$LN84@put:

; 546  :         return *this;

	mov	rax, rbx

; 547  :     }

	add	rsp, 112				; 00000070H
	pop	rdi
	pop	rsi
	pop	rbx
	ret	0
$LN93@put:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase

; 164  :             if (_Filtered & ios_base::badbit) {

	test	dl, 4
	je	SHORT $LN70@put

; 165  :                 _Msg = "ios_base::badbit set";

	lea	rbx, OFFSET FLAT:??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@
	jmp	SHORT $LN72@put
$LN70@put:

; 166  :             } else if (_Filtered & ios_base::failbit) {

	test	dl, 2
	lea	rbx, OFFSET FLAT:??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@
	lea	rax, OFFSET FLAT:??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@
	cmove	rbx, rax
$LN72@put:

; 167  :                 _Msg = "ios_base::failbit set";
; 168  :             } else {
; 169  :                 _Msg = "ios_base::eofbit set";
; 170  :             }
; 171  : 
; 172  :             _THROW(failure(_Msg));

	mov	edx, 1
	lea	rcx, QWORD PTR $T1[rsp]
	call	?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z ; std::make_error_code
	mov	r8, rax
	mov	rdx, rbx
	lea	rcx, QWORD PTR $T2[rsp]
	call	??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z ; std::ios_base::failure::failure
	lea	rdx, OFFSET FLAT:_TI5?AVfailure@ios_base@std@@
	lea	rcx, QWORD PTR $T2[rsp]
	call	_CxxThrowException
	int	3
$LN89@put:
?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::put
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Ok$ = 32
$T1 = 48
$T2 = 64
this$ = 144
_Ch$ = 152
_State$ = 160
?dtor$1@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::put'::`1'::dtor$1
	lea	rcx, QWORD PTR _Ok$[rdx]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
?dtor$1@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::put'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Ok$ = 32
$T1 = 48
$T2 = 64
this$ = 144
_Ch$ = 152
_State$ = 160
?dtor$0@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::put'::`1'::dtor$0
	lea	rcx, QWORD PTR _Ok$[rdx]
	jmp	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
?dtor$0@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::put'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ios
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream
;	COMDAT text$x
text$x	SEGMENT
_Ok$ = 32
$T1 = 48
$T2 = 64
this$ = 144
_Ch$ = 152
_State$ = 160
?catch$4@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::put'::`1'::catch$4

; 542  :             _CATCH_IO_END

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z$0:
	mov	rcx, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rcx]
	movsxd	rdx, DWORD PTR [rax+4]
	add	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ios

; 51   :         clear(rdstate() | _State, _Reraise);

	mov	eax, DWORD PTR [rdx+16]
	or	eax, 4

; 40   :         ios_base::clear(_State | (_Mystrbuf ? ios_base::goodbit : ios_base::badbit), _Reraise);

	mov	ecx, 4
	xor	r8d, r8d
	cmp	QWORD PTR [rdx+72], r8
	cmovne	ecx, r8d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase

; 155  :         _State &= _Statmask;

	or	ecx, eax
	and	ecx, 23

; 156  :         _Mystate             = _State;

	mov	DWORD PTR [rdx+16], ecx

; 157  :         const auto _Filtered = _State & _Except;

	test	DWORD PTR [rdx+20], ecx

; 158  :         if (_Filtered) {

	je	SHORT $LN53@catch$4

; 159  :             if (_Reraise) {
; 160  :                 _RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
$LN53@catch$4:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream

; 542  :             _CATCH_IO_END

	mov	rax, 0
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
	int	3
?catch$4@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::put'::`1'::catch$4
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ios
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ios
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ios
;	COMDAT ?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
_TEXT	SEGMENT
$T1 = 32
_Lock$2 = 48
_Lock$3 = 52
_Psave_guard$4 = 56
_Psave$5 = 56
__$ArrayPad$ = 64
this$ = 112
_Byte$ = 120
?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z PROC ; std::basic_ios<char,std::char_traits<char> >::widen, COMDAT

; 112  :     _Elem __CLR_OR_THIS_CALL widen(char _Byte) const { // convert _Byte to character using imbued locale

$LN72:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+24], rbp
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	push	r14
	push	r15
	sub	rsp, 80					; 00000050H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	movzx	r15d, dl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase

; 289  :         return *_Ploc;

	mov	rax, QWORD PTR [rcx+64]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale

; 254  :     locale(const locale& _Right) noexcept : _Ptr(_Right._Ptr) {

	mov	r14, QWORD PTR [rax+8]
	mov	QWORD PTR $T1[rsp+8], r14

; 255  :         _Ptr->_Incref();

	mov	rax, QWORD PTR [r14]
	mov	rcx, r14
	call	QWORD PTR [rax+8]
	npad	1

; 421  :     _BEGIN_LOCK(_LOCK_LOCALE) // the thread lock, make get atomic

	xor	edx, edx
	lea	rcx, QWORD PTR _Lock$3[rsp]
	call	??0_Lockit@std@@QEAA@H@Z		; std::_Lockit::_Lockit
	npad	1

; 422  :     const locale::facet* _Psave = _Facetptr<_Facet>::_Psave; // static pointer to lazy facet

	mov	rbp, QWORD PTR ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PEBVfacet@locale@2@EB ; std::_Facetptr<std::ctype<char> >::_Psave
	mov	QWORD PTR _Psave$5[rsp], rbp

; 83   :             if (_Id == 0) { // still zero, allocate stamp

	mov	rdi, QWORD PTR ?id@?$ctype@D@std@@2V0locale@2@A ; std::ctype<char>::id
	test	rdi, rdi
	jne	SHORT $LN22@widen

; 84   :                 _BEGIN_LOCK(_LOCK_LOCALE)

	xor	edx, edx
	lea	rcx, QWORD PTR _Lock$2[rsp]
	call	??0_Lockit@std@@QEAA@H@Z		; std::_Lockit::_Lockit

; 85   :                 if (_Id == 0) {

	cmp	QWORD PTR ?id@?$ctype@D@std@@2V0locale@2@A, rdi ; std::ctype<char>::id
	jne	SHORT $LN23@widen

; 86   :                     _Id = static_cast<size_t>(++_Id_cnt);

	mov	eax, DWORD PTR ?_Id_cnt@id@locale@std@@0HA ; std::locale::id::_Id_cnt
	inc	eax
	mov	DWORD PTR ?_Id_cnt@id@locale@std@@0HA, eax ; std::locale::id::_Id_cnt
	cdqe
	mov	QWORD PTR ?id@?$ctype@D@std@@2V0locale@2@A, rax ; std::ctype<char>::id
$LN23@widen:

; 87   :                 }
; 88   :                 _END_LOCK()

	lea	rcx, QWORD PTR _Lock$2[rsp]
	call	??1_Lockit@std@@QEAA@XZ			; std::_Lockit::~_Lockit
	mov	rdi, QWORD PTR ?id@?$ctype@D@std@@2V0locale@2@A ; std::ctype<char>::id
$LN22@widen:

; 363  :         const facet* _Facptr = _Id < _Ptr->_Facetcount ? _Ptr->_Facetvec[_Id] : nullptr; // null if id off end

	lea	rsi, QWORD PTR [rdi*8]
	cmp	rdi, QWORD PTR [r14+24]
	jae	SHORT $LN30@widen
	mov	rax, QWORD PTR [r14+16]
	mov	rbx, QWORD PTR [rsi+rax]

; 364  :         if (_Facptr || !_Ptr->_Xparent) {

	test	rbx, rbx
	jne	SHORT $LN53@widen
	jmp	SHORT $LN65@widen
$LN30@widen:

; 342  :         }
; 343  :     }
; 344  : 
; 345  :     const locale& operator=(const locale& _Right) noexcept {
; 346  :         if (_Ptr != _Right._Ptr) { // different implementation, point at new one
; 347  :             delete _Ptr->_Decref();
; 348  :             _Ptr = _Right._Ptr;
; 349  :             _Ptr->_Incref();
; 350  :         }
; 351  :         return *this;
; 352  :     }
; 353  : 
; 354  :     string name() const {
; 355  :         return _Ptr ? _Ptr->_Name.c_str() : string{};
; 356  :     }
; 357  : 
; 358  :     _Ret_z_ const char* _C_str() const noexcept {
; 359  :         return _Ptr ? _Ptr->_Name.c_str() : "";
; 360  :     }
; 361  : 
; 362  :     const facet* _Getfacet(size_t _Id) const { // look up a facet in locale object
; 363  :         const facet* _Facptr = _Id < _Ptr->_Facetcount ? _Ptr->_Facetvec[_Id] : nullptr; // null if id off end

	xor	ebx, ebx
$LN65@widen:

; 364  :         if (_Facptr || !_Ptr->_Xparent) {

	cmp	BYTE PTR [r14+36], 0
	je	SHORT $LN25@widen

; 365  :             return _Facptr; // found facet or not transparent
; 366  :         }
; 367  : 
; 368  :         // look in current locale
; 369  :         locale::_Locimp* _Ptr0 = _Getgloballocale();

	call	?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ ; std::locale::_Getgloballocale

; 370  :         if (_Id < _Ptr0->_Facetcount) {

	cmp	rdi, QWORD PTR [rax+24]
	jae	SHORT $LN66@widen

; 371  :             return _Ptr0->_Facetvec[_Id]; // get from current locale

	mov	rax, QWORD PTR [rax+16]
	mov	rbx, QWORD PTR [rsi+rax]
$LN25@widen:

; 427  :     if (!_Pf) {

	test	rbx, rbx
	jne	SHORT $LN53@widen
$LN66@widen:

; 428  :         if (_Psave) {

	test	rbp, rbp
	je	SHORT $LN14@widen

; 429  :             _Pf = _Psave; // lazy facet already allocated

	mov	rbx, rbp
	jmp	SHORT $LN53@widen
$LN14@widen:

; 430  :         } else if (_Facet::_Getcat(&_Psave, &_Loc) == static_cast<size_t>(-1)) {

	lea	rdx, QWORD PTR $T1[rsp]
	lea	rcx, QWORD PTR _Psave$5[rsp]
	call	?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z ; std::ctype<char>::_Getcat
	cmp	rax, -1
	je	$LN70@widen
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory

; 1496 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	rbx, QWORD PTR _Psave$5[rsp]
	mov	QWORD PTR _Psave_guard$4[rsp], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale

; 443  :             _Facet_Register(_Pfmod);

	mov	rcx, rbx
	call	?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z ; std::_Facet_Register

; 444  : #endif // ^^^ !defined(_M_CEE) ^^^
; 445  : 
; 446  :             _Pfmod->_Incref();

	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rax+8]

; 447  :             _Facetptr<_Facet>::_Psave = _Psave;

	mov	QWORD PTR ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PEBVfacet@locale@2@EB, rbx ; std::_Facetptr<std::ctype<char> >::_Psave
$LN53@widen:

; 448  :             _Pf                       = _Psave;
; 449  : 
; 450  :             (void) _Psave_guard.release();
; 451  :         }
; 452  :     }
; 453  : 
; 454  :     return static_cast<const _Facet&>(*_Pf); // should be dynamic_cast

	lea	rcx, QWORD PTR _Lock$3[rsp]
	call	??1_Lockit@std@@QEAA@XZ			; std::_Lockit::~_Lockit

; 2681 :         return do_widen(_Byte);

	mov	rax, QWORD PTR [rbx]
	movzx	edx, r15b
	mov	rcx, rbx
	call	QWORD PTR [rax+64]
	movzx	ebx, al

; 341  :             delete _Ptr->_Decref();

	mov	rdx, QWORD PTR [r14]
	mov	rcx, r14
	call	QWORD PTR [rdx+16]
	test	rax, rax
	je	SHORT $LN62@widen
	mov	r8, QWORD PTR [rax]
	mov	edx, 1
	mov	rcx, rax
	call	QWORD PTR [r8]
$LN62@widen:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ios

; 113  :         return _STD use_facet<_Ctype>(getloc()).widen(_Byte);

	movzx	eax, bl

; 114  :     }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+80]
	mov	rbx, QWORD PTR [r11+32]
	mov	rbp, QWORD PTR [r11+48]
	mov	rsi, QWORD PTR [r11+56]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	rdi
	ret	0
$LN70@widen:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xlocale

; 432  :             _Throw_bad_cast(); // lazy disallowed

	call	?_Throw_bad_cast@std@@YAXXZ		; std::_Throw_bad_cast
	npad	1
$LN67@widen:
?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z ENDP ; std::basic_ios<char,std::char_traits<char> >::widen
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Lock$2 = 48
_Lock$3 = 52
_Psave_guard$4 = 56
_Psave$5 = 56
__$ArrayPad$ = 64
this$ = 112
_Byte$ = 120
?dtor$0@?0??widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z@4HA PROC ; `std::basic_ios<char,std::char_traits<char> >::widen'::`1'::dtor$0
	lea	rcx, QWORD PTR $T1[rdx]
	jmp	??1locale@std@@QEAA@XZ			; std::locale::~locale
?dtor$0@?0??widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z@4HA ENDP ; `std::basic_ios<char,std::char_traits<char> >::widen'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Lock$2 = 48
_Lock$3 = 52
_Psave_guard$4 = 56
_Psave$5 = 56
__$ArrayPad$ = 64
this$ = 112
_Byte$ = 120
?dtor$2@?0??widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z@4HA PROC ; `std::basic_ios<char,std::char_traits<char> >::widen'::`1'::dtor$2
	lea	rcx, QWORD PTR _Lock$3[rdx]
	jmp	??1_Lockit@std@@QEAA@XZ			; std::_Lockit::~_Lockit
?dtor$2@?0??widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z@4HA ENDP ; `std::basic_ios<char,std::char_traits<char> >::widen'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Lock$2 = 48
_Lock$3 = 52
_Psave_guard$4 = 56
_Psave$5 = 56
__$ArrayPad$ = 64
this$ = 112
_Byte$ = 120
?dtor$3@?0??widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z@4HA PROC ; `std::basic_ios<char,std::char_traits<char> >::widen'::`1'::dtor$3
	lea	rcx, QWORD PTR _Psave_guard$4[rdx]
	jmp	??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >
?dtor$3@?0??widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z@4HA ENDP ; `std::basic_ios<char,std::char_traits<char> >::widen'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ios
;	COMDAT ?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ
_TEXT	SEGMENT
this$ = 8
?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ PROC ; std::basic_ios<char,std::char_traits<char> >::fill, COMDAT

; 99   :         return _Fillch;

	movzx	eax, BYTE PTR [rcx+88]

; 100  :     }

	ret	0
?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ ENDP ; std::basic_ios<char,std::char_traits<char> >::fill
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ios
;	COMDAT ?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ PROC ; std::basic_ios<char,std::char_traits<char> >::rdbuf, COMDAT

; 78   :         return _Mystrbuf;

	mov	rax, QWORD PTR [rcx+72]

; 79   :     }

	ret	0
?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ ENDP ; std::basic_ios<char,std::char_traits<char> >::rdbuf
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ios
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ios
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ios
;	COMDAT ?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 48
this$ = 112
_State$ = 120
_Reraise$ = 128
?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z PROC ; std::basic_ios<char,std::char_traits<char> >::setstate, COMDAT

; 49   :     void __CLR_OR_THIS_CALL setstate(iostate _State, bool _Reraise = false) {

$LN21:
	sub	rsp, 104				; 00000068H

; 40   :         ios_base::clear(_State | (_Mystrbuf ? ios_base::goodbit : ios_base::badbit), _Reraise);

	xor	r9d, r9d
	mov	eax, 4
	cmp	QWORD PTR [rcx+72], r9
	cmovne	eax, r9d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase

; 155  :         _State &= _Statmask;

	or	eax, edx
	or	eax, DWORD PTR [rcx+16]
	and	eax, 23

; 156  :         _Mystate             = _State;

	mov	DWORD PTR [rcx+16], eax

; 157  :         const auto _Filtered = _State & _Except;

	and	eax, DWORD PTR [rcx+20]

; 158  :         if (_Filtered) {

	je	SHORT $LN6@setstate

; 159  :             if (_Reraise) {

	test	r8b, r8b
	je	SHORT $LN7@setstate
	jmp	SHORT $LN20@setstate
$LN6@setstate:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ios

; 52   :     }

	add	rsp, 104				; 00000068H
	ret	0
$LN20@setstate:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase

; 160  :                 _RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	int	3
$LN7@setstate:
	mov	QWORD PTR [rsp+96], rbx

; 161  :             }
; 162  : 
; 163  :             const char* _Msg;
; 164  :             if (_Filtered & ios_base::badbit) {

	test	al, 4
	je	SHORT $LN8@setstate

; 165  :                 _Msg = "ios_base::badbit set";

	lea	rbx, OFFSET FLAT:??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@
	jmp	SHORT $LN10@setstate
$LN8@setstate:

; 166  :             } else if (_Filtered & ios_base::failbit) {

	test	al, 2
	lea	rbx, OFFSET FLAT:??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@
	lea	rax, OFFSET FLAT:??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@
	cmove	rbx, rax
$LN10@setstate:

; 167  :                 _Msg = "ios_base::failbit set";
; 168  :             } else {
; 169  :                 _Msg = "ios_base::eofbit set";
; 170  :             }
; 171  : 
; 172  :             _THROW(failure(_Msg));

	mov	edx, 1
	lea	rcx, QWORD PTR $T1[rsp]
	call	?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z ; std::make_error_code
	mov	r8, rax
	lea	rcx, QWORD PTR $T2[rsp]
	mov	rdx, rbx
	call	??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z ; std::ios_base::failure::failure
	lea	rdx, OFFSET FLAT:_TI5?AVfailure@ios_base@std@@
	lea	rcx, QWORD PTR $T2[rsp]
	call	_CxxThrowException
	mov	rbx, QWORD PTR [rsp+96]
$LN18@setstate:
?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z ENDP ; std::basic_ios<char,std::char_traits<char> >::setstate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\list
;	COMDAT ??0?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >, COMDAT

; 353  :     _List_val() noexcept : _Myhead(), _Mysize(0) {} // initialize data

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	rax, rcx
	ret	0
??0?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring
;	COMDAT ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ
_TEXT	SEGMENT
?eof@?$_Narrow_char_traits@DH@std@@SAHXZ PROC		; std::_Narrow_char_traits<char,int>::eof, COMDAT

; 472  :         return static_cast<int_type>(EOF);

	mov	eax, -1

; 473  :     }

	ret	0
?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ENDP		; std::_Narrow_char_traits<char,int>::eof
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring
;	COMDAT ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NHH@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NHH@Z PROC ; std::_Narrow_char_traits<char,int>::eq_int_type, COMDAT

; 464  :         return _Left == _Right;

	cmp	ecx, edx
	sete	al

; 465  :     }

	ret	0
?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NHH@Z ENDP ; std::_Narrow_char_traits<char,int>::eq_int_type
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\streambuf
;	COMDAT ?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBA_JXZ
_TEXT	SEGMENT
this$ = 8
?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBA_JXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Pnavail, COMDAT

; 261  :         return *_IPnext ? *_IPcount : 0;

	mov	rax, QWORD PTR [rcx+64]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN3@Pnavail
	mov	rax, QWORD PTR [rcx+88]
	movsxd	rax, DWORD PTR [rax]

; 262  :     }

	ret	0
$LN3@Pnavail:

; 261  :         return *_IPnext ? *_IPcount : 0;

	xor	eax, eax
	cdqe

; 262  :     }

	ret	0
?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBA_JXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::_Pnavail
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\streambuf
;	COMDAT ?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ
_TEXT	SEGMENT
this$ = 8
?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Pninc, COMDAT

; 256  :         --*_IPcount;

	mov	rax, QWORD PTR [rcx+88]
	dec	DWORD PTR [rax]

; 257  :         return (*_IPnext)++;

	mov	rdx, QWORD PTR [rcx+64]
	mov	rax, QWORD PTR [rdx]
	lea	rcx, QWORD PTR [rax+1]
	mov	QWORD PTR [rdx], rcx

; 258  :     }

	ret	0
?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::_Pninc
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\streambuf
;	COMDAT ?pubsync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHXZ
_TEXT	SEGMENT
this$ = 8
?pubsync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHXZ PROC ; std::basic_streambuf<char,std::char_traits<char> >::pubsync, COMDAT

; 121  :         return sync();

	mov	rax, QWORD PTR [rcx]
	rex_jmp	QWORD PTR [rax+104]
?pubsync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHXZ ENDP ; std::basic_streambuf<char,std::char_traits<char> >::pubsync
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream
;	COMDAT ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base, COMDAT

; 82   :         __CLR_OR_THIS_CALL ~_Sentry_base() noexcept { // destroy after unlocking

$LN7:
	sub	rsp, 40					; 00000028H

; 83   :             const auto _Rdbuf = _Myostr.rdbuf();

	mov	rdx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rdx]
	movsxd	rcx, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR [rcx+rdx+72]

; 84   :             if (_Rdbuf) {

	test	rcx, rcx
	je	SHORT $LN2@Sentry_bas

; 85   :                 _Rdbuf->_Unlock();

	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	npad	1
$LN2@Sentry_bas:

; 86   :             }
; 87   :         }

	add	rsp, 40					; 00000028H
	ret	0
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream
;	COMDAT ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Ostr$ = 56
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base, COMDAT

; 75   :         __CLR_OR_THIS_CALL _Sentry_base(basic_ostream& _Ostr) : _Myostr(_Ostr) { // lock the stream buffer, if there

$LN7:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	QWORD PTR [rcx], rdx
	mov	rbx, rcx

; 76   :             const auto _Rdbuf = _Myostr.rdbuf();

	mov	rax, QWORD PTR [rdx]
	movsxd	r8, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR [r8+rdx+72]

; 77   :             if (_Rdbuf) {

	test	rcx, rcx
	je	SHORT $LN4@Sentry_bas

; 78   :                 _Rdbuf->_Lock();

	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+8]
$LN4@Sentry_bas:

; 79   :             }
; 80   :         }

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAAAEAU?$default_delete@V_Facet_base@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAAAEAU?$default_delete@V_Facet_base@std@@@2@XZ PROC ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Get_first, COMDAT

; 1504 :         return *this;

	mov	rax, rcx

; 1505 :     }

	ret	0
?_Get_first@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAAAEAU?$default_delete@V_Facet_base@std@@@2@XZ ENDP ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\memory
;	COMDAT ??R?$default_delete@V_Facet_base@std@@@std@@QEBAXPEAV_Facet_base@1@@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
??R?$default_delete@V_Facet_base@std@@@std@@QEBAXPEAV_Facet_base@1@@Z PROC ; std::default_delete<std::_Facet_base>::operator(), COMDAT

; 3298 :     _CONSTEXPR23 void operator()(_Ty* _Ptr) const noexcept /* strengthened */ { // delete a pointer

	mov	r8, rdx

; 3299 :         static_assert(0 < sizeof(_Ty), "can't delete an incomplete type");
; 3300 :         delete _Ptr;

	test	rdx, rdx
	je	SHORT $LN3@operator
	mov	rax, QWORD PTR [rdx]
	mov	rcx, r8
	mov	edx, 1
	rex_jmp	QWORD PTR [rax]
$LN3@operator:

; 3301 :     }

	ret	0
??R?$default_delete@V_Facet_base@std@@@std@@QEBAXPEAV_Facet_base@1@@Z ENDP ; std::default_delete<std::_Facet_base>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\streambuf
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream
;	COMDAT ?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 48
this$ = 112
?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ PROC ; std::basic_ostream<char,std::char_traits<char> >::_Osfx, COMDAT

; 165  :     void __CLR_OR_THIS_CALL _Osfx() noexcept { // perform any wrapup

$LN35:
	push	rbx
	sub	rsp, 96					; 00000060H
	mov	rbx, rcx

; 167  :         if (this->good() && this->flags() & ios_base::unitbuf) {

	mov	rax, QWORD PTR [rcx]
	movsxd	rdx, DWORD PTR [rax+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase

; 206  :         return rdstate() == ios_base::goodbit;

	cmp	DWORD PTR [rdx+rcx+16], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream

; 167  :         if (this->good() && this->flags() & ios_base::unitbuf) {

	jne	SHORT $LN21@Osfx
	test	BYTE PTR [rdx+rcx+24], 2
	je	SHORT $LN21@Osfx

; 168  :             if (_Myios::rdbuf()->pubsync() == -1) { // flush stream as needed

	mov	rcx, QWORD PTR [rdx+rcx+72]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\streambuf

; 121  :         return sync();

	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+104]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream

; 168  :             if (_Myios::rdbuf()->pubsync() == -1) { // flush stream as needed

	cmp	eax, -1
	jne	SHORT $LN21@Osfx

; 169  :                 _Myios::setstate(ios_base::badbit);

	mov	rax, QWORD PTR [rbx]
	movsxd	rcx, DWORD PTR [rax+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase

; 155  :         _State &= _Statmask;

	mov	eax, DWORD PTR [rcx+rbx+16]
	and	eax, 19
	or	eax, 4

; 156  :         _Mystate             = _State;

	mov	DWORD PTR [rcx+rbx+16], eax

; 157  :         const auto _Filtered = _State & _Except;

	and	eax, DWORD PTR [rcx+rbx+20]

; 158  :         if (_Filtered) {

	jne	SHORT $LN34@Osfx
$LN21@Osfx:
$LN10@Osfx:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream

; 174  :     }

	add	rsp, 96					; 00000060H
	pop	rbx
	ret	0
$LN34@Osfx:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase

; 164  :             if (_Filtered & ios_base::badbit) {

	test	al, 4
	je	SHORT $LN23@Osfx

; 165  :                 _Msg = "ios_base::badbit set";

	lea	rbx, OFFSET FLAT:??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@
	jmp	SHORT $LN25@Osfx
$LN23@Osfx:

; 166  :             } else if (_Filtered & ios_base::failbit) {

	test	al, 2
	lea	rbx, OFFSET FLAT:??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@
	lea	rax, OFFSET FLAT:??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@
	cmove	rbx, rax
$LN25@Osfx:

; 167  :                 _Msg = "ios_base::failbit set";
; 168  :             } else {
; 169  :                 _Msg = "ios_base::eofbit set";
; 170  :             }
; 171  : 
; 172  :             _THROW(failure(_Msg));

	mov	edx, 1
	lea	rcx, QWORD PTR $T1[rsp]
	call	?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z ; std::make_error_code
	mov	r8, rax
	mov	rdx, rbx
	lea	rcx, QWORD PTR $T2[rsp]
	call	??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z ; std::ios_base::failure::failure
	lea	rdx, OFFSET FLAT:_TI5?AVfailure@ios_base@std@@
	lea	rcx, QWORD PTR $T2[rsp]
	call	_CxxThrowException
	int	3
$LN31@Osfx:
	int	3
?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Osfx
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ostream
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 48
this$ = 112
?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::_Osfx'::`1'::catch$0

; 172  :         _CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ$0:

; 173  :         _CATCH_END

	mov	rax, 0
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
	int	3
?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::_Osfx'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ios
;	COMDAT ?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ PROC ; std::basic_ios<char,std::char_traits<char> >::tie, COMDAT

; 68   :         return _Tiestr;

	mov	rax, QWORD PTR [rcx+80]

; 69   :     }

	ret	0
?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ ENDP ; std::basic_ios<char,std::char_traits<char> >::tie
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ios
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ios
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ios
;	COMDAT ?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 48
this$ = 112
_State$ = 120
_Reraise$ = 128
?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z PROC ; std::basic_ios<char,std::char_traits<char> >::clear, COMDAT

; 38   :     void __CLR_OR_THIS_CALL clear(iostate _State = goodbit, bool _Reraise = false) {

$LN18:
	sub	rsp, 104				; 00000068H

; 39   :         // set state, possibly reraise exception
; 40   :         ios_base::clear(_State | (_Mystrbuf ? ios_base::goodbit : ios_base::badbit), _Reraise);

	xor	r9d, r9d
	mov	eax, 4
	cmp	QWORD PTR [rcx+72], r9
	cmovne	eax, r9d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase

; 155  :         _State &= _Statmask;

	or	eax, edx
	and	eax, 23

; 156  :         _Mystate             = _State;

	mov	DWORD PTR [rcx+16], eax

; 157  :         const auto _Filtered = _State & _Except;

	and	eax, DWORD PTR [rcx+20]

; 158  :         if (_Filtered) {

	je	SHORT $LN4@clear

; 159  :             if (_Reraise) {

	test	r8b, r8b
	je	SHORT $LN5@clear
	jmp	SHORT $LN17@clear
$LN4@clear:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\ios

; 41   :     }

	add	rsp, 104				; 00000068H
	ret	0
$LN17@clear:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xiosbase

; 160  :                 _RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	int	3
$LN5@clear:
	mov	QWORD PTR [rsp+96], rbx

; 161  :             }
; 162  : 
; 163  :             const char* _Msg;
; 164  :             if (_Filtered & ios_base::badbit) {

	test	al, 4
	je	SHORT $LN6@clear

; 165  :                 _Msg = "ios_base::badbit set";

	lea	rbx, OFFSET FLAT:??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@
	jmp	SHORT $LN8@clear
$LN6@clear:

; 166  :             } else if (_Filtered & ios_base::failbit) {

	test	al, 2
	lea	rbx, OFFSET FLAT:??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@
	lea	rax, OFFSET FLAT:??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@
	cmove	rbx, rax
$LN8@clear:

; 167  :                 _Msg = "ios_base::failbit set";
; 168  :             } else {
; 169  :                 _Msg = "ios_base::eofbit set";
; 170  :             }
; 171  : 
; 172  :             _THROW(failure(_Msg));

	mov	edx, 1
	lea	rcx, QWORD PTR $T1[rsp]
	call	?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z ; std::make_error_code
	mov	r8, rax
	lea	rcx, QWORD PTR $T2[rsp]
	mov	rdx, rbx
	call	??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z ; std::ios_base::failure::failure
	lea	rdx, OFFSET FLAT:_TI5?AVfailure@ios_base@std@@
	lea	rcx, QWORD PTR $T2[rsp]
	call	_CxxThrowException
	mov	rbx, QWORD PTR [rsp+96]
$LN15@clear:
?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z ENDP ; std::basic_ios<char,std::char_traits<char> >::clear
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xstring
;	COMDAT ?to_int_type@?$_Narrow_char_traits@DH@std@@SAHD@Z
_TEXT	SEGMENT
_Ch$ = 8
?to_int_type@?$_Narrow_char_traits@DH@std@@SAHD@Z PROC	; std::_Narrow_char_traits<char,int>::to_int_type, COMDAT

; 460  :         return static_cast<unsigned char>(_Ch);

	movzx	eax, cl

; 461  :     }

	ret	0
?to_int_type@?$_Narrow_char_traits@DH@std@@SAHD@Z ENDP	; std::_Narrow_char_traits<char,int>::to_int_type
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory
;	COMDAT ??$?0M@?$_Compressed_pair@U?$equal_to@J@std@@M$00@std@@QEAA@U_Zero_then_variadic_args_t@1@$$QEAM@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
<_Val2_0>$ = 24
??$?0M@?$_Compressed_pair@U?$equal_to@J@std@@M$00@std@@QEAA@U_Zero_then_variadic_args_t@1@$$QEAM@Z PROC ; std::_Compressed_pair<std::equal_to<long>,float,1>::_Compressed_pair<std::equal_to<long>,float,1><float>, COMDAT

; 1496 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	eax, DWORD PTR [r8]
	mov	DWORD PTR [rcx], eax
	mov	rax, rcx
	ret	0
??$?0M@?$_Compressed_pair@U?$equal_to@J@std@@M$00@std@@QEAA@U_Zero_then_variadic_args_t@1@$$QEAM@Z ENDP ; std::_Compressed_pair<std::equal_to<long>,float,1>::_Compressed_pair<std::equal_to<long>,float,1><float>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory
;	COMDAT ??$?0U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@?$allocator@U?$_List_node@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@PEAX@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
??$?0U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@?$allocator@U?$_List_node@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@PEAX@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@1@@Z PROC ; std::allocator<std::_List_node<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,void *> >::allocator<std::_List_node<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,void *> ><std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT

; 943  :     constexpr allocator(const allocator<_Other>&) noexcept {}

	mov	rax, rcx
	ret	0
??$?0U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@?$allocator@U?$_List_node@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@PEAX@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@1@@Z ENDP ; std::allocator<std::_List_node<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,void *> >::allocator<std::_List_node<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,void *> ><std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\memory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\memory
;	COMDAT ??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z PROC ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> ><std::default_delete<std::_Facet_base>,0>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory

; 1496 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	QWORD PTR [rcx], rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\memory

; 3353 :     _CONSTEXPR23 explicit unique_ptr(pointer _Ptr) noexcept : _Mypair(_Zero_then_variadic_args_t{}, _Ptr) {}

	mov	rax, rcx
	ret	0
??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z ENDP ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> ><std::default_delete<std::_Facet_base>,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\type_traits
;	COMDAT ??$forward@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@0@AEBV10@@Z PROC ; std::forward<std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &>, COMDAT

; 1537 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1538 : }

	ret	0
??$forward@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@0@AEBV10@@Z ENDP ; std::forward<std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory
;	COMDAT ??$?0AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
_Val1$dead$ = 24
??$?0AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@1@@Z PROC ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > > >,1>::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > > >,1><std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\vector

; 400  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory

; 1501 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	rax, rcx
	ret	0
??$?0AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@1@@Z ENDP ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > > >,1>::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > > >,1><std::allocator<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xutility
;	COMDAT ??$construct_at@PEAU?$_List_node@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@PEAX@std@@AEAPEAU12@$0A@@std@@YAPEAPEAU?$_List_node@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@PEAX@0@QEAPEAU10@AEAPEAU10@@Z
_TEXT	SEGMENT
_Location$ = 8
<_Args_0>$ = 16
??$construct_at@PEAU?$_List_node@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@PEAX@std@@AEAPEAU12@$0A@@std@@YAPEAPEAU?$_List_node@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@PEAX@0@QEAPEAU10@AEAPEAU10@@Z PROC ; std::construct_at<std::_List_node<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,void *> *,std::_List_node<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,void *> * &,0>, COMDAT

; 375  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, rcx

; 376  : }

	ret	0
??$construct_at@PEAU?$_List_node@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@PEAX@std@@AEAPEAU12@$0A@@std@@YAPEAPEAU?$_List_node@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@PEAX@0@QEAPEAU10@AEAPEAU10@@Z ENDP ; std::construct_at<std::_List_node<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,void *> *,std::_List_node<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,void *> * &,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\utility
;	COMDAT ??$exchange@PEAV_Facet_base@std@@$$T@std@@YAPEAV_Facet_base@0@AEAPEAV10@$$QEA$$T@Z
_TEXT	SEGMENT
_Val$ = 8
_New_val$ = 16
??$exchange@PEAV_Facet_base@std@@$$T@std@@YAPEAV_Facet_base@0@AEAPEAV10@$$QEA$$T@Z PROC ; std::exchange<std::_Facet_base *,std::nullptr_t>, COMDAT

; 755  :     // assign _New_val to _Val, return previous _Val
; 756  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);
; 757  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	rdx, QWORD PTR [rdx]
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rcx], rdx

; 758  :     return _Old_val;
; 759  : }

	ret	0
??$exchange@PEAV_Facet_base@std@@$$T@std@@YAPEAV_Facet_base@0@AEAPEAV10@$$QEA$$T@Z ENDP ; std::exchange<std::_Facet_base *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > > >::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > > >, COMDAT

; 400  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
	mov	rax, rcx
	ret	0
??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > > >::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory
;	COMDAT ??$?0U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
??$?0U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@1@@Z PROC ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > >::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > ><std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT

; 943  :     constexpr allocator(const allocator<_Other>&) noexcept {}

	mov	rax, rcx
	ret	0
??$?0U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBJV?$tuple@VClient@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@std@@@std@@@1@@Z ENDP ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > >::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > ><std::pair<long const ,std::tuple<Client,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\xmemory
;	COMDAT ??$?0AEAPEAV_Facet_base@std@@@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV_Facet_base@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
<_Val2_0>$ = 24
??$?0AEAPEAV_Facet_base@std@@@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV_Facet_base@1@@Z PROC ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1><std::_Facet_base * &>, COMDAT

; 1496 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	rax, QWORD PTR [r8]
	mov	QWORD PTR [rcx], rax
	mov	rax, rcx
	ret	0
??$?0AEAPEAV_Facet_base@std@@@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV_Facet_base@1@@Z ENDP ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1><std::_Facet_base * &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\include\type_traits
;	COMDAT ??$forward@AEAPEAV_Facet_base@std@@@std@@YAAEAPEAV_Facet_base@0@AEAPEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEAPEAV_Facet_base@std@@@std@@YAAEAPEAV_Facet_base@0@AEAPEAV10@@Z PROC ; std::forward<std::_Facet_base * &>, COMDAT

; 1537 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1538 : }

	ret	0
??$forward@AEAPEAV_Facet_base@std@@@std@@YAAEAPEAV_Facet_base@0@AEAPEAV10@@Z ENDP ; std::forward<std::_Facet_base * &>
_TEXT	ENDS
END
